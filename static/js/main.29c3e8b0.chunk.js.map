{"version":3,"sources":["App.module.css","components/CashPanel/CashPanel.module.css","components/TypeEditPanel/TypeEditPanel.module.css","components/Body/Body.module.css","components/Menu/Menu.module.css","stores/UseStores.ts","utility/Helpers.ts","models/Enum.ts","components/CashPanel/CashPanel.tsx","components/RecordsPanel/RecordsPanel.tsx","components/TypesPanel/TypesPanel.tsx","components/MenuPanel/MenuPanel.tsx","components/TypeEditPanel/TypeEditPanel.tsx","routes/Routes.ts","routes/RouteWithSubRoutes.tsx","components/Body/Body.tsx","components/LinkTab/LinkTab.tsx","components/Menu/Menu.tsx","services/CacheService.ts","stores/AppStore.ts","stores/ServicesStore.ts","stores/TypesStore.ts","stores/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStores","useContext","MobXProviderContext","store","Helpers","combineStyles","result","styles","length","otherStyles","slice","forEach","s","Object","keys","k","MenuTypes","useStyles","makeStyles","theme","createStyles","tabPanel","gridGap","spacing","cardLabelText","marginTop","color","palette","text","primary","CashPanel","observer","typesStore","css","classes","useTheme","getThemeColorStyle","split","p","Grid","container","className","grid","types","map","type","key","name","item","xs","alignItems","justify","IconButton","card","label","cardLabel","IconComponent","style","iconColor","fontSize","cardIcon","Typography","variant","RecordsPanel","TypesPanel","List","component","list","ListItem","button","ListItemAvatar","ListItemText","primaryTypographyProps","Divider","MenuPanel","modalContainer","zIndex","modal","background","paper","firstBar","light","secondBar","dark","closeIcon","default","doneIcon","body","padding","backdrop","colorDialogBox","colorDialogHeader","minHeight","mixins","toolbar","paddingLeft","paddingRight","colorDialogBody","colorDialogFooter","iconDialogBox","iconDialogHeader","iconDialogBody","iconDialogFooter","TypeEditPanel","colorRef","React","useRef","useState","colorPickerOpened","setColorPickerOpened","colorHandleClose","main","setColor","appliedColor","setAppliedColor","iconRef","iconPickerOpened","setIconPickerOpened","iconHandleClose","setIcon","setAppliedIcon","Fade","in","timeout","Slide","direction","mountOnEnter","unmountOnExit","Box","overlay","display","AppBar","position","Toolbar","emptyBox","Close","Done","TextField","error","fullWidth","helperText","ref","select","disabled","InputLabelProps","SelectProps","value","onClick","MenuItem","Backdrop","open","Popper","anchorEl","current","role","undefined","transition","disablePortal","ClickAwayListener","onClickAway","Paper","onChange","pickerProps","hex","Button","Menu","Icon","routes","path","exact","components","Cash","Records","Types","RouteWithSubRoutes","route","render","props","Array","isArray","Component","index","fab","bottom","right","Body","appStore","i","selectedMenuUrl","to","prefix","getAddButtonLinkUrl","Fab","size","aria-label","LinkTab","Tab","Link","icon","event","currentUrl","currentTarget","pathname","preventDefault","menuIcon","comboButton","searchIcon","history","useHistory","useEffect","loadSelectedMenuIndex","location","listener","listen","menuTabProps","href","id","selectedMenuIndex","headerTitle","headerBox","endIcon","ArrowDropDown","comboButtonTextBox","Date","toDateString","Search","Tabs","newValue","setSelectedMenuIndex","AttachMoney","MenuBook","MoreHoriz","CacheService","this","get","then","r","version","clear","add","entry","entryStr","JSON","stringify","date","localStorage","setItem","validAt","enableCache","getItem","console","log","parsedResult","parse","AppStore","AppJson","services","observable","action","url","urlParts","ServicesStore","cache","TypesStore","initializeDefaultTypes","push","Fastfood","LocalGroceryStore","DirectionsBus","LocalMall","LocalGasStation","ChildFriendly","ImportantDevices","MoreVert","servicesStore","stores","App","CssBaseline","page","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.29c3e8b0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__2L-Jj\",\"footer\":\"App_footer__12-B7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CashPanel_grid__1M0h2\",\"card\":\"CashPanel_card__2ETq-\",\"cardLabel\":\"CashPanel_cardLabel__3f2v_\",\"lastCard\":\"CashPanel_lastCard__2tePY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"TypeEditPanel_modalContainer__o8c64\",\"emptyBox\":\"TypeEditPanel_emptyBox__2akL7\",\"body\":\"TypeEditPanel_body__2pBnt\",\"colorDialogHeader\":\"TypeEditPanel_colorDialogHeader__2qD8B\",\"iconDialogHeader\":\"TypeEditPanel_iconDialogHeader__2Q3n4\",\"colorDialogFooter\":\"TypeEditPanel_colorDialogFooter__2ZN7j\",\"iconDialogFooter\":\"TypeEditPanel_iconDialogFooter__3L6_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__2G_GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBox\":\"Menu_headerBox__1Me5e\",\"headerTitle\":\"Menu_headerTitle__2LUUc\",\"comboButton\":\"Menu_comboButton__OoKdQ\",\"comboButtonTextBox\":\"Menu_comboButtonTextBox__1axJS\"};","import { MobXProviderContext } from 'mobx-react';\r\nimport { useContext } from 'react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext).store;\r\n};\r\nexport default useStores;\r\n","class Helpers {\r\n  static combineStyles = (...styles: any) => {\r\n    let result: any;\r\n    if (styles.length) {\r\n      result = { ...styles[0] };\r\n      const otherStyles = styles.slice(1);\r\n      if (otherStyles.length) {\r\n        otherStyles.forEach((s: any) => {\r\n          Object.keys(s).forEach((k: string) => {\r\n            if (!result[k]) {\r\n              result[k] = s[k];\r\n            } else {\r\n              result[k] += ` ${s[k]}`;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default Helpers;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport enum MenuTypes {\r\n  Cash = 'cash',\r\n  Records = 'records',\r\n  Types = 'types',\r\n  Menu = 'menu',\r\n}\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabPanel: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CashPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <Grid container className={css.grid} spacing={2}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <Grid\r\n          key={type.name}\r\n          item\r\n          xs\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <IconButton className={css.card} classes={{ label: css.cardLabel }}>\r\n            <type.IconComponent\r\n              style={{\r\n                color: getThemeColorStyle(type.iconColor),\r\n                fontSize: '2rem',\r\n              }}\r\n              className={css.cardIcon}\r\n            />\r\n            <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n              {type.label}\r\n            </Typography>\r\n          </IconButton>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CashPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst RecordsPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <div>Not realized yet</div>;\r\n});\r\n\r\nexport default RecordsPanel;\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypesPanel.module.css';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst TypesPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  const css = Helpers.combineStyles({}, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={css.list}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <div key={type.name}>\r\n          <ListItem button>\r\n            <ListItemAvatar>\r\n              <type.IconComponent\r\n                style={{\r\n                  color: getThemeColorStyle(type.iconColor),\r\n                  fontSize: '2rem',\r\n                }}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={type.label}\r\n              primaryTypographyProps={{ variant: 'subtitle1' }}\r\n            />\r\n          </ListItem>\r\n          <Divider component=\"div\" />\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default TypesPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst MenuPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <></>;\r\n});\r\n\r\nexport default MenuPanel;\r\n","import {\r\n  AppBar,\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  ClickAwayListener,\r\n  createStyles,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Popper,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport {\r\n  Close as CloseIcon,\r\n  Done as DoneIcon,\r\n  Menu as MenuIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypeEditPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    closeIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    doneIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogBox: {\r\n      // background: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    colorDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    colorDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    iconDialogBox: {\r\n      // background: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    iconDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    iconDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    iconDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst TypeEditPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const colorRef = React.useRef<HTMLDivElement>(null);\r\n  const [colorPickerOpened, setColorPickerOpened] = React.useState(false);\r\n  const colorHandleOpen = () => {\r\n    setColorPickerOpened(true);\r\n  };\r\n  const colorHandleClose = () => {\r\n    setColorPickerOpened(false);\r\n  };\r\n  const [color, setColor] = React.useState(theme.palette.primary.main);\r\n  const [appliedColor, setAppliedColor] = React.useState(\r\n    theme.palette.primary.main\r\n  );\r\n  const colorChange = (pickerProps: any) => {\r\n    setColor(pickerProps.hex);\r\n  };\r\n  const applyColorSelect = () => {\r\n    setAppliedColor(color);\r\n    colorHandleClose();\r\n  };\r\n  const cancelColorSelect = () => {\r\n    setColor(appliedColor);\r\n    colorHandleClose();\r\n  };\r\n\r\n  const iconRef = React.useRef<HTMLDivElement>(null);\r\n  const [iconPickerOpened, setIconPickerOpened] = React.useState(false);\r\n  const iconHandleOpen = () => {\r\n    setIconPickerOpened(true);\r\n  };\r\n  const iconHandleClose = () => {\r\n    setIconPickerOpened(false);\r\n  };\r\n  const [icon, setIcon] = React.useState('');\r\n  const [appliedIcon, setAppliedIcon] = React.useState('');\r\n  const iconChange = (newIcon: string) => {\r\n    setIcon(newIcon);\r\n  };\r\n  const applyIconSelect = () => {\r\n    setAppliedIcon(color);\r\n    iconHandleClose();\r\n  };\r\n  const cancelIconSelect = () => {\r\n    setIcon(appliedColor);\r\n    iconHandleClose();\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <Box\r\n            className={css.overlay}\r\n            style={{ display: colorPickerOpened ? 'block' : 'none' }}\r\n          />\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">Новый тип</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              <IconButton>\r\n                <CloseIcon className={css.closeIcon} />\r\n              </IconButton>\r\n              <IconButton>\r\n                <DoneIcon className={css.doneIcon} />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error\r\n              fullWidth\r\n              label=\"Name\"\r\n              helperText=\"Type name is required\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Position\"\r\n              helperText=\"If empty then it will be placed to the end of list\"\r\n            />\r\n            <TextField\r\n              ref={colorRef}\r\n              select\r\n              disabled\r\n              fullWidth\r\n              label=\"Color\"\r\n              InputLabelProps={{ style: { color: appliedColor } }}\r\n              SelectProps={{ style: { color: appliedColor } }}\r\n              value={0}\r\n              onClick={colorHandleOpen}\r\n            >\r\n              <MenuItem value={0}>{appliedColor}</MenuItem>\r\n            </TextField>\r\n            <Backdrop open={colorPickerOpened} className={css.backdrop}>\r\n              <Popper\r\n                open={colorPickerOpened}\r\n                anchorEl={colorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                className={css.colorDialogBox}\r\n              >\r\n                <ClickAwayListener onClickAway={colorHandleClose}>\r\n                  <Paper>\r\n                    <div className={css.colorDialogHeader}>\r\n                      <Typography variant=\"h6\">Выберите цвет</Typography>\r\n                    </div>\r\n                    <div className={css.colorDialogBody}>\r\n                      <ChromePicker color={color} onChange={colorChange} />\r\n                    </div>\r\n                    <div className={css.colorDialogFooter}>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={applyColorSelect}\r\n                      >\r\n                        Выбрать\r\n                      </Button>\r\n                      <Button variant=\"contained\" onClick={cancelColorSelect}>\r\n                        Отмена\r\n                      </Button>\r\n                    </div>\r\n                  </Paper>\r\n                </ClickAwayListener>\r\n              </Popper>\r\n            </Backdrop>\r\n            <TextField\r\n              ref={iconRef}\r\n              select\r\n              disabled\r\n              fullWidth\r\n              label=\"Icon\"\r\n              value={0}\r\n              onClick={iconHandleOpen}\r\n            >\r\n              <MenuItem value={0}>\r\n                <MenuIcon />\r\n              </MenuItem>\r\n            </TextField>\r\n            <Backdrop open={iconPickerOpened} className={css.backdrop}>\r\n              <Popper\r\n                open={iconPickerOpened}\r\n                anchorEl={iconRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                className={css.iconDialogBox}\r\n              >\r\n                <ClickAwayListener onClickAway={iconHandleClose}>\r\n                  <Paper>\r\n                    <div className={css.iconDialogHeader}>\r\n                      <Typography variant=\"h6\">Выберите иконку</Typography>\r\n                    </div>\r\n                    <div className={css.iconDialogBody}>\r\n                      <Icon>assignment_turned_in</Icon>\r\n                    </div>\r\n                    <div className={css.iconDialogFooter}>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={applyIconSelect}\r\n                      >\r\n                        Выбрать\r\n                      </Button>\r\n                      <Button variant=\"contained\" onClick={cancelIconSelect}>\r\n                        Отмена\r\n                      </Button>\r\n                    </div>\r\n                  </Paper>\r\n                </ClickAwayListener>\r\n              </Popper>\r\n            </Backdrop>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default TypeEditPanel;\r\n","import CashPanel from '../components/CashPanel/CashPanel';\r\nimport RecordsPanel from '../components/RecordsPanel/RecordsPanel';\r\nimport TypesPanel from '../components/TypesPanel/TypesPanel';\r\nimport MenuPanel from '../components/MenuPanel/MenuPanel';\r\nimport { MenuTypes } from '../models/Enum';\r\nimport TypeEditPanel from '../components/TypeEditPanel/TypeEditPanel';\r\n\r\nconst routes = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypes.Cash}`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypes.Records}`,\r\n    exact: true,\r\n    components: RecordsPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypes.Types}`,\r\n    exact: true,\r\n    components: TypesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypes.Types}/add`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypes.Menu}`,\r\n    exact: true,\r\n    components: MenuPanel,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst RouteWithSubRoutes = (route: any) => {\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props: any) => {\r\n        if (Array.isArray(route.components)) {\r\n          return route.components.map((Component: any, index: number) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <Component key={index} {...props} routes={route.routes} />\r\n          ));\r\n        }\r\n        return <route.components {...props} routes={route.routes} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSubRoutes;\r\n","import { createStyles, Fab, makeStyles, Theme } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../routes/Routes';\r\nimport RouteWithSubRoutes from '../../routes/RouteWithSubRoutes';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './Body.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport { MenuTypes } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Body = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const getAddButtonLinkUrl = () => {\r\n    let prefix = appStore.selectedMenuUrl;\r\n    if (prefix === '/') {\r\n      prefix += MenuTypes.Cash;\r\n    }\r\n    return `${appStore.selectedMenuUrl}/add`;\r\n  };\r\n\r\n  return (\r\n    <div className={css.body}>\r\n      {routes.map((route, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RouteWithSubRoutes key={i} {...route} />\r\n      ))}\r\n      {appStore.selectedMenuUrl !== `/${MenuTypes.Menu}` && (\r\n        <Link to={getAddButtonLinkUrl()}>\r\n          <Fab\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={css.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Body;\r\n","import { Tab } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  to: string;\r\n  icon?: any;\r\n  currentUrl?: string;\r\n}\r\n\r\nconst LinkTab = observer((props: IProps) => {\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const linkClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    if (props.currentUrl === event.currentTarget.pathname) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      to={props.to}\r\n      label={props.label}\r\n      icon={props.icon}\r\n      onClick={linkClick}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LinkTab;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  List as ListIcon,\r\n  Menu as MenuIcon,\r\n  MenuBook as MenuBookIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Search as SearchIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helpers from '../../utility/Helpers';\r\nimport LinkTab from '../LinkTab/LinkTab';\r\nimport classes from './Menu.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    menuIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    comboButton: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    searchIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n  const menuTabChanged = (event: any, newValue: number) => {\r\n    appStore.setSelectedMenuIndex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    const listener = history.listen(() => {\r\n      appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    });\r\n\r\n    return () => {\r\n      listener();\r\n    };\r\n  });\r\n\r\n  const menuTabProps = (name: string, href?: string) => {\r\n    return {\r\n      id: `menu-tab-${name}`,\r\n      'aria-controls': `menu-tab-${name}`,\r\n      to: href || `/${name}`,\r\n      currentUrl: appStore.selectedMenuUrl,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={css.firstBar}>\r\n        <Toolbar>\r\n          {appStore.selectedMenuIndex === 0 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Внести оплату\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 1 && (\r\n            <Box className={css.headerBox}>\r\n              <IconButton>\r\n                <MenuIcon className={css.menuIcon} />\r\n              </IconButton>\r\n              <Button\r\n                className={css.comboButton}\r\n                endIcon={<ArrowDropDownIcon />}\r\n              >\r\n                <span className={css.comboButtonTextBox}>\r\n                  <span>{new Date().toDateString()}</span>\r\n                  <span>Записей 21</span>\r\n                </span>\r\n              </Button>\r\n              <IconButton>\r\n                <SearchIcon className={css.searchIcon} />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {appStore.selectedMenuIndex === 2 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Типы\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 3 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Еще\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n        <Tabs\r\n          value={appStore.selectedMenuIndex}\r\n          onChange={menuTabChanged}\r\n          aria-label=\"menu tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <LinkTab {...menuTabProps('cash', '/')} icon={<AttachMoneyIcon />} />\r\n          <LinkTab {...menuTabProps('records')} icon={<MenuBookIcon />} />\r\n          <LinkTab {...menuTabProps('types')} icon={<ListIcon />} />\r\n          <LinkTab {...menuTabProps('menu')} icon={<MoreHorizIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Menu;\r\n","import AppStore from '../stores/AppStore';\r\n\r\nexport default class CacheService {\r\n  private appStore: AppStore;\r\n\r\n  constructor(appStore: AppStore) {\r\n    this.appStore = appStore;\r\n    this.get('appVersion', new Date()).then((r) => {\r\n      if (appStore.version !== r) {\r\n        this.clear();\r\n        this.add('appVersion', appStore.version);\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async add(key: string, entry: any) {\r\n    let entryStr: string;\r\n    if (typeof entry !== 'string') {\r\n      entryStr = JSON.stringify({ date: new Date(), entry });\r\n    } else {\r\n      entryStr = entry;\r\n    }\r\n    const result = await localStorage.setItem(key, entryStr);\r\n    return result;\r\n  }\r\n\r\n  public async get<T>(key: string, validAt?: Date): Promise<any> {\r\n    let result: string | null = null;\r\n    if (!this.appStore.enableCache) {\r\n      return result;\r\n    }\r\n    result = await localStorage.getItem(key);\r\n    if (result) {\r\n      console.log(`Key: ${key} loaded from cache`);\r\n    }\r\n    if (!result || !result.length) {\r\n      return result;\r\n    }\r\n    try {\r\n      const parsedResult = JSON.parse(result);\r\n      if (validAt) {\r\n        if (new Date(parsedResult.date) < validAt) {\r\n          return parsedResult.entry;\r\n        }\r\n        console.log(\r\n          `Key: ${key} date expired. ValidAt: ${validAt}. ExpiredAt: ${parsedResult.date}`\r\n        );\r\n        return null;\r\n      }\r\n      return parsedResult.entry;\r\n    } catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async clear() {\r\n    await localStorage.clear();\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport * as AppJson from '../../package.json';\r\nimport ServicesStore from './ServicesStore';\r\nimport { MenuTypes } from '../models/Enum';\r\n\r\nclass AppStore {\r\n  version = AppJson.version;\r\n  services!: ServicesStore;\r\n\r\n  // NOTE: when application is change version, cache will be cleared\r\n  @observable enableCache = true;\r\n  @observable selectedMenuIndex = 0;\r\n  @observable selectedMenuUrl = '/';\r\n\r\n  @action setSelectedMenuIndex = (newValue: number) => {\r\n    this.selectedMenuIndex = newValue;\r\n  };\r\n\r\n  @action loadSelectedMenuIndex = (url: string) => {\r\n    const urlParts = url.split('/');\r\n    if (urlParts.length > 1) {\r\n      if (urlParts[1] === MenuTypes.Records) {\r\n        this.selectedMenuIndex = 1;\r\n      } else if (urlParts[1] === MenuTypes.Types) {\r\n        this.selectedMenuIndex = 2;\r\n      } else if (urlParts[1] === MenuTypes.Menu) {\r\n        this.selectedMenuIndex = 3;\r\n      } else {\r\n        this.selectedMenuIndex = 0;\r\n      }\r\n    } else {\r\n      this.selectedMenuIndex = 0;\r\n    }\r\n    if (this.selectedMenuIndex === 0) {\r\n      this.selectedMenuUrl = `/${MenuTypes.Cash}`;\r\n    } else if (this.selectedMenuIndex === 1) {\r\n      this.selectedMenuUrl = `/${MenuTypes.Records}`;\r\n    } else if (this.selectedMenuIndex === 2) {\r\n      this.selectedMenuUrl = `/${MenuTypes.Types}`;\r\n    } else if (this.selectedMenuIndex === 3) {\r\n      this.selectedMenuUrl = `/${MenuTypes.Menu}`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default AppStore;\r\n","import CacheService from '../services/CacheService';\r\n\r\nclass ServicesStore {\r\n  cache: CacheService;\r\n\r\n  constructor(cache: CacheService) {\r\n    this.cache = cache;\r\n  }\r\n}\r\n\r\nexport default ServicesStore;\r\n","import {\r\n  ChildFriendly,\r\n  DirectionsBus,\r\n  Fastfood,\r\n  ImportantDevices,\r\n  LocalGasStation,\r\n  LocalGroceryStore,\r\n  LocalMall,\r\n  MoreVert,\r\n} from '@material-ui/icons';\r\nimport { observable } from 'mobx';\r\nimport TypeEntry from '../models/entries/TypeEntry';\r\n\r\nclass TypesStore {\r\n  @observable types!: TypeEntry[];\r\n\r\n  constructor() {\r\n    this.initializeDefaultTypes();\r\n  }\r\n\r\n  private initializeDefaultTypes = () => {\r\n    this.types = [];\r\n\r\n    this.types.push({\r\n      IconComponent: Fastfood,\r\n      name: 'menuFood',\r\n      iconColor: 'palette.secondary.dark',\r\n      label: 'Еда',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalGroceryStore,\r\n      name: 'menuStore',\r\n      iconColor: 'palette.success.dark',\r\n      label: 'Магазин',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: DirectionsBus,\r\n      name: 'menuBus',\r\n      iconColor: 'palette.warning.dark',\r\n      label: 'Автобус',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalMall,\r\n      name: 'menuClothes',\r\n      iconColor: 'palette.primary.dark',\r\n      label: 'Вещи',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalGasStation,\r\n      name: 'menuGasStation',\r\n      iconColor: 'palette.primary.light',\r\n      label: 'Заправка',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: ChildFriendly,\r\n      name: 'menuChilds',\r\n      iconColor: 'palette.warning.light',\r\n      label: 'Дети',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: ImportantDevices,\r\n      name: 'menuServices',\r\n      iconColor: 'palette.secondary.light',\r\n      label: 'Услуги',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: MoreVert,\r\n      name: 'menuOther',\r\n      iconColor: 'palette.success.light',\r\n      label: 'Другое',\r\n    });\r\n  };\r\n}\r\n\r\nexport default TypesStore;\r\n","import CacheService from '../services/CacheService';\r\nimport AppStore from './AppStore';\r\nimport ServicesStore from './ServicesStore';\r\nimport TypesStore from './TypesStore';\r\n\r\nconst appStore = new AppStore();\r\nconst cacheService = new CacheService(appStore);\r\nconst servicesStore = new ServicesStore(cacheService);\r\nappStore.services = servicesStore;\r\nconst typesStore = new TypesStore();\r\n\r\nconst stores = {\r\n  appStore,\r\n  typesStore,\r\n};\r\n\r\nexport default stores;\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport { Provider } from 'mobx-react';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport classes from './App.module.css';\r\nimport Body from './components/Body/Body';\r\nimport Menu from './components/Menu/Menu';\r\nimport store from './stores';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <CssBaseline />\r\n        <div className={classes.page}>\r\n          <Menu />\r\n          <Body />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/IconsChooser/IconsChooser.module.css","App.module.css","components/CashPanel/CashPanel.module.css","components/RecordsPanel/RecordsPanel.module.css","components/TypeEditPanel/TypeEditPanel.module.css","components/CashEditPanel/CashEditPanel.module.css","components/Body/Body.module.css","components/CurrencyEditPanel/CurrencyEditPanel.module.css","components/FirstTimeShowPanel/FirstTimeShowPanel.module.css","components/Menu/Menu.module.css","stores/UseStores.ts","models/entries/TranslateEntry.ts","utility/Helpers.ts","models/Enum.ts","components/CashPanel/CashPanel.tsx","components/RecordsPanel/RecordsPanel.tsx","components/TypesPanel/TypesPanel.tsx","components/MenuPanel/MenuPanel.tsx","utility/UseDebounce.tsx","components/IconsChooser/IconsChooser.tsx","components/TypeEditPanel/TypeEditPanel.tsx","components/CashEditPanel/CashEditPanel.tsx","routes/Routes.ts","routes/RouteWithSubRoutes.tsx","components/SnackErrors/SnackErrors.tsx","components/CurrencyEditPanel/CurrencyEditPanel.tsx","components/FirstTimeShowPanel/FirstTimeShowPanel.tsx","components/Body/Body.tsx","components/LinkTab/LinkTab.tsx","components/Menu/Menu.tsx","services/CacheService.ts","stores/AppStore.ts","stores/ServicesStore.ts","models/entries/TypeEntry.ts","stores/TypesStore.ts","stores/IconsStore.ts","models/entries/CashEntry.ts","stores/CashStore.ts","models/entries/LanguageEntry.ts","models/entries/CurrencyEntry.ts","models/entries/ErrorEntry.ts","stores/PropertiesStore.ts","stores/TranslatesStore.ts","stores/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStores","useContext","MobXProviderContext","store","TranslateEntry","MainProperties","Language","LanguageIsRequired","Currency","CurrencyIsRequired","AddNewCurrency","Save","LanguageSelectionIsRequired","CurrencySelectionIsRequired","NewCurrency","Name","NameIsRequiredForExampleUSD","Symbol","SymbolIsRequiredForExample$","CurrencyNameIsRequired","CurrencySymbolIsRequired","CurrencyWithThisNameIsAlreadyExists","AddPayment","RecordsN","Types","More","PaymentEdit","PaymentNew","PaymentType","PaymentTypeIsRequired","Date","Time","Description","PaymentTotal","PaymentTotalIsRequired","TypeEdit","TypeNew","IDIsRequired","NameIsRequired","PositionInTheList","PositionInTheListIsRequired","IconColor","Icon","SelectTheColorOfTheIcon","Select","Cancel","SelectIcon","IconsTypes","EnterToSearch","MatchingResultsN","Helpers","combineStyles","result","styles","length","otherStyles","slice","forEach","s","Object","keys","k","getObjectValueByProp","obj","prop","splittedProps","split","splice","join","setObjectValueByProp","value","getDateFromString","date","getTranslateByLanguage","language","require","formatString","i","replace","MenuTypesEnum","IconTypesEnum","LanguagesEnum","useStyles","makeStyles","theme","createStyles","tabPanel","gridGap","spacing","cardLabelText","marginTop","color","palette","text","primary","CashPanel","observer","typesStore","css","classes","useTheme","getThemeColorStyle","p","history","useHistory","buttonAddNewCashClick","event","typeId","currentTarget","dataset","push","Cash","Grid","container","className","grid","typesLoaded","types","map","type","key","name","item","xs","alignItems","justify","IconButton","card","label","cardLabel","onClick","data-type-id","style","iconColor","fontSize","cardIcon","icon","Typography","variant","root","padding","stickyHeader","background","default","lineHeight","paddingLeft","paddingRight","paddingTop","paddingBottom","borderBottom","main","stickyHeaderText","dark","cashItem","marginBottom","light","display","gridColumnGap","RecordsPanel","cashStore","propertiesStore","buttonCashClick","cashId","List","subheader","getCashesDistinctDates","cashes","d","listSection","cashesUl","ListSubheader","dateFns","format","getCashesStartedByDate","cash","getTypeByName","typeName","ListItem","id","button","data-cash-id","getColorInHex","createdDate","totalCell","total","getCurrencyByName","currency","symbol","description","desctiptionCell","TypesPanel","typeClick","component","list","data-id","ListItemAvatar","ListItemText","primaryTypographyProps","Divider","MenuPanel","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchInput","typesSelectChips","marginRight","typesSelectChip","foundedTotalCount","foundedIconsContainer","foundedIconsIconFont","selectedIcon","secondary","pagination","IconsChooser","props","iconsStore","translate","translatesStore","iconsButtonsContainerRef","React","useRef","Filled","typeValue","setTypeValue","filter","setFilter","page","setPage","debouncedSearchFilter","debouncedSearchTypeValue","debouncedSearchPage","current","scrollTop","searchIconsByFilterAndPage","setSelectedIcon","onIconClick","iconRightName","querySelectorAll","innerText","selectedIconChanged","FormControl","typeSelect","fullWidth","InputLabel","labelId","multiple","onChange","newValue","target","input","Input","renderValue","selected","Chip","Array","from","iconsTypes","MenuItem","Checkbox","checked","indexOf","get","placeholder","newFilter","onKeyUp","keyCode","blur","startAdornment","InputAdornment","position","ref","foundedIcons","getIconRightStringNameForFontToShow","foundedIconsButton","pagesCount","Pagination","count","size","newPage","modalContainer","zIndex","modal","paper","firstBar","secondBar","toolbarIcon","body","colorAndIconContainer","colorDialogBox","colorDialogHeader","minHeight","mixins","toolbar","colorDialogBody","colorDialogFooter","iconDialogHeader","iconDialogBody","iconDialogFooter","TypeEditPanel","setTypeId","setColor","colorPickerOpened","setColorPickerOpened","setIcon","iconPickerOpened","setIconPickerOpened","match","params","getTypeToSaveByName","typeToSave","deleteType","a","saveEdit","validateTypeToSave","saveType","changeTypeField","propName","updateTypeToSaveByProp","getAppliedColor","colorHandleClose","iconHandleClose","Fade","in","timeout","Slide","direction","mountOnEnter","unmountOnExit","AppBar","Toolbar","Box","emptyBox","TextField","error","disabled","inputProps","helperText","onFocus","select","dialogSelect","SelectProps","InputProps","Dialog","open","fullScreen","Paper","pickerProps","hex","Button","iconDialogBox","newIcon","selectTypeIcon","totalInput","currencySelect","CashEditPanel","setCashId","cashCurrency","setCashCurrency","cashesLoaded","getCashToSaveById","cashToSave","updateCashToSaveByProp","deleteCash","Records","validateCashToSave","saveCash","pickerDateChange","totalInputRef","updateCashCurrency","submitOnEnterKeyUp","defaultCurrency","selectedTypeId","dialogSelectBox","utils","DateFnsUtils","datesGrid","margin","descriptionInput","console","log","focus","totalContainer","inputRef","parseFloat","currencies","c","routes","path","exact","components","Menu","RouteWithSubRoutes","route","render","isArray","Component","index","errors","SnackErrors","openSnack","setOpenSnack","closeHandle","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","e","action","currencySymbolField","CurrencyEditPanel","currencyId","currencyName","setCurrencyName","currencySymbol","setCurrencySymbol","openErrors","setOpenErrors","saveErrors","setSaveErrors","addNewCurrency","saveResult","success","onSaveEdit","onCancelEdit","currenciesContainer","currenciesSelect","addCurrencyButton","marginLeft","footer","FirstTimeShowPanel","setLanguage","setCurrency","addNewCurrencyOpened","setAddNewCurrencyOpened","buttonSaveProperties","saveFirstTimeOptions","loadTypes","loadTranslate","languages","l","title","selectedNewCurrencyName","fab","bottom","right","Body","appStore","selectedMenuUrl","to","prefix","getAddButtonLinkUrl","Fab","aria-label","firstTimeOptionsSelected","LinkTab","Tab","Link","currentUrl","pathname","preventDefault","menuIcon","comboButton","searchIcon","loadSelectedMenuIndex","location","listener","listen","menuTabProps","href","selectedMenuIndex","headerTitle","headerBox","endIcon","ArrowDropDown","comboButtonTextBox","toDateString","Search","Tabs","setSelectedMenuIndex","AttachMoney","MenuBook","MoreHoriz","CacheService","this","String","then","r","version","clear","add","window","reload","entry","entryStr","JSON","stringify","localStorage","setItem","TCreator","validAt","enableCache","getItem","parsedResult","parse","arrayResult","parsedEntry","plainToClass","AppStore","AppJson","services","observable","url","urlParts","ServicesStore","cache","TypeEntry","system","TypesStore","cacheService","find","t","valid","getSortedTypes","sort","b","editType","v","typeIndex","IconsStore","iconName","resultStr","toLowerCase","numberMatch","substring","Map","set","Outlined","Rounded","TwoTone","toString","Sharp","allIcons","filledIcons","outlinedIcons","roundedIcons","twoToneIcons","sharpIcons","AllIcons","allIconsForCache","Math","ceil","iconsOnOnePage","computed","lowerCasedFilter","workingArray","concat","CashEntry","Type","CashStore","getSortedCashes","loadAllCashes","datesOfCashes","toISOString","dateYYYYMMDD","startsWith","editCash","uuidv4","dateFrom","dateTo","LanguageEntry","rtl","CurrencyEntry","ErrorEntry","PropertiesStore","fillLanguages","English","Hebrew","Russian","loadCurrentLanguage","loadCurrencies","Boolean","locale","enLocale","languageName","currentLanguage","heLocale","ruLocale","addError","some","changeLanguage","changeCurrency","TranslatesStore","servicesStore","stores","App","basename","AppSettings","CssBaseline","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.52caae5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typesSelectChips\":\"IconsChooser_typesSelectChips__rNRQf\",\"foundedIconsContainer\":\"IconsChooser_foundedIconsContainer__9eTT8\",\"foundedIconsButton\":\"IconsChooser_foundedIconsButton__3wU-W\",\"pagination\":\"IconsChooser_pagination__1dXi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__2L-Jj\",\"footer\":\"App_footer__12-B7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CashPanel_grid__1M0h2\",\"card\":\"CashPanel_card__2ETq-\",\"cardLabel\":\"CashPanel_cardLabel__3f2v_\",\"lastCard\":\"CashPanel_lastCard__2tePY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RecordsPanel_root__2BXAY\",\"cashesUl\":\"RecordsPanel_cashesUl__3kagc\",\"cashItem\":\"RecordsPanel_cashItem__1OmpH\",\"totalCell\":\"RecordsPanel_totalCell__1FQFY\",\"desctiptionCell\":\"RecordsPanel_desctiptionCell__3udrE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"TypeEditPanel_modalContainer__o8c64\",\"emptyBox\":\"TypeEditPanel_emptyBox__2akL7\",\"body\":\"TypeEditPanel_body__2pBnt\",\"colorAndIconContainer\":\"TypeEditPanel_colorAndIconContainer__35IGH\",\"dialogSelect\":\"TypeEditPanel_dialogSelect__2KpQS\",\"colorDialogBox\":\"TypeEditPanel_colorDialogBox__mLPjz\",\"iconDialogBox\":\"TypeEditPanel_iconDialogBox__j1WSI\",\"colorDialogHeader\":\"TypeEditPanel_colorDialogHeader__2qD8B\",\"iconDialogHeader\":\"TypeEditPanel_iconDialogHeader__2Q3n4\",\"colorDialogBody\":\"TypeEditPanel_colorDialogBody__285q0\",\"iconDialogBody\":\"TypeEditPanel_iconDialogBody__nr6zd\",\"colorDialogFooter\":\"TypeEditPanel_colorDialogFooter__2ZN7j\",\"iconDialogFooter\":\"TypeEditPanel_iconDialogFooter__3L6_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"CashEditPanel_modalContainer__3HV8D\",\"emptyBox\":\"CashEditPanel_emptyBox__Oe2ld\",\"body\":\"CashEditPanel_body__1Wrp-\",\"dialogSelectBox\":\"CashEditPanel_dialogSelectBox__2sII0\",\"datesGrid\":\"CashEditPanel_datesGrid__MiAud\",\"totalContainer\":\"CashEditPanel_totalContainer__3fMHG\",\"descriptionInput\":\"CashEditPanel_descriptionInput__3z4uu\",\"currencySelect\":\"CashEditPanel_currencySelect__2woQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__2G_GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"CurrencyEditPanel_modalContainer__2FuyW\",\"emptyBox\":\"CurrencyEditPanel_emptyBox__2wvgQ\",\"body\":\"CurrencyEditPanel_body__3xbws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"FirstTimeShowPanel_modalContainer__1T54k\",\"body\":\"FirstTimeShowPanel_body__35A_R\",\"currenciesContainer\":\"FirstTimeShowPanel_currenciesContainer__3gQgL\",\"currenciesSelect\":\"FirstTimeShowPanel_currenciesSelect__ZmVZt\",\"addCurrencyButton\":\"FirstTimeShowPanel_addCurrencyButton__-wJDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBox\":\"Menu_headerBox__1Me5e\",\"headerTitle\":\"Menu_headerTitle__2LUUc\",\"comboButton\":\"Menu_comboButton__OoKdQ\",\"comboButtonTextBox\":\"Menu_comboButtonTextBox__1axJS\"};","import { MobXProviderContext } from 'mobx-react';\r\nimport { useContext } from 'react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext).store;\r\n};\r\nexport default useStores;\r\n","export default class TranslateEntry {\r\n  MainProperties!: string;\r\n  Language!: string;\r\n  LanguageIsRequired!: string;\r\n  Currency!: string;\r\n  CurrencyIsRequired!: string;\r\n  AddNewCurrency!: string;\r\n  Save!: string;\r\n  LanguageSelectionIsRequired!: string;\r\n  CurrencySelectionIsRequired!: string;\r\n  NewCurrency!: string;\r\n  Name!: string;\r\n  NameIsRequiredForExampleUSD!: string;\r\n  Symbol!: string;\r\n  SymbolIsRequiredForExample$!: string;\r\n  CurrencyNameIsRequired!: string;\r\n  CurrencySymbolIsRequired!: string;\r\n  CurrencyWithThisNameIsAlreadyExists!: string;\r\n  AddPayment!: string;\r\n  RecordsN!: string;\r\n  Types!: string;\r\n  More!: string;\r\n  PaymentEdit!: string;\r\n  PaymentNew!: string;\r\n  PaymentType!: string;\r\n  PaymentTypeIsRequired!: string;\r\n  Date!: string;\r\n  Time!: string;\r\n  Description!: string;\r\n  PaymentTotal!: string;\r\n  PaymentTotalIsRequired!: string;\r\n  TypeEdit!: string;\r\n  TypeNew!: string;\r\n  IDIsRequired!: string;\r\n  NameIsRequired!: string;\r\n  PositionInTheList!: string;\r\n  PositionInTheListIsRequired!: string;\r\n  IconColor!: string;\r\n  Icon!: string;\r\n  SelectTheColorOfTheIcon!: string;\r\n  Select!: string;\r\n  Cancel!: string;\r\n  SelectIcon!: string;\r\n  IconsTypes!: string;\r\n  EnterToSearch!: string;\r\n  MatchingResultsN!: string;\r\n}\r\n","import TranslateEntry from '../models/entries/TranslateEntry';\r\n\r\nclass Helpers {\r\n  static combineStyles = (...styles: any) => {\r\n    let result: any;\r\n    if (styles.length) {\r\n      result = { ...styles[0] };\r\n      const otherStyles = styles.slice(1);\r\n      if (otherStyles.length) {\r\n        otherStyles.forEach((s: any) => {\r\n          Object.keys(s).forEach((k: string) => {\r\n            if (!result[k]) {\r\n              result[k] = s[k];\r\n            } else {\r\n              result[k] += ` ${s[k]}`;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  static getObjectValueByProp = (obj: any, prop: string): any => {\r\n    const splittedProps = prop.split('.');\r\n    if (splittedProps.length > 1) {\r\n      return Helpers.getObjectValueByProp(\r\n        obj[splittedProps[0]],\r\n        splittedProps.splice(1).join('.')\r\n      );\r\n    }\r\n    return obj[splittedProps[0]];\r\n  };\r\n\r\n  static setObjectValueByProp = (obj: any, prop: string, value: any) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    obj[prop] = value;\r\n  };\r\n\r\n  static getDateFromString = (date: Date | string) => {\r\n    if (typeof date === 'string') {\r\n      // eslint-disable-next-line no-param-reassign\r\n      date = new Date(date);\r\n    }\r\n    return date;\r\n  };\r\n\r\n  static getTranslateByLanguage = (language: string) => {\r\n    let result: TranslateEntry;\r\n    if (language === 'en-US') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.json');\r\n    } else if (language === 'he-IL') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.he.json');\r\n    } else if (language === 'ru-RU') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.ru.json');\r\n    } else {\r\n      result = new TranslateEntry();\r\n    }\r\n    return result;\r\n  };\r\n\r\n  static formatString = (value: string, ...args: any[]) => {\r\n    if (args.length) {\r\n      for (let i = 0; i < args.length; i += 1) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        value = value.replace(`{${i}}`, args[i]);\r\n      }\r\n    }\r\n    return value;\r\n  };\r\n}\r\n\r\nexport default Helpers;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport enum MenuTypesEnum {\r\n  Cash = 'cash',\r\n  Records = 'records',\r\n  Types = 'types',\r\n  Menu = 'menu',\r\n}\r\n\r\nexport enum IconTypesEnum {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  Rounded = 'Rounded',\r\n  TwoTone = 'Two tone',\r\n  Sharp = 'Sharp',\r\n}\r\n\r\nexport enum LanguagesEnum {\r\n  English = 'en-US',\r\n  Hebrew = 'he-IL',\r\n  Russian = 'ru-RU',\r\n}\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabPanel: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CashPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const buttonAddNewCashClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    const { typeId } = event.currentTarget.dataset;\r\n    history.push(`/${MenuTypesEnum.Cash}/add/${typeId}`);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={css.grid} spacing={2}>\r\n      {typesStore.typesLoaded &&\r\n        typesStore.types.map((type: TypeEntry) => (\r\n          <Grid\r\n            key={type.name}\r\n            item\r\n            xs\r\n            container\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <IconButton\r\n              className={css.card}\r\n              classes={{ label: css.cardLabel }}\r\n              onClick={buttonAddNewCashClick}\r\n              data-type-id={type.name}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  color: getThemeColorStyle(type.iconColor),\r\n                  fontSize: '2rem',\r\n                }}\r\n                className={css.cardIcon}\r\n              >\r\n                {type.icon}\r\n              </Icon>\r\n              <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n                {type.label}\r\n              </Typography>\r\n            </IconButton>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CashPanel;\r\n","import {\r\n  createStyles,\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CashEntry from '../../models/entries/CashEntry';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport CashStore from '../../stores/CashStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport * as classes from './RecordsPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n    },\r\n    stickyHeader: {\r\n      background: theme.palette.background.default,\r\n      lineHeight: 'normal',\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      paddingTop: theme.spacing(1) + 2,\r\n      paddingBottom: theme.spacing(1) + 2,\r\n      borderBottom: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    stickyHeaderText: {\r\n      paddingBottom: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      borderBottom: `3px solid ${theme.palette.primary.dark}`,\r\n    },\r\n    cashItem: {\r\n      '&:last-child': {\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      padding: 0,\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      borderBottom: `1px solid ${theme.palette.primary.light}`,\r\n      display: 'grid',\r\n      gridColumnGap: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst RecordsPanel = observer(() => {\r\n  const {\r\n    cashStore,\r\n    typesStore,\r\n    propertiesStore,\r\n  }: {\r\n    cashStore: CashStore;\r\n    typesStore: TypesStore;\r\n    propertiesStore: PropertiesStore;\r\n  } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const getFormattedDate = (date: Date) => {\r\n    return propertiesStore.dateFns.format(date, 'd MMMM, EEEE');\r\n  };\r\n\r\n  const getIconColor = (color?: string) => {\r\n    return typesStore.getColorInHex(theme, color);\r\n  };\r\n\r\n  const buttonCashClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const { cashId } = event.currentTarget.dataset;\r\n    history.push(`/${MenuTypesEnum.Cash}/edit/${cashId}`);\r\n  };\r\n\r\n  return (\r\n    <List className={css.root} subheader={<li />}>\r\n      {cashStore.getCashesDistinctDates(cashStore.cashes).map((d: string) => (\r\n        <li key={`section-${d}`} className={css.listSection}>\r\n          <ul className={css.cashesUl}>\r\n            <ListSubheader className={css.stickyHeader}>\r\n              <span className={css.stickyHeaderText}>\r\n                {getFormattedDate(Helpers.getDateFromString(d))}\r\n              </span>\r\n            </ListSubheader>\r\n            {cashStore\r\n              .getCashesStartedByDate(cashStore.cashes, d)\r\n              .map((cash: CashEntry) => {\r\n                const type = typesStore.getTypeByName(cash.typeName);\r\n                return (\r\n                  <ListItem\r\n                    key={cash.id}\r\n                    className={css.cashItem}\r\n                    button\r\n                    onClick={buttonCashClick}\r\n                    data-cash-id={cash.id}\r\n                  >\r\n                    <Icon style={{ color: getIconColor(type?.iconColor) }}>\r\n                      {type?.icon}\r\n                    </Icon>\r\n                    <Typography variant=\"body1\">{type?.label}</Typography>\r\n                    <Typography variant=\"body2\">\r\n                      {propertiesStore.dateFns.format(\r\n                        cash.createdDate,\r\n                        'HH:mm'\r\n                      )}\r\n                    </Typography>\r\n                    <Typography variant=\"body1\" className={css.totalCell}>\r\n                      {cash.total}{' '}\r\n                      {propertiesStore.getCurrencyByName(cash.currency).symbol}\r\n                    </Typography>\r\n                    {cash.description && (\r\n                      <Typography className={css.desctiptionCell}>\r\n                        {cash.description}\r\n                      </Typography>\r\n                    )}\r\n                  </ListItem>\r\n                );\r\n              })}\r\n          </ul>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default RecordsPanel;\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypesPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst TypesPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  const css = Helpers.combineStyles({}, classes);\r\n  const theme = useTheme();\r\n\r\n  const history = useHistory();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const typeClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const typeName = event.currentTarget.dataset.id;\r\n    history.push(`/${MenuTypesEnum.Types}/edit/${typeName}`);\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={css.list}>\r\n      {typesStore.typesLoaded &&\r\n        typesStore.types.map((type: TypeEntry) => (\r\n          <div key={type.name}>\r\n            <ListItem button onClick={typeClick} data-id={type.name}>\r\n              <ListItemAvatar>\r\n                <Icon\r\n                  style={{\r\n                    color: getThemeColorStyle(type.iconColor),\r\n                    fontSize: '2rem',\r\n                  }}\r\n                >\r\n                  {type.icon}\r\n                </Icon>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={type.label}\r\n                primaryTypographyProps={{ variant: 'subtitle1' }}\r\n              />\r\n            </ListItem>\r\n            <Divider component=\"div\" />\r\n          </div>\r\n        ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default TypesPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst MenuPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <></>;\r\n});\r\n\r\nexport default MenuPanel;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  createStyles,\r\n  FormControl,\r\n  Icon,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { IconTypesEnum } from '../../models/Enum';\r\nimport IconsStore from '../../stores/IconsStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport useDebounce from '../../utility/UseDebounce';\r\nimport classes from './IconsChooser.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchInput: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    typesSelectChips: {\r\n      marginTop: -theme.spacing(1),\r\n      marginRight: -theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    typesSelectChip: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    foundedTotalCount: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsIconFont: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    selectedIcon: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    pagination: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  selectedIcon?: string;\r\n  selectedIconChanged?: (newIcon: string) => void;\r\n}\r\n\r\nconst IconsChooser = observer((props: IProps) => {\r\n  const {\r\n    iconsStore,\r\n    translatesStore,\r\n  }: { iconsStore: IconsStore; translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const iconsButtonsContainerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [typeValue, setTypeValue] = React.useState([IconTypesEnum.Filled]);\r\n  const [filter, setFilter] = React.useState('');\r\n  const [page, setPage] = React.useState(1);\r\n  const onTypeValueChange = (newValue: any) => {\r\n    setPage(1);\r\n    setTypeValue(newValue.target.value);\r\n  };\r\n  const onTypeRenderValue = (selected: any) => {\r\n    return (\r\n      <div className={css.typesSelectChips}>\r\n        {(selected as string[]).map((value) => (\r\n          <Chip key={value} label={value} className={css.typesSelectChip} />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  const searchIcons = () => {\r\n    if (iconsButtonsContainerRef.current) {\r\n      iconsButtonsContainerRef.current.scrollTop = 0;\r\n    }\r\n    iconsStore.searchIconsByFilterAndPage(filter, typeValue, page);\r\n  };\r\n  const debouncedSearchFilter = useDebounce(filter, 500);\r\n  const debouncedSearchTypeValue = useDebounce(typeValue, 500);\r\n  const debouncedSearchPage = useDebounce(page, 500);\r\n  const filterChanged = (newFilter: any) => {\r\n    setPage(1);\r\n    setFilter(newFilter.target.value);\r\n  };\r\n  const filterKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      event.currentTarget.blur();\r\n    }\r\n  };\r\n  const onPageChange = (event: any, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n  React.useEffect(searchIcons, [\r\n    debouncedSearchFilter,\r\n    debouncedSearchTypeValue,\r\n    debouncedSearchPage,\r\n  ]);\r\n\r\n  const [selectedIcon, setSelectedIcon] = React.useState('');\r\n  const onIconClick = (icon: any) => {\r\n    let iconRightName = icon.currentTarget.querySelectorAll(\r\n      '.material-icons'\r\n    )[0].innerText;\r\n    // Check if icon is already selected and unselect it\r\n    if (selectedIcon === iconRightName) {\r\n      iconRightName = '';\r\n    }\r\n    setSelectedIcon(iconRightName);\r\n    if (props.selectedIconChanged) {\r\n      props.selectedIconChanged(iconRightName);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSelectedIcon(props.selectedIcon || '');\r\n  }, [props.selectedIcon]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.typeSelect} fullWidth>\r\n        <InputLabel id=\"types-select-label\">{translate.IconsTypes}</InputLabel>\r\n        <Select\r\n          labelId=\"types-select-label\"\r\n          multiple\r\n          fullWidth\r\n          value={typeValue}\r\n          onChange={onTypeValueChange}\r\n          input={<Input />}\r\n          renderValue={onTypeRenderValue}\r\n        >\r\n          {Array.from(iconsStore.iconsTypes.keys()).map((k: IconTypesEnum) => (\r\n            <MenuItem key={k} value={k}>\r\n              <Checkbox checked={typeValue.indexOf(k) > -1} />\r\n              <ListItemText primary={iconsStore.iconsTypes.get(k)} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Input\r\n        fullWidth\r\n        placeholder={translate.EnterToSearch}\r\n        value={filter}\r\n        onChange={filterChanged}\r\n        onKeyUp={filterKeyUp}\r\n        className={css.searchInput}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <Icon>search</Icon>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      <div className={css.foundedTotalCount}>\r\n        <Typography variant=\"caption\">\r\n          {Helpers.formatString(\r\n            translate.MatchingResultsN,\r\n            iconsStore.foundedTotalCount\r\n          )}\r\n        </Typography>\r\n      </div>\r\n      <div ref={iconsButtonsContainerRef} className={css.foundedIconsContainer}>\r\n        {iconsStore.foundedIcons.map((icon: string) => {\r\n          const iconRightName = iconsStore.getIconRightStringNameForFontToShow(\r\n            icon\r\n          );\r\n          return (\r\n            <IconButton\r\n              key={icon}\r\n              onClick={onIconClick}\r\n              className={css.foundedIconsButton}\r\n            >\r\n              <Icon\r\n                className={\r\n                  css.foundedIconsIconFont +\r\n                  (iconRightName === selectedIcon ? ` ${css.selectedIcon}` : '')\r\n                }\r\n              >\r\n                {iconRightName}\r\n              </Icon>\r\n            </IconButton>\r\n          );\r\n        })}\r\n      </div>\r\n      {iconsStore.pagesCount > 0 && (\r\n        <Pagination\r\n          className={css.pagination}\r\n          count={iconsStore.pagesCount}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          page={page}\r\n          onChange={onPageChange}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default IconsChooser;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport IconsChooser from '../IconsChooser/IconsChooser';\r\nimport classes from './TypeEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorAndIconContainer: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorDialogBox: {\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    colorDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    colorDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    iconDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    iconDialogBody: {\r\n      padding: theme.spacing(2),\r\n      paddingBottom: 0,\r\n    },\r\n    iconDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst TypeEditPanel = observer((props: IProps) => {\r\n  const {\r\n    typesStore,\r\n    translatesStore,\r\n  }: { typesStore: TypesStore; translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [typeId, setTypeId] = React.useState('');\r\n  const [color, setColor] = React.useState('');\r\n  const [colorPickerOpened, setColorPickerOpened] = React.useState(false);\r\n  const [icon, setIcon] = React.useState('');\r\n  const [iconPickerOpened, setIconPickerOpened] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setTypeId(props.match.params?.id);\r\n    if (typesStore.typesLoaded) {\r\n      typesStore.getTypeToSaveByName(typeId);\r\n      setColor(typesStore.typeToSave?.iconColor || '');\r\n    }\r\n  }, [props.match.params, typeId, typesStore, typesStore.typesLoaded]);\r\n\r\n  const deleteType = async () => {\r\n    await typesStore.deleteType(typeId);\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const saveEdit = async () => {\r\n    if (typesStore.validateTypeToSave()) {\r\n      await typesStore.saveType(typeId);\r\n      history.push(`/${MenuTypesEnum.Types}`);\r\n    }\r\n  };\r\n\r\n  const changeTypeField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.currentTarget.value;\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    typesStore.updateTypeToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const positionFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const getAppliedColor = () => {\r\n    return typesStore.getColorInHex(theme, typesStore.typeToSave?.iconColor);\r\n  };\r\n\r\n  const colorHandleOpen = () => {\r\n    setColorPickerOpened(true);\r\n  };\r\n  const colorHandleClose = () => {\r\n    setColorPickerOpened(false);\r\n  };\r\n  const pickerColorChange = (pickerProps: any) => {\r\n    setColor(pickerProps.hex);\r\n  };\r\n  const buttonApplyColorSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('iconColor', color);\r\n    colorHandleClose();\r\n  };\r\n  const buttonCancelColorSelect = () => {\r\n    setColor(getAppliedColor());\r\n    colorHandleClose();\r\n  };\r\n\r\n  const iconHandleOpen = () => {\r\n    setIconPickerOpened(true);\r\n  };\r\n  const iconHandleClose = () => {\r\n    setIconPickerOpened(false);\r\n  };\r\n  const iconChange = (newIcon: string) => {\r\n    setIcon(newIcon);\r\n  };\r\n  const buttonApplyIconSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('icon', icon);\r\n    iconHandleClose();\r\n  };\r\n  const buttonCancelIconSelect = () => {\r\n    setIcon(typesStore.typeToSave?.icon || '');\r\n    iconHandleClose();\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {typeId ? translate.TypeEdit : translate.TypeNew}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {typeId && (\r\n                <IconButton onClick={deleteType}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!typesStore.typeToSave?.name}\r\n              fullWidth\r\n              label=\"ID\"\r\n              disabled={!!typeId}\r\n              value={typesStore.typeToSave?.name || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'name' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.name ? translate.IDIsRequired : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={!typesStore.typeToSave?.label}\r\n              fullWidth\r\n              label={translate.Name}\r\n              value={typesStore.typeToSave?.label || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'label' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.label ? translate.NameIsRequired : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n              }\r\n              fullWidth\r\n              label={translate.PositionInTheList}\r\n              value={\r\n                typesStore.typeToSave?.position ||\r\n                typesStore.typeToSave?.position === 0\r\n                  ? typesStore.typeToSave?.position\r\n                  : ''\r\n              }\r\n              onChange={changeTypeField}\r\n              type=\"number\"\r\n              inputProps={{ 'data-prop-name': 'position' }}\r\n              onFocus={positionFieldFocus}\r\n              helperText={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n                  ? translate.PositionInTheListIsRequired\r\n                  : ''\r\n              }\r\n            />\r\n            <div className={css.colorAndIconContainer}>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label={translate.IconColor}\r\n                className={css.dialogSelect}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Icon>stop</Icon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                value={0}\r\n                onClick={colorHandleOpen}\r\n              >\r\n                <MenuItem value={0}>{getAppliedColor()}</MenuItem>\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label={translate.Icon}\r\n                value={typesStore.typeToSave?.icon ? '0' : ''}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                onClick={iconHandleOpen}\r\n              >\r\n                <MenuItem value=\"0\">\r\n                  <Icon>{typesStore.typeToSave?.icon}</Icon>\r\n                </MenuItem>\r\n              </TextField>\r\n            </div>\r\n            <Dialog\r\n              open={colorPickerOpened}\r\n              className={css.colorDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.colorDialogBox}>\r\n                <div className={css.colorDialogHeader}>\r\n                  <Typography variant=\"h6\">\r\n                    {translate.SelectTheColorOfTheIcon}\r\n                  </Typography>\r\n                </div>\r\n                <div className={css.colorDialogBody}>\r\n                  <ChromePicker color={color} onChange={pickerColorChange} />\r\n                </div>\r\n                <div className={css.colorDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyColorSelect}\r\n                  >\r\n                    {translate.Select}\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelColorSelect}>\r\n                    {translate.Cancel}\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n            <Dialog\r\n              open={iconPickerOpened}\r\n              className={css.iconDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.iconDialogBox}>\r\n                <div className={css.iconDialogHeader}>\r\n                  <Typography variant=\"h6\">{translate.SelectIcon}</Typography>\r\n                </div>\r\n                <div className={css.iconDialogBody}>\r\n                  <IconsChooser\r\n                    selectedIcon={typesStore.typeToSave?.icon}\r\n                    selectedIconChanged={iconChange}\r\n                  />\r\n                </div>\r\n                <div className={css.iconDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyIconSelect}\r\n                  >\r\n                    {translate.Select}\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelIconSelect}>\r\n                    {translate.Cancel}\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default TypeEditPanel;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  Fade,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport CashStore from '../../stores/CashStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    selectTypeIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    totalInput: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    currencySelect: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst CashEditPanel = observer((props: IProps) => {\r\n  const {\r\n    cashStore,\r\n    typesStore,\r\n    translatesStore,\r\n    propertiesStore,\r\n  }: {\r\n    cashStore: CashStore;\r\n    typesStore: TypesStore;\r\n    translatesStore: TranslatesStore;\r\n    propertiesStore: PropertiesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [cashId, setCashId] = React.useState('');\r\n  const [typeId, setTypeId] = React.useState('');\r\n  const [cashCurrency, setCashCurrency] = React.useState('');\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setCashId(props.match.params?.id);\r\n    setTypeId(props.match.params?.typeId);\r\n    if (cashStore.cashesLoaded) {\r\n      cashStore.getCashToSaveById(cashId);\r\n      if (!cashStore.cashToSave?.id) {\r\n        cashStore.updateCashToSaveByProp('typeName', typeId);\r\n      }\r\n    }\r\n  }, [\r\n    cashId,\r\n    cashStore,\r\n    props.match.params,\r\n    typesStore.typesLoaded,\r\n    cashStore.cashesLoaded,\r\n    typesStore,\r\n    typeId,\r\n  ]);\r\n\r\n  const createdDate = new Date();\r\n\r\n  const deleteCash = async () => {\r\n    await cashStore.deleteCash(cashId);\r\n    history.push(`/${MenuTypesEnum.Records}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    if (cashId) {\r\n      history.push(`/${MenuTypesEnum.Records}`);\r\n    } else {\r\n      history.push(`/${MenuTypesEnum.Cash}`);\r\n    }\r\n  };\r\n  const saveEdit = async () => {\r\n    if (!cashStore.cashToSave?.createdDate) {\r\n      cashStore.updateCashToSaveByProp('createdDate', createdDate);\r\n    }\r\n    if (cashStore.validateCashToSave()) {\r\n      await cashStore.saveCash(cashId);\r\n      history.push(`/${MenuTypesEnum.Cash}`);\r\n    }\r\n  };\r\n\r\n  const selectTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedTypeId = event.currentTarget.dataset.value!;\r\n    cashStore.updateCashToSaveByProp('typeName', selectedTypeId);\r\n  };\r\n\r\n  const getIconColor = (color?: string) => {\r\n    return typesStore.getColorInHex(theme, color);\r\n  };\r\n\r\n  const pickerDateChange = (date: MaterialUiPickersDate) => {\r\n    cashStore.updateCashToSaveByProp('createdDate', date);\r\n  };\r\n\r\n  const totalInputRef = React.useRef<HTMLInputElement>(null);\r\n  const descriptionKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      console.log(totalInputRef.current);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      totalInputRef.current?.focus();\r\n    }\r\n  };\r\n\r\n  const changeDescriptionField = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const description = event.currentTarget.value;\r\n    cashStore.updateCashToSaveByProp('description', description);\r\n  };\r\n\r\n  const changeTotalField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = parseFloat(event.currentTarget.value);\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    cashStore.updateCashToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const updateCashCurrency = () => {\r\n    const currency =\r\n      propertiesStore.getCurrencyByName(cashStore.cashToSave?.currency || '')\r\n        .name || '';\r\n    setCashCurrency(currency);\r\n  };\r\n\r\n  const changeCurrencyField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.target.value;\r\n    cashStore.updateCashToSaveByProp('currency', newValue);\r\n    updateCashCurrency();\r\n  };\r\n\r\n  const totalFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const submitOnEnterKeyUp = async (\r\n    event: React.KeyboardEvent<HTMLInputElement>\r\n  ) => {\r\n    if (event.keyCode === 13) {\r\n      await saveEdit();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    updateCashCurrency();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cashStore.cashToSave, propertiesStore.defaultCurrency]);\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {cashId ? translate.PaymentEdit : translate.PaymentNew}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {cashId && (\r\n                <IconButton onClick={deleteCash}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!cashStore.cashToSave?.typeName}\r\n              select\r\n              fullWidth\r\n              label={translate.PaymentType}\r\n              className={css.dialogSelect}\r\n              value={cashStore.cashToSave?.typeName || ''}\r\n              onChange={selectTypeChange}\r\n              helperText={\r\n                !cashStore.cashToSave?.typeName\r\n                  ? translate.PaymentTypeIsRequired\r\n                  : ''\r\n              }\r\n            >\r\n              {typesStore.types.map((type) => (\r\n                <MenuItem key={type.name} value={type.name}>\r\n                  <div className={css.dialogSelectBox}>\r\n                    <Icon\r\n                      className={css.selectTypeIcon}\r\n                      style={{ color: getIconColor(type.iconColor) }}\r\n                    >\r\n                      {type.icon}\r\n                    </Icon>\r\n                    <span>{type.label}</span>\r\n                  </div>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justify=\"space-around\" className={css.datesGrid}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  label={translate.Date}\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                />\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  label={translate.Time}\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <TextField\r\n              fullWidth\r\n              className={css.descriptionInput}\r\n              label={translate.Description}\r\n              value={cashStore.cashToSave?.description || ''}\r\n              onChange={changeDescriptionField}\r\n              onKeyUp={descriptionKeyUp}\r\n              inputProps={{ 'data-prop-name': 'description' }}\r\n            />\r\n            <div className={css.totalContainer}>\r\n              <TextField\r\n                inputRef={totalInputRef}\r\n                error={!cashStore.cashToSave?.total}\r\n                fullWidth\r\n                className={css.totalInput}\r\n                label={translate.PaymentTotal}\r\n                value={cashStore.cashToSave?.total || ''}\r\n                onChange={changeTotalField}\r\n                onFocus={totalFieldFocus}\r\n                onKeyUp={submitOnEnterKeyUp}\r\n                type=\"number\"\r\n                inputProps={{ 'data-prop-name': 'total' }}\r\n                helperText={\r\n                  !cashStore.cashToSave?.total\r\n                    ? translate.PaymentTotalIsRequired\r\n                    : ''\r\n                }\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                select\r\n                className={css.currencySelect}\r\n                label={translate.Currency}\r\n                value={cashCurrency}\r\n                onChange={changeCurrencyField}\r\n                inputProps={{ 'data-prop-name': 'currency' }}\r\n              >\r\n                {propertiesStore.currencies.map((c) => (\r\n                  <MenuItem key={c.name} value={c.name}>\r\n                    {c.symbol}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default CashEditPanel;\r\n","import CashPanel from '../components/CashPanel/CashPanel';\r\nimport RecordsPanel from '../components/RecordsPanel/RecordsPanel';\r\nimport TypesPanel from '../components/TypesPanel/TypesPanel';\r\nimport MenuPanel from '../components/MenuPanel/MenuPanel';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\nimport TypeEditPanel from '../components/TypeEditPanel/TypeEditPanel';\r\nimport CashEditPanel from '../components/CashEditPanel/CashEditPanel';\r\n\r\nconst routes = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add/:typeId`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/edit/:id`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Records}`,\r\n    exact: true,\r\n    components: RecordsPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}`,\r\n    exact: true,\r\n    components: TypesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/add`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/edit/:id`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}`,\r\n    exact: true,\r\n    components: MenuPanel,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst RouteWithSubRoutes = (route: any) => {\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props: any) => {\r\n        if (Array.isArray(route.components)) {\r\n          return route.components.map((Component: any, index: number) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <Component key={index} {...props} routes={route.routes} />\r\n          ));\r\n        }\r\n        return <route.components {...props} routes={route.routes} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSubRoutes;\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Snackbar,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport classes from './SnackErrors.module.css';\r\nimport Helpers from '../../utility/Helpers';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    errors: {\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  errors: string[];\r\n  onClose: () => void;\r\n}\r\n\r\nconst SnackErrors = (props: IProps) => {\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const { open, errors } = props;\r\n  React.useEffect(() => {\r\n    setOpenSnack(open);\r\n  }, [open]);\r\n\r\n  const closeHandle = () => {\r\n    setOpenSnack(false);\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      open={openSnack}\r\n      onClose={closeHandle}\r\n      autoHideDuration={6000}\r\n      message={\r\n        <div className={css.errors}>\r\n          {errors.map((e) => (\r\n            <div key={e}>{e}</div>\r\n          ))}\r\n        </div>\r\n      }\r\n      action={\r\n        <Icon fontSize=\"small\" color=\"inherit\" onClick={closeHandle}>\r\n          close\r\n        </Icon>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackErrors;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React, { ChangeEvent } from 'react';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport SnackErrors from '../SnackErrors/SnackErrors';\r\nimport classes from './CurrencyEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    currencySymbolField: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    errors: {\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  onCancelEdit?: () => void;\r\n  onSaveEdit?: (newCurrencyName: string) => void;\r\n}\r\n\r\nconst CurrencyEditPanel = observer((props: IProps) => {\r\n  const {\r\n    propertiesStore,\r\n    translatesStore,\r\n  }: {\r\n    propertiesStore: PropertiesStore;\r\n    translatesStore: TranslatesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const [currencyId, setCurrencyId] = React.useState('');\r\n  const [currencyName, setCurrencyName] = React.useState('');\r\n  const [currencySymbol, setCurrencySymbol] = React.useState('');\r\n  const [openErrors, setOpenErrors] = React.useState(false);\r\n  const [saveErrors, setSaveErrors] = React.useState<Array<string>>([]);\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const deleteCurrency = () => {};\r\n  const cancelEdit = () => {\r\n    if (props.onCancelEdit) {\r\n      props.onCancelEdit();\r\n    }\r\n  };\r\n  const saveEdit = async () => {\r\n    const saveResult = await propertiesStore.addNewCurrency(translate, {\r\n      name: currencyName,\r\n      symbol: currencySymbol,\r\n    });\r\n    if (saveResult.success) {\r\n      if (props.onSaveEdit) {\r\n        props.onSaveEdit(currencyName);\r\n      }\r\n    } else {\r\n      setSaveErrors(saveResult.errors);\r\n      setOpenErrors(true);\r\n    }\r\n  };\r\n\r\n  const closeErrors = () => {\r\n    setOpenErrors(false);\r\n  };\r\n\r\n  const changeCurrencyNameField = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setCurrencyName(event.target.value);\r\n  };\r\n\r\n  const changeCurrencySymbol = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrencySymbol(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.NewCurrency}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {currencyId && (\r\n                <IconButton onClick={deleteCurrency}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!currencyName}\r\n              fullWidth\r\n              label={translate.Name}\r\n              value={currencyName}\r\n              onChange={changeCurrencyNameField}\r\n              inputProps={{ 'data-prop-name': 'name' }}\r\n              helperText={\r\n                !currencyName ? translate.NameIsRequiredForExampleUSD : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={!currencySymbol}\r\n              fullWidth\r\n              label={translate.Symbol}\r\n              value={currencySymbol}\r\n              onChange={changeCurrencySymbol}\r\n              inputProps={{ 'data-prop-name': 'symbol' }}\r\n              className={css.currencySymbolField}\r\n              helperText={\r\n                !currencyName ? translate.SymbolIsRequiredForExample$ : ''\r\n              }\r\n            />\r\n            <SnackErrors\r\n              open={openErrors}\r\n              errors={saveErrors}\r\n              onClose={closeErrors}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default CurrencyEditPanel;\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  createStyles,\r\n  Fade,\r\n  makeStyles,\r\n  MenuItem,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React, { ChangeEvent } from 'react';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport CurrencyEditPanel from '../CurrencyEditPanel/CurrencyEditPanel';\r\nimport SnackErrors from '../SnackErrors/SnackErrors';\r\nimport classes from './FirstTimeShowPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    currenciesContainer: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    currenciesSelect: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    addCurrencyButton: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    footer: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst FirstTimeShowPanel = observer(() => {\r\n  const {\r\n    propertiesStore,\r\n    translatesStore,\r\n    typesStore,\r\n  }: {\r\n    propertiesStore: PropertiesStore;\r\n    translatesStore: TranslatesStore;\r\n    typesStore: TypesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const [language, setLanguage] = React.useState('');\r\n  const [currency, setCurrency] = React.useState('');\r\n  const [openErrors, setOpenErrors] = React.useState(false);\r\n  const [saveErrors, setSaveErrors] = React.useState<Array<string>>([]);\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const [addNewCurrencyOpened, setAddNewCurrencyOpened] = React.useState(false);\r\n  const buttonAddCurrency = () => {\r\n    setAddNewCurrencyOpened(true);\r\n  };\r\n\r\n  const buttonSaveProperties = async () => {\r\n    const saveResult = await propertiesStore.saveFirstTimeOptions(\r\n      translate,\r\n      language,\r\n      currency\r\n    );\r\n    if (!saveResult.success) {\r\n      setSaveErrors(saveResult.errors);\r\n      setOpenErrors(true);\r\n    } else {\r\n      await typesStore.loadTypes();\r\n      await translatesStore.loadTranslate(language);\r\n    }\r\n  };\r\n\r\n  const addNewCurrencyPanelOnCancelEdit = () => {\r\n    setAddNewCurrencyOpened(false);\r\n  };\r\n  const addNewCurrencyPanelOnSaveEdit = (selectedNewCurrencyName: string) => {\r\n    setAddNewCurrencyOpened(false);\r\n    setCurrency(selectedNewCurrencyName);\r\n  };\r\n\r\n  const changeLanguage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLanguage(event.target.value);\r\n  };\r\n  const changeCurrency = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  const closeErrors = () => {\r\n    setOpenErrors(false);\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.MainProperties}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              select\r\n              fullWidth\r\n              error={!language}\r\n              value={language}\r\n              onChange={changeLanguage}\r\n              label={translate.Language}\r\n              helperText={!language ? translate.LanguageIsRequired : ''}\r\n            >\r\n              {propertiesStore.languages.map((l) => (\r\n                <MenuItem key={l.name} value={l.name}>\r\n                  {l.title || l.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div className={css.currenciesContainer}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                error={!currency}\r\n                label={translate.Currency}\r\n                value={currency}\r\n                onChange={changeCurrency}\r\n                className={css.currenciesSelect}\r\n                helperText={!currency ? translate.CurrencyIsRequired : ''}\r\n              >\r\n                {propertiesStore.currencies.map((c) => (\r\n                  <MenuItem key={c.name} value={c.name}>\r\n                    {c.symbol || c.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <Button\r\n                fullWidth\r\n                className={css.addCurrencyButton}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={buttonAddCurrency}\r\n              >\r\n                {translate.AddNewCurrency}\r\n              </Button>\r\n            </div>\r\n            <SnackErrors\r\n              open={openErrors}\r\n              errors={saveErrors}\r\n              onClose={closeErrors}\r\n            />\r\n          </div>\r\n          <div className={css.footer}>\r\n            <Button\r\n              fullWidth\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={buttonSaveProperties}\r\n            >\r\n              {translate.Save}\r\n            </Button>\r\n          </div>\r\n          {addNewCurrencyOpened && (\r\n            <CurrencyEditPanel\r\n              onCancelEdit={addNewCurrencyPanelOnCancelEdit}\r\n              onSaveEdit={addNewCurrencyPanelOnSaveEdit}\r\n            />\r\n          )}\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default FirstTimeShowPanel;\r\n","import { createStyles, Fab, makeStyles, Theme } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../routes/Routes';\r\nimport RouteWithSubRoutes from '../../routes/RouteWithSubRoutes';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './Body.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport FirstTimeShowPanel from '../FirstTimeShowPanel/FirstTimeShowPanel';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Body = observer(() => {\r\n  const {\r\n    appStore,\r\n    propertiesStore,\r\n  }: { appStore: AppStore; propertiesStore: PropertiesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const getAddButtonLinkUrl = () => {\r\n    let prefix = appStore.selectedMenuUrl;\r\n    if (prefix === '/') {\r\n      prefix += MenuTypesEnum.Cash;\r\n    }\r\n    return `${appStore.selectedMenuUrl}/add`;\r\n  };\r\n\r\n  const showAddIcon = () => {\r\n    return (\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Menu}` &&\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Records}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={css.body}>\r\n      {routes.map((route, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RouteWithSubRoutes key={i} {...route} />\r\n      ))}\r\n      {showAddIcon() && (\r\n        <Link to={getAddButtonLinkUrl()}>\r\n          <Fab\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={css.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      )}\r\n      {!propertiesStore.firstTimeOptionsSelected && <FirstTimeShowPanel />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Body;\r\n","import { Tab } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  to: string;\r\n  icon?: any;\r\n  currentUrl?: string;\r\n}\r\n\r\nconst LinkTab = observer((props: IProps) => {\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const linkClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    if (props.currentUrl === event.currentTarget.pathname) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      to={props.to}\r\n      label={props.label}\r\n      icon={props.icon}\r\n      onClick={linkClick}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LinkTab;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  List as ListIcon,\r\n  Menu as MenuIcon,\r\n  MenuBook as MenuBookIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Search as SearchIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helpers from '../../utility/Helpers';\r\nimport LinkTab from '../LinkTab/LinkTab';\r\nimport classes from './Menu.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    menuIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    comboButton: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    searchIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu = observer(() => {\r\n  const {\r\n    appStore,\r\n    translatesStore,\r\n  }: { appStore: AppStore; translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n  const menuTabChanged = (event: any, newValue: number) => {\r\n    appStore.setSelectedMenuIndex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    const listener = history.listen(() => {\r\n      appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    });\r\n\r\n    return () => {\r\n      listener();\r\n    };\r\n  });\r\n\r\n  const menuTabProps = (name: string, href?: string) => {\r\n    return {\r\n      id: `menu-tab-${name}`,\r\n      'aria-controls': `menu-tab-${name}`,\r\n      to: href || `/${name}`,\r\n      currentUrl: appStore.selectedMenuUrl,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={css.firstBar}>\r\n        <Toolbar>\r\n          {appStore.selectedMenuIndex === 0 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.AddPayment}\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 1 && (\r\n            <Box className={css.headerBox}>\r\n              <IconButton>\r\n                <MenuIcon className={css.menuIcon} />\r\n              </IconButton>\r\n              <Button\r\n                className={css.comboButton}\r\n                endIcon={<ArrowDropDownIcon />}\r\n              >\r\n                <span className={css.comboButtonTextBox}>\r\n                  <span>{new Date().toDateString()}</span>\r\n                  <span>{Helpers.formatString(translate.RecordsN, 21)}</span>\r\n                </span>\r\n              </Button>\r\n              <IconButton>\r\n                <SearchIcon className={css.searchIcon} />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {appStore.selectedMenuIndex === 2 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.Types}\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 3 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.More}\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n        <Tabs\r\n          value={appStore.selectedMenuIndex}\r\n          onChange={menuTabChanged}\r\n          aria-label=\"menu tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <LinkTab {...menuTabProps('cash', '/')} icon={<AttachMoneyIcon />} />\r\n          <LinkTab {...menuTabProps('records')} icon={<MenuBookIcon />} />\r\n          <LinkTab {...menuTabProps('types')} icon={<ListIcon />} />\r\n          <LinkTab {...menuTabProps('menu')} icon={<MoreHorizIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Menu;\r\n","import { plainToClass } from 'class-transformer';\r\nimport AppStore from '../stores/AppStore';\r\n\r\nexport default class CacheService {\r\n  private appStore: AppStore;\r\n\r\n  constructor(appStore: AppStore) {\r\n    this.appStore = appStore;\r\n    this.get<String>('appVersion', String, false, new Date()).then((r) => {\r\n      if (appStore.version !== r) {\r\n        this.clear();\r\n        this.add('appVersion', appStore.version);\r\n        window.location.reload();\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async add(key: string, entry: any) {\r\n    let entryStr: string;\r\n    if (typeof entry !== 'string') {\r\n      entryStr = JSON.stringify({ date: new Date(), entry });\r\n    } else {\r\n      entryStr = entry;\r\n    }\r\n    const result = await localStorage.setItem(key, entryStr);\r\n    return result;\r\n  }\r\n\r\n  public async get<T>(\r\n    key: string,\r\n    TCreator: new (...args: any[]) => T,\r\n    isArray?: boolean,\r\n    validAt?: Date\r\n  ): Promise<any> {\r\n    let result: string | null = null;\r\n    if (!this.appStore.enableCache) {\r\n      return result;\r\n    }\r\n    result = await localStorage.getItem(key);\r\n    if (result) {\r\n      console.log(`Key: ${key} loaded from cache`);\r\n    }\r\n    if (!result || !result.length) {\r\n      return result;\r\n    }\r\n    try {\r\n      const parsedResult = JSON.parse(result);\r\n      if (validAt) {\r\n        if (new Date(parsedResult.date) < validAt) {\r\n          return parsedResult.entry;\r\n        }\r\n        console.log(\r\n          `Key: ${key} date expired. ValidAt: ${validAt}. ExpiredAt: ${parsedResult.date}`\r\n        );\r\n        return null;\r\n      }\r\n      if (isArray) {\r\n        const arrayResult: T[] = [];\r\n        parsedResult.entry.forEach((entry: any) => {\r\n          const parsedEntry = plainToClass(TCreator, entry);\r\n          arrayResult.push(parsedEntry);\r\n        });\r\n        return arrayResult;\r\n      }\r\n      return plainToClass(TCreator, parsedResult.entry);\r\n    } catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async clear() {\r\n    await localStorage.clear();\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport * as AppJson from '../../package.json';\r\nimport ServicesStore from './ServicesStore';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\n\r\nclass AppStore {\r\n  version = AppJson.version;\r\n  services!: ServicesStore;\r\n\r\n  // NOTE: when application is change version, cache will be cleared\r\n  @observable enableCache = true;\r\n  @observable selectedMenuIndex = 0;\r\n  @observable selectedMenuUrl = '/';\r\n\r\n  @action setSelectedMenuIndex = (newValue: number) => {\r\n    this.selectedMenuIndex = newValue;\r\n  };\r\n\r\n  @action loadSelectedMenuIndex = (url: string) => {\r\n    const urlParts = url.split('/');\r\n    if (urlParts.length > 1) {\r\n      if (urlParts[1] === MenuTypesEnum.Records) {\r\n        this.selectedMenuIndex = 1;\r\n      } else if (urlParts[1] === MenuTypesEnum.Types) {\r\n        this.selectedMenuIndex = 2;\r\n      } else if (urlParts[1] === MenuTypesEnum.Menu) {\r\n        this.selectedMenuIndex = 3;\r\n      } else {\r\n        this.selectedMenuIndex = 0;\r\n      }\r\n    } else {\r\n      this.selectedMenuIndex = 0;\r\n    }\r\n    if (this.selectedMenuIndex === 0) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Cash}`;\r\n    } else if (this.selectedMenuIndex === 1) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Records}`;\r\n    } else if (this.selectedMenuIndex === 2) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Types}`;\r\n    } else if (this.selectedMenuIndex === 3) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Menu}`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default AppStore;\r\n","import CacheService from '../services/CacheService';\r\n\r\nclass ServicesStore {\r\n  cache: CacheService;\r\n\r\n  constructor(cache: CacheService) {\r\n    this.cache = cache;\r\n  }\r\n}\r\n\r\nexport default ServicesStore;\r\n","export default class TypeEntry {\r\n  name!: string;\r\n  label?: string;\r\n  position = 0;\r\n  iconColor?: string;\r\n  icon?: string;\r\n  system?: boolean;\r\n}\r\n","import { Theme } from '@material-ui/core';\r\nimport { action, observable } from 'mobx';\r\nimport TypeEntry from '../models/entries/TypeEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass TypesStore {\r\n  @observable types!: TypeEntry[];\r\n  @observable typesLoaded = false;\r\n  @observable typeToSave?: TypeEntry;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    const loadTypes = async () => {\r\n      await this.loadTypes();\r\n    };\r\n    loadTypes();\r\n  }\r\n\r\n  @action getTypeToSaveByName = (name: string) => {\r\n    this.typeToSave = {\r\n      ...(this.getTypeByName(name) || new TypeEntry()),\r\n    };\r\n  };\r\n\r\n  getTypeByName = (name: string) => {\r\n    return this.types.find((t) => t.name === name);\r\n  };\r\n\r\n  @action updateTypeToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.typeToSave, prop, newValue);\r\n  };\r\n\r\n  validateTypeToSave = () => {\r\n    let valid = true;\r\n    if (!this.typeToSave?.name) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.label) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.position) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedTypes = () => {\r\n    return this.types.sort((a, b) => {\r\n      if (a.position > b.position) {\r\n        return 1;\r\n      }\r\n      if (a.position < b.position) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveType = async (typeId: string) => {\r\n    const editType = this.types.find((t) => t.name === typeId);\r\n    if (editType) {\r\n      if (editType.system && editType.label !== this.typeToSave!.label) {\r\n        this.typeToSave!.system = false;\r\n      }\r\n      Object.keys(editType).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.typeToSave, k);\r\n        Helpers.setObjectValueByProp(editType, k, v);\r\n      });\r\n    } else {\r\n      this.types.push(this.typeToSave!);\r\n    }\r\n    this.types = this.getSortedTypes();\r\n    await this.cacheService.add('allTypes', this.types);\r\n  };\r\n\r\n  @action deleteType = async (typeId: string) => {\r\n    const type = this.types.find((t) => t.name === typeId);\r\n    if (type) {\r\n      const typeIndex = this.types.indexOf(type);\r\n      if (typeIndex > -1) {\r\n        this.types.splice(typeIndex, 1);\r\n        await this.cacheService.add('allTypes', this.types);\r\n      }\r\n    }\r\n  };\r\n\r\n  getColorInHex = (theme: Theme, color?: string) => {\r\n    if (color) {\r\n      if (color.indexOf('#') === 0) {\r\n        return color;\r\n      }\r\n      return Helpers.getObjectValueByProp(theme, color);\r\n    }\r\n    return '';\r\n  };\r\n\r\n  @action loadTypes = async () => {\r\n    this.types = [];\r\n\r\n    const language = await this.cacheService.get<String>('language', String);\r\n    const translate: any = Helpers.getTranslateByLanguage(language);\r\n\r\n    this.typesLoaded = false;\r\n    const types = await this.cacheService.get<TypeEntry>(\r\n      'allTypes',\r\n      TypeEntry,\r\n      true\r\n    );\r\n    if (types) {\r\n      this.types = types;\r\n    } else {\r\n      this.types.push({\r\n        name: 'MenuFood',\r\n        position: 1,\r\n        iconColor: 'palette.secondary.dark',\r\n        icon: 'fastfood',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuStore',\r\n        position: 2,\r\n        iconColor: 'palette.success.dark',\r\n        icon: 'local_grocery_store',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuBus',\r\n        position: 3,\r\n        iconColor: 'palette.warning.dark',\r\n        icon: 'directions_bus',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuClothes',\r\n        position: 4,\r\n        iconColor: 'palette.primary.dark',\r\n        icon: 'local_mall',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuGasStation',\r\n        position: 5,\r\n        iconColor: 'palette.primary.light',\r\n        icon: 'local_gas_station',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuChilds',\r\n        position: 6,\r\n        iconColor: 'palette.warning.light',\r\n        icon: 'child_friendly',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuServices',\r\n        position: 7,\r\n        iconColor: 'palette.secondary.light',\r\n        icon: 'important_devices',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuOther',\r\n        position: 8,\r\n        iconColor: 'palette.success.light',\r\n        icon: 'more_vert',\r\n        system: true,\r\n      });\r\n\r\n      this.types = this.getSortedTypes();\r\n      this.cacheService.add('allTypes', this.types);\r\n    }\r\n    this.types.forEach((t: TypeEntry) => {\r\n      if (t.system) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        t.label = translate[t.name];\r\n      }\r\n    });\r\n    this.typesLoaded = true;\r\n  };\r\n}\r\n\r\nexport default TypesStore;\r\n","import * as AllIcons from '@material-ui/icons';\r\nimport { action, observable, computed } from 'mobx';\r\nimport CacheService from '../services/CacheService';\r\nimport { IconTypesEnum } from '../models/Enum';\r\n\r\nclass IconsStore {\r\n  @observable iconsTypes: Map<IconTypesEnum, string>;\r\n  @observable filledIcons: string[] = [];\r\n  @observable outlinedIcons: string[] = [];\r\n  @observable roundedIcons: string[] = [];\r\n  @observable twoToneIcons: string[] = [];\r\n  @observable sharpIcons: string[] = [];\r\n  @observable iconsOnOnePage = 100;\r\n  @observable foundedIcons: string[] = [];\r\n  @observable foundedTotalCount = 0;\r\n\r\n  @computed get pagesCount() {\r\n    return Math.ceil(this.foundedTotalCount / this.iconsOnOnePage);\r\n  }\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n\r\n    this.iconsTypes = new Map();\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Filled,\r\n      IconTypesEnum[IconTypesEnum.Filled]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Outlined,\r\n      IconTypesEnum[IconTypesEnum.Outlined]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Rounded,\r\n      IconTypesEnum[IconTypesEnum.Rounded]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.TwoTone,\r\n      IconTypesEnum.TwoTone.toString()\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Sharp,\r\n      IconTypesEnum[IconTypesEnum.Sharp]\r\n    );\r\n\r\n    this.cacheService.get<Object>('allIcons', Object).then((allIcons) => {\r\n      if (!allIcons) {\r\n        Object.keys(AllIcons).forEach((k: string) => {\r\n          if (\r\n            k.indexOf(IconTypesEnum.Outlined) ===\r\n            k.length - IconTypesEnum.Outlined.length\r\n          ) {\r\n            this.outlinedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Rounded) ===\r\n            k.length - IconTypesEnum.Rounded.length\r\n          ) {\r\n            this.roundedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.TwoTone) ===\r\n            k.length - IconTypesEnum.TwoTone.length\r\n          ) {\r\n            this.twoToneIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Sharp) ===\r\n            k.length - IconTypesEnum.Sharp.length\r\n          ) {\r\n            this.sharpIcons.push(k);\r\n          } else {\r\n            this.filledIcons.push(k);\r\n          }\r\n        });\r\n        const allIconsForCache = {\r\n          outlinedIcons: this.outlinedIcons,\r\n          roundedIcons: this.roundedIcons,\r\n          twoToneIcons: this.twoToneIcons,\r\n          sharpIcons: this.sharpIcons,\r\n          filledIcons: this.filledIcons,\r\n        };\r\n        this.cacheService.add('allIcons', allIconsForCache);\r\n      } else {\r\n        this.filledIcons = allIcons.filledIcons;\r\n        this.outlinedIcons = allIcons.outlinedIcons;\r\n        this.roundedIcons = allIcons.roundedIcons;\r\n        this.twoToneIcons = allIcons.twoToneIcons;\r\n        this.sharpIcons = allIcons.sharpIcons;\r\n      }\r\n    });\r\n  }\r\n\r\n  @action searchIconsByFilterAndPage = (\r\n    filter: string,\r\n    types: IconTypesEnum[],\r\n    page: number\r\n  ) => {\r\n    let result: string[] = [];\r\n    const lowerCasedFilter = filter.toLowerCase();\r\n    types.forEach((type: IconTypesEnum) => {\r\n      let workingArray: string[] | null = null;\r\n      if (type === IconTypesEnum.Filled) {\r\n        workingArray = this.filledIcons;\r\n      } else if (type === IconTypesEnum.Outlined) {\r\n        workingArray = this.outlinedIcons;\r\n      } else if (type === IconTypesEnum.Rounded) {\r\n        workingArray = this.roundedIcons;\r\n      } else if (type === IconTypesEnum.TwoTone) {\r\n        workingArray = this.twoToneIcons;\r\n      } else if (type === IconTypesEnum.Sharp) {\r\n        workingArray = this.sharpIcons;\r\n      }\r\n      if (workingArray) {\r\n        result = result.concat(\r\n          workingArray.filter(\r\n            (i: string) => i.toLowerCase().indexOf(lowerCasedFilter) !== -1\r\n          )\r\n        );\r\n      }\r\n    });\r\n    this.foundedTotalCount = result.length;\r\n    this.foundedIcons = result.slice(\r\n      (page - 1) * this.iconsOnOnePage,\r\n      page * this.iconsOnOnePage\r\n    );\r\n  };\r\n\r\n  getIconRightStringNameForFontToShow = (iconName: string) => {\r\n    const result = iconName.split(/(?=[A-Z])/);\r\n    let resultStr = result?.map((r) => r.toLowerCase()).join('_');\r\n    const numberMatch = resultStr.match(/[0-9]+/);\r\n    if (numberMatch?.index) {\r\n      resultStr = `${resultStr.substring(\r\n        0,\r\n        numberMatch.index\r\n      )}_${resultStr.substring(numberMatch.index)}`;\r\n    }\r\n    return resultStr;\r\n  };\r\n}\r\n\r\nexport default IconsStore;\r\n","import { Type } from 'class-transformer';\r\n\r\nexport default class CashEntry {\r\n  id!: string;\r\n  typeName!: string;\r\n  @Type(() => Date)\r\n  createdDate!: Date;\r\n  total!: number;\r\n  currency!: string;\r\n  description?: string;\r\n}\r\n","import { observable, action } from 'mobx';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport CashEntry from '../models/entries/CashEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass CashStore {\r\n  @observable cashes: CashEntry[] = [];\r\n  @observable cashToSave?: CashEntry;\r\n  @observable cashesLoaded = false;\r\n\r\n  private cacheService: CacheService;\r\n  // private dateFns: DateFnsUtils;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.loadAllCashes();\r\n  }\r\n\r\n  @action getCashToSaveById = (id: string) => {\r\n    this.cashToSave = {\r\n      ...(this.cashes.find((t) => t.id === id) || ({} as CashEntry)),\r\n    };\r\n  };\r\n\r\n  @action updateCashToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.cashToSave, prop, newValue);\r\n  };\r\n\r\n  validateCashToSave = () => {\r\n    let valid = true;\r\n    if (!this.cashToSave?.typeName) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.createdDate) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.total) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedCashes = () => {\r\n    return this.cashes.sort((a, b) => {\r\n      if (a.createdDate > b.createdDate) {\r\n        return -1;\r\n      }\r\n      if (a.createdDate < b.createdDate) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveCash = async (cashId: string) => {\r\n    const editCash = this.cashes.find((c) => c.id === cashId);\r\n    if (editCash) {\r\n      Object.keys(editCash).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.cashToSave, k);\r\n        Helpers.setObjectValueByProp(editCash, k, v);\r\n      });\r\n    } else {\r\n      this.cashToSave!.id = uuidv4();\r\n      this.cashes.push(this.cashToSave!);\r\n    }\r\n    this.cashes = this.getSortedCashes();\r\n    await this.cacheService.add('allCashes', this.cashes);\r\n    await this.loadAllCashes();\r\n  };\r\n\r\n  @action deleteCash = async (cashId: string) => {\r\n    const cash = this.cashes.find((c) => c.id === cashId);\r\n    if (cash) {\r\n      const typeIndex = this.cashes.indexOf(cash);\r\n      if (typeIndex > -1) {\r\n        this.cashes.splice(typeIndex, 1);\r\n        await this.cacheService.add('allCashes', this.cashes);\r\n      }\r\n    }\r\n  };\r\n\r\n  @action getCashesByPeriod = (dateFrom: Date, dateTo?: Date) => {\r\n    if (!dateTo) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      dateTo = new Date();\r\n    }\r\n    console.log(dateFrom, dateTo);\r\n  };\r\n\r\n  private loadAllCashes = async () => {\r\n    this.cashes = [];\r\n    const cashes = await this.cacheService.get<CashEntry>(\r\n      'allCashes',\r\n      CashEntry,\r\n      true\r\n    );\r\n    if (cashes) {\r\n      this.cashes = cashes;\r\n      this.cashes = this.getSortedCashes();\r\n    }\r\n    this.cashesLoaded = true;\r\n  };\r\n\r\n  getCashesDistinctDates = (cashes: CashEntry[]) => {\r\n    const datesOfCashes = cashes.map((c) =>\r\n      c.createdDate\r\n        .toISOString()\r\n        .substring(0, c.createdDate.toISOString().indexOf('T'))\r\n    );\r\n    const result: string[] = [];\r\n    datesOfCashes.forEach((d) => {\r\n      if (!result.length || result[result.length - 1] !== d) {\r\n        result.push(d);\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getCashesStartedByDate = (cashes: CashEntry[], dateYYYYMMDD: string) => {\r\n    return cashes.filter((c) =>\r\n      c.createdDate.toISOString().startsWith(dateYYYYMMDD)\r\n    );\r\n  };\r\n}\r\n\r\nexport default CashStore;\r\n","export default class LanguageEntry {\r\n  name!: string;\r\n  title?: string;\r\n  rtl?: boolean;\r\n}\r\n","export default class CurrencyEntry {\r\n  name!: string;\r\n  symbol!: string;\r\n}\r\n","export default class ErrorEntry {\r\n  success!: boolean;\r\n  errors!: string[];\r\n\r\n  constructor() {\r\n    this.success = true;\r\n    this.errors = [];\r\n  }\r\n\r\n  addError(error: string) {\r\n    this.success = false;\r\n    this.errors.push(error);\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { LanguagesEnum } from '../models/Enum';\r\nimport CacheService from '../services/CacheService';\r\nimport LanguageEntry from '../models/entries/LanguageEntry';\r\nimport CurrencyEntry from '../models/entries/CurrencyEntry';\r\nimport ErrorEntry from '../models/entries/ErrorEntry';\r\nimport TranslateEntry from '../models/entries/TranslateEntry';\r\n\r\nexport default class PropertiesStore {\r\n  @observable firstTimeOptionsSelected = true;\r\n  @observable languages!: LanguageEntry[];\r\n  @observable currentLanguage!: LanguageEntry;\r\n  @observable currencies!: CurrencyEntry[];\r\n  @observable defaultCurrency!: CurrencyEntry;\r\n  @observable dateFns = new DateFnsUtils({ locale: enLocale });\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    const fillLanguages = async () => {\r\n      await this.fillLanguages();\r\n    };\r\n    fillLanguages();\r\n\r\n    const loadCurrencies = async () => {\r\n      await this.loadCurrencies();\r\n    };\r\n    loadCurrencies();\r\n\r\n    this.cacheService\r\n      .get<Boolean>('firstTimeOptionsSelected', Boolean)\r\n      .then((r: boolean) => {\r\n        this.firstTimeOptionsSelected = !!r;\r\n      });\r\n  }\r\n\r\n  private fillLanguages = async () => {\r\n    this.languages = [];\r\n    this.languages.push({ name: LanguagesEnum.English, title: 'English' });\r\n    this.languages.push({\r\n      name: LanguagesEnum.Hebrew,\r\n      title: 'עברית',\r\n      rtl: true,\r\n    });\r\n    this.languages.push({ name: LanguagesEnum.Russian, title: 'Русский' });\r\n\r\n    this.loadCurrentLanguage('');\r\n  };\r\n\r\n  @action changeLanguage = async (languageName: string) => {\r\n    await this.cacheService.add('language', languageName);\r\n    await this.loadCurrentLanguage(languageName);\r\n  };\r\n\r\n  @action changeCurrency = async (currencyName: string) => {\r\n    await this.cacheService.add('currency', currencyName);\r\n    await this.loadCurrencies();\r\n  };\r\n\r\n  @action loadCurrentLanguage = async (languageName: string) => {\r\n    let language = languageName;\r\n    if (!language) {\r\n      language = await this.cacheService.get<String>('language', String);\r\n    }\r\n    let currentLanguage = this.languages.find((l) => l.name === language);\r\n    if (!currentLanguage) {\r\n      currentLanguage = new LanguageEntry();\r\n      currentLanguage.name = LanguagesEnum.English;\r\n      currentLanguage.title = 'English';\r\n    }\r\n    this.currentLanguage = currentLanguage;\r\n\r\n    if (this.currentLanguage.name === LanguagesEnum.English) {\r\n      this.dateFns = new DateFnsUtils({ locale: enLocale });\r\n    } else if (this.currentLanguage.name === LanguagesEnum.Hebrew) {\r\n      this.dateFns = new DateFnsUtils({ locale: heLocale });\r\n    } else if (this.currentLanguage.name === LanguagesEnum.Russian) {\r\n      this.dateFns = new DateFnsUtils({ locale: ruLocale });\r\n    }\r\n  };\r\n\r\n  private loadCurrencies = async () => {\r\n    this.currencies = [];\r\n\r\n    const currencies = await this.cacheService.get<CurrencyEntry>(\r\n      'allCurrencies',\r\n      CurrencyEntry,\r\n      true\r\n    );\r\n    if (currencies && currencies.length) {\r\n      this.currencies = currencies;\r\n    } else {\r\n      this.currencies.push({ name: 'USD', symbol: '$' });\r\n      this.currencies.push({ name: 'EUR', symbol: '€' });\r\n      this.currencies.push({ name: 'ILS', symbol: '₪' });\r\n    }\r\n    const currency = await this.cacheService.get<String>('currency', String);\r\n    this.defaultCurrency =\r\n      this.currencies.find((c) => c.name === currency) || new CurrencyEntry();\r\n  };\r\n\r\n  @action addNewCurrency = async (\r\n    translate: TranslateEntry,\r\n    currency: CurrencyEntry\r\n  ) => {\r\n    const result = new ErrorEntry();\r\n    if (!currency.name) {\r\n      result.addError(translate.CurrencyNameIsRequired);\r\n    }\r\n    if (!currency.symbol) {\r\n      result.addError(translate.CurrencySymbolIsRequired);\r\n    }\r\n    if (this.currencies.some((c) => c.name === currency.name)) {\r\n      result.addError(translate.CurrencyWithThisNameIsAlreadyExists);\r\n    }\r\n    if (result.success) {\r\n      this.currencies.push(currency);\r\n      await this.cacheService.add('allCurrencies', this.currencies);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action saveFirstTimeOptions = async (\r\n    translate: TranslateEntry,\r\n    languageName: string,\r\n    currencyName: string\r\n  ) => {\r\n    const result = new ErrorEntry();\r\n    if (!languageName) {\r\n      result.addError(translate.LanguageSelectionIsRequired);\r\n    }\r\n    if (!currencyName) {\r\n      result.addError(translate.CurrencySelectionIsRequired);\r\n    }\r\n    if (result.success) {\r\n      await this.changeLanguage(languageName);\r\n      await this.changeCurrency(currencyName);\r\n      await this.cacheService.add('firstTimeOptionsSelected', true);\r\n      this.firstTimeOptionsSelected = true;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action getCurrencyByName = (name: string) => {\r\n    const currency = this.currencies.find((c) => c.name === name);\r\n    return currency || this.defaultCurrency || new CurrencyEntry();\r\n  };\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport TranslateEntry from '../models/entries/TranslateEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass TranslatesStore {\r\n  @observable translate: TranslateEntry;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.translate = new TranslateEntry();\r\n\r\n    this.cacheService.get<String>('language', String).then((l) => {\r\n      this.loadTranslate(l || 'en-US');\r\n    });\r\n  }\r\n\r\n  @action loadTranslate = async (language: string) => {\r\n    this.translate = Helpers.getTranslateByLanguage(language);\r\n  };\r\n}\r\n\r\nexport default TranslatesStore;\r\n","import CacheService from '../services/CacheService';\r\nimport AppStore from './AppStore';\r\nimport ServicesStore from './ServicesStore';\r\nimport TypesStore from './TypesStore';\r\nimport IconsStore from './IconsStore';\r\nimport CashStore from './CashStore';\r\nimport PropertiesStore from './PropertiesStore';\r\nimport TranslatesStore from './TranslatesStore';\r\n\r\nconst appStore = new AppStore();\r\nconst cacheService = new CacheService(appStore);\r\nconst servicesStore = new ServicesStore(cacheService);\r\nappStore.services = servicesStore;\r\nconst cashStore = new CashStore(cacheService);\r\nconst typesStore = new TypesStore(cacheService);\r\nconst iconsStore = new IconsStore(cacheService);\r\nconst propertiesStore = new PropertiesStore(cacheService);\r\nconst translatesStore = new TranslatesStore(cacheService);\r\n\r\nconst stores = {\r\n  appStore,\r\n  cashStore,\r\n  typesStore,\r\n  iconsStore,\r\n  propertiesStore,\r\n  translatesStore,\r\n};\r\n\r\nexport default stores;\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport { Provider } from 'mobx-react';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport classes from './App.module.css';\r\nimport Body from './components/Body/Body';\r\nimport Menu from './components/Menu/Menu';\r\nimport store from './stores';\r\nimport * as AppSettings from '../package.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename={`/${AppSettings.name}`}>\r\n        <CssBaseline />\r\n        <div className={classes.page}>\r\n          <Menu />\r\n          <Body />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
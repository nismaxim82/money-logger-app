{"version":3,"sources":["components/IconsChooser/IconsChooser.module.css","components/IncomesPanel/IncomesPanel.module.css","components/CashPanel/CashPanel.module.css","components/RecordsPanel/RecordsPanel.module.css","components/MenuPanel/MenuPanel.module.css","components/TypeEditPanel/TypeEditPanel.module.css","components/CashEditPanel/CashEditPanel.module.css","components/PropertiesPanel/PropertiesPanel.module.css","components/CurrencyEditPanel/CurrencyEditPanel.module.css","components/MainProperties/MainProperties.module.css","components/Body/Body.module.css","components/FirstTimeShowPanel/FirstTimeShowPanel.module.css","components/Menu/Menu.module.css","components/ThemeCreator/ThemeCreator.module.css","stores/UseStores.ts","models/entries/TranslateEntry.ts","utility/Helpers.ts","models/Enum.ts","components/CashPanel/CashPanel.tsx","components/RecordsPanel/RecordsPanel.tsx","components/TypesPanel/TypesPanel.tsx","components/MenuPanel/MenuPanel.tsx","utility/UseDebounce.tsx","components/IconsChooser/IconsChooser.tsx","components/TypeEditPanel/TypeEditPanel.tsx","components/CashEditPanel/CashEditPanel.tsx","components/SnackErrors/SnackErrors.tsx","components/CurrencyEditPanel/CurrencyEditPanel.tsx","components/FormikField/FormikField.tsx","components/MainProperties/MainProperties.tsx","components/PropertiesPanel/PropertiesPanel.tsx","components/IncomesPanel/IncomesPanel.tsx","routes/Routes.ts","routes/RouteWithSubRoutes.tsx","components/FirstTimeShowPanel/FirstTimeShowPanel.tsx","components/Body/Body.tsx","components/LinkTab/LinkTab.tsx","components/Menu/Menu.tsx","components/ThemeCreator/ThemeCreator.tsx","services/CacheService.ts","stores/AppStore.ts","stores/ServicesStore.ts","models/entries/TypeEntry.ts","stores/TypesStore.ts","stores/IconsStore.ts","models/entries/CashEntry.ts","models/entries/CashPeriodFilterEntry.ts","stores/CashStore.ts","models/entries/LanguageEntry.ts","models/entries/CurrencyEntry.ts","models/entries/ErrorEntry.ts","stores/PropertiesStore.ts","stores/TranslatesStore.ts","stores/FormatsStore.ts","stores/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStores","useContext","MobXProviderContext","store","TranslateEntry","MainProperties","Language","LanguageIsRequired","Currency","CurrencyIsRequired","AddNewCurrency","Save","LanguageSelectionIsRequired","CurrencySelectionIsRequired","NewCurrency","Name","NameIsRequiredForExampleUSD","Symbol","SymbolIsRequiredForExample$","CurrencyNameIsRequired","CurrencySymbolIsRequired","CurrencyWithThisNameIsAlreadyExists","AddPayment","RecordsN","Types","More","PaymentEdit","PaymentNew","PaymentType","PaymentTypeIsRequired","Date","Time","Description","PaymentTotal","PaymentTotalIsRequired","NoDataFoundForTheSelectedPeriod","Total","TypeEdit","TypeNew","IDIsRequired","NameIsRequired","PositionInTheList","PositionInTheListIsRequired","IconColor","Icon","SelectTheColorOfTheIcon","Select","Cancel","SelectIcon","IconsTypes","EnterToSearch","MatchingResultsN","Reports","Incomes","Sync","Synchronization","IncomesFilter","ApplyFilter","IncomeType","Periodic","Fixed","Helpers","combineStyles","result","styles","length","otherStyles","slice","forEach","s","Object","keys","k","getObjectValueByProp","obj","prop","splittedProps","split","splice","join","setObjectValueByProp","value","getDateFromString","date","getTranslateByLanguage","language","require","formatString","i","replace","removeDuplicateStyles","setTimeout","allHeadStyles","document","head","getElementsByTagName","specificMeta","removedMeta","style","dataset","jss","meta","indexOf","nextStyle","nextSibling","push","remove","MenuTypesEnum","MenuSubTypesEnum","IconTypesEnum","LanguagesEnum","PeriodTypeEnum","useStyles","makeStyles","theme","createStyles","tabPanel","gridGap","spacing","cardLabelText","marginTop","color","palette","text","primary","CashPanel","observer","typesStore","css","classes","useTheme","getThemeColorStyle","p","history","useHistory","buttonAddNewCashClick","event","typeId","currentTarget","Cash","Grid","container","className","grid","typesLoaded","types","map","type","key","name","item","xs","alignItems","justify","IconButton","card","label","cardLabel","onClick","data-type-id","iconColor","fontSize","cardIcon","icon","Typography","variant","root","padding","stickyHeader","background","default","lineHeight","paddingLeft","paddingRight","paddingTop","paddingBottom","borderBottom","main","stickyHeaderText","dark","cashItem","marginBottom","light","display","gridColumnGap","total","textAlign","totalCell","totalValue","marginLeft","RecordsPanel","cashStore","propertiesStore","translatesStore","formatsStore","translate","buttonCashClick","cashId","cashesByPeriod","getCashesByPeriod","cashes","cashesDates","getCashesDistinctDates","noData","sum","c","numberWithDigits","format","getTotalSum","defaultCurrency","symbol","List","listRoot","subheader","d","listSection","cashesUl","ListSubheader","dateFns","getCashesStartedByDate","cash","getTypeByName","typeName","ListItem","id","button","data-cash-id","getColorInHex","createdDate","getCurrencyByName","currency","description","desctiptionCell","TypesPanel","typeClick","component","list","data-id","ListItemAvatar","ListItemText","primaryTypographyProps","Divider","justifyContent","MenuPanel","buttonLinkClick","url","linkUrl","buttons","endUrl","Properties","b","data-link-url","Menu","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","clearTimeout","searchInput","typesSelectChips","marginRight","typesSelectChip","foundedTotalCount","foundedIconsContainer","foundedIconsIconFont","selectedIcon","secondary","pagination","IconsChooser","props","iconsStore","iconsButtonsContainerRef","React","useRef","Filled","typeValue","setTypeValue","filter","setFilter","page","setPage","debouncedSearchFilter","debouncedSearchTypeValue","debouncedSearchPage","current","scrollTop","searchIconsByFilterAndPage","setSelectedIcon","onIconClick","iconRightName","querySelectorAll","innerText","selectedIconChanged","FormControl","typeSelect","fullWidth","InputLabel","labelId","multiple","onChange","newValue","target","input","Input","renderValue","selected","Chip","Array","from","iconsTypes","MenuItem","Checkbox","checked","get","placeholder","newFilter","onKeyUp","keyCode","blur","startAdornment","InputAdornment","position","ref","foundedIcons","getIconRightStringNameForFontToShow","foundedIconsButton","pagesCount","Pagination","count","size","newPage","modalContainer","zIndex","modal","paper","firstBar","secondBar","toolbarIcon","body","colorAndIconContainer","colorDialogBox","colorDialogHeader","minHeight","mixins","toolbar","colorDialogBody","colorDialogFooter","iconDialogHeader","iconDialogBody","iconDialogFooter","TypeEditPanel","setTypeId","setColor","colorPickerOpened","setColorPickerOpened","setIcon","iconPickerOpened","setIconPickerOpened","match","params","getTypeToSaveByName","typeToSave","deleteType","a","saveEdit","validateTypeToSave","saveType","changeTypeField","propName","updateTypeToSaveByProp","getAppliedColor","colorHandleClose","iconHandleClose","Fade","in","timeout","Slide","direction","mountOnEnter","unmountOnExit","AppBar","Toolbar","Box","emptyBox","TextField","error","disabled","inputProps","helperText","onFocus","select","dialogSelect","SelectProps","InputProps","Dialog","open","fullScreen","Paper","pickerProps","hex","Button","iconDialogBox","newIcon","selectTypeIcon","totalInput","currencySelect","CashEditPanel","setCashId","cashCurrency","setCashCurrency","enPickerLocale","pickerLocale","setPickerLocale","currentLanguage","English","Hebrew","hePickerLocale","Russian","ruPickerLocale","rtl","cashesLoaded","getCashToSaveById","cashToSave","updateCashToSaveByProp","deleteCash","Records","validateCashToSave","saveCash","pickerDateChange","totalInputRef","updateCashCurrency","submitOnEnterKeyUp","selectedTypeId","dialogSelectBox","locale","utils","DateFnsUtils","datesGrid","margin","okLabel","cancelLabel","DialogProps","pickersRtl","descriptionInput","console","log","focus","totalContainer","inputRef","parseFloat","currencies","errors","SnackErrors","openSnack","setOpenSnack","closeHandle","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","e","action","currencySymbolField","CurrencyEditPanel","currencyId","currencyName","setCurrencyName","currencySymbol","setCurrencySymbol","saveErrors","setSaveErrors","addNewCurrency","saveResult","success","onSaveEdit","onCancelEdit","FormikField","memo","formik","children","otherProps","values","handleChange","onBlur","handleBlur","Boolean","touched","String","forwardRef","useFormik","initialValues","validationSchema","Yup","required","onSubmit","saveFirstTimeOptions","loadTypes","loadTranslate","useImperativeHandle","onSave","submitForm","setFieldValue","addNewCurrencyOpened","setAddNewCurrencyOpened","handleSubmit","noValidate","languages","l","title","addCurrencyCell","selectedNewCurrencyName","PropertiesPanel","mainPropertiesRef","IncomesPanel","ExpansionPanel","ExpansionPanelSummary","expandIcon","heading","ExpansionPanelDetails","routes","path","exact","components","RouteWithSubRoutes","route","render","isArray","Component","index","currenciesContainer","currenciesSelect","addCurrencyButton","footer","FirstTimeShowPanel","buttonSaveProperties","fab","bottom","right","Body","appStore","selectedMenuUrl","to","prefix","getAddButtonLinkUrl","Fab","aria-label","firstTimeOptionsSelected","LinkTab","Tab","Link","currentUrl","pathname","preventDefault","menuIcon","contrastText","comboButton","textTransform","searchIcon","loadSelectedMenuIndex","location","listener","listen","menuTabProps","href","selectedMenuIndex","headerTitle","headerBox","endIcon","ArrowDropDown","comboButtonTextBox","cashPeriodFilter","Search","Tabs","setSelectedMenuIndex","AttachMoney","MenuBook","MoreHoriz","jssScript","create","plugins","jssPreset","ThemeCreator","createMuiTheme","setTheme","classList","add","ThemeProvider","StylesProvider","CssBaseline","basename","AppSettings","CacheService","this","then","r","version","clear","window","reload","entry","entryStr","JSON","stringify","localStorage","setItem","TCreator","validAt","enableCache","getItem","parsedResult","parse","arrayResult","parsedEntry","plainToClass","AppStore","AppJson","services","observable","urlParts","ServicesStore","cache","TypeEntry","system","TypesStore","cacheService","find","t","valid","getSortedTypes","sort","editType","v","typeIndex","IconsStore","iconName","resultStr","toLowerCase","numberMatch","substring","Map","set","Outlined","Rounded","TwoTone","toString","Sharp","allIcons","filledIcons","outlinedIcons","roundedIcons","twoToneIcons","sharpIcons","AllIcons","allIconsForCache","Math","ceil","iconsOnOnePage","computed","lowerCasedFilter","workingArray","concat","CashEntry","Type","CashPeriodFilterEntry","initializeByType","Custom","undefined","now","Daily","getFullYear","getMonth","getDate","Weekly","addDays","Monthly","Year","reinitializeByType","CashStore","getSortedCashes","loadAllCashes","loadCashPeriodFilter","datesOfCashes","toISOString","dateYYYYMMDD","startsWith","editCash","uuidv4","LanguageEntry","CurrencyEntry","ErrorEntry","PropertiesStore","fillLanguages","loadCurrentLanguage","loadCurrencies","enLocale","languageName","localeChanged","heLocale","ruLocale","addError","some","changeLanguage","changeCurrency","TranslatesStore","FormatsStore","Intl","NumberFormat","servicesStore","stores","App","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.d402c617.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typesSelectChips\":\"IconsChooser_typesSelectChips__rNRQf\",\"foundedIconsContainer\":\"IconsChooser_foundedIconsContainer__9eTT8\",\"foundedIconsButton\":\"IconsChooser_foundedIconsButton__3wU-W\",\"pagination\":\"IconsChooser_pagination__1dXi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"IncomesPanel_modalContainer__2fyOL\",\"emptyBox\":\"IncomesPanel_emptyBox__2awCp\",\"body\":\"IncomesPanel_body__3xSPc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CashPanel_grid__1M0h2\",\"card\":\"CashPanel_card__2ETq-\",\"cardLabel\":\"CashPanel_cardLabel__3f2v_\",\"lastCard\":\"CashPanel_lastCard__2tePY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RecordsPanel_root__2BXAY\",\"noData\":\"RecordsPanel_noData__1iBIH\",\"listRoot\":\"RecordsPanel_listRoot__2cJAW\",\"cashesUl\":\"RecordsPanel_cashesUl__3kagc\",\"cashItem\":\"RecordsPanel_cashItem__1OmpH\",\"desctiptionCell\":\"RecordsPanel_desctiptionCell__3udrE\",\"total\":\"RecordsPanel_total__3DQx_\",\"totalValue\":\"RecordsPanel_totalValue__30E6I\",\"totalCell\":\"RecordsPanel_totalCell__1FQFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"MenuPanel_grid__284k2\",\"card\":\"MenuPanel_card__3IAli\",\"cardLabel\":\"MenuPanel_cardLabel__2UTrW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"TypeEditPanel_modalContainer__o8c64\",\"emptyBox\":\"TypeEditPanel_emptyBox__2akL7\",\"body\":\"TypeEditPanel_body__2pBnt\",\"colorAndIconContainer\":\"TypeEditPanel_colorAndIconContainer__35IGH\",\"dialogSelect\":\"TypeEditPanel_dialogSelect__2KpQS\",\"colorDialogBox\":\"TypeEditPanel_colorDialogBox__mLPjz\",\"iconDialogBox\":\"TypeEditPanel_iconDialogBox__j1WSI\",\"colorDialogHeader\":\"TypeEditPanel_colorDialogHeader__2qD8B\",\"iconDialogHeader\":\"TypeEditPanel_iconDialogHeader__2Q3n4\",\"colorDialogBody\":\"TypeEditPanel_colorDialogBody__285q0\",\"iconDialogBody\":\"TypeEditPanel_iconDialogBody__nr6zd\",\"colorDialogFooter\":\"TypeEditPanel_colorDialogFooter__2ZN7j\",\"iconDialogFooter\":\"TypeEditPanel_iconDialogFooter__3L6_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"CashEditPanel_modalContainer__3HV8D\",\"emptyBox\":\"CashEditPanel_emptyBox__Oe2ld\",\"body\":\"CashEditPanel_body__1Wrp-\",\"dialogSelectBox\":\"CashEditPanel_dialogSelectBox__2sII0\",\"datesGrid\":\"CashEditPanel_datesGrid__MiAud\",\"pickersRtl\":\"CashEditPanel_pickersRtl__2zEt4\",\"totalContainer\":\"CashEditPanel_totalContainer__3fMHG\",\"descriptionInput\":\"CashEditPanel_descriptionInput__3z4uu\",\"currencySelect\":\"CashEditPanel_currencySelect__2woQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"PropertiesPanel_modalContainer__Zfu_r\",\"emptyBox\":\"PropertiesPanel_emptyBox__3BnWO\",\"body\":\"PropertiesPanel_body__3XnCM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"CurrencyEditPanel_modalContainer__2FuyW\",\"emptyBox\":\"CurrencyEditPanel_emptyBox__2wvgQ\",\"body\":\"CurrencyEditPanel_body__3xbws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"addCurrencyCell\":\"MainProperties_addCurrencyCell__27Kq9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__2G_GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"FirstTimeShowPanel_modalContainer__1T54k\",\"body\":\"FirstTimeShowPanel_body__35A_R\",\"currenciesContainer\":\"FirstTimeShowPanel_currenciesContainer__3gQgL\",\"currenciesSelect\":\"FirstTimeShowPanel_currenciesSelect__ZmVZt\",\"addCurrencyButton\":\"FirstTimeShowPanel_addCurrencyButton__-wJDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBox\":\"Menu_headerBox__1Me5e\",\"headerTitle\":\"Menu_headerTitle__2LUUc\",\"comboButton\":\"Menu_comboButton__OoKdQ\",\"comboButtonTextBox\":\"Menu_comboButtonTextBox__1axJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ThemeCreator_page__1dUxF\"};","import { MobXProviderContext } from 'mobx-react';\r\nimport { useContext } from 'react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext).store;\r\n};\r\nexport default useStores;\r\n","export default class TranslateEntry {\r\n  MainProperties!: string;\r\n  Language!: string;\r\n  LanguageIsRequired!: string;\r\n  Currency!: string;\r\n  CurrencyIsRequired!: string;\r\n  AddNewCurrency!: string;\r\n  Save!: string;\r\n  LanguageSelectionIsRequired!: string;\r\n  CurrencySelectionIsRequired!: string;\r\n  NewCurrency!: string;\r\n  Name!: string;\r\n  NameIsRequiredForExampleUSD!: string;\r\n  Symbol!: string;\r\n  SymbolIsRequiredForExample$!: string;\r\n  CurrencyNameIsRequired!: string;\r\n  CurrencySymbolIsRequired!: string;\r\n  CurrencyWithThisNameIsAlreadyExists!: string;\r\n  AddPayment!: string;\r\n  RecordsN!: string;\r\n  Types!: string;\r\n  More!: string;\r\n  PaymentEdit!: string;\r\n  PaymentNew!: string;\r\n  PaymentType!: string;\r\n  PaymentTypeIsRequired!: string;\r\n  Date!: string;\r\n  Time!: string;\r\n  Description!: string;\r\n  PaymentTotal!: string;\r\n  PaymentTotalIsRequired!: string;\r\n  NoDataFoundForTheSelectedPeriod!: string;\r\n  Total!: string;\r\n  TypeEdit!: string;\r\n  TypeNew!: string;\r\n  IDIsRequired!: string;\r\n  NameIsRequired!: string;\r\n  PositionInTheList!: string;\r\n  PositionInTheListIsRequired!: string;\r\n  IconColor!: string;\r\n  Icon!: string;\r\n  SelectTheColorOfTheIcon!: string;\r\n  Select!: string;\r\n  Cancel!: string;\r\n  SelectIcon!: string;\r\n  IconsTypes!: string;\r\n  EnterToSearch!: string;\r\n  MatchingResultsN!: string;\r\n  Reports!: string;\r\n  Incomes!: string;\r\n  Sync!: string;\r\n  Synchronization!: string;\r\n  IncomesFilter!: string;\r\n  ApplyFilter!: string;\r\n  IncomeType!: string;\r\n  Periodic!: string;\r\n  Fixed!: string;\r\n}\r\n","import TranslateEntry from '../models/entries/TranslateEntry';\r\n\r\nclass Helpers {\r\n  static combineStyles = (...styles: any) => {\r\n    let result: any;\r\n    if (styles.length) {\r\n      result = { ...styles[0] };\r\n      const otherStyles = styles.slice(1);\r\n      if (otherStyles.length) {\r\n        otherStyles.forEach((s: any) => {\r\n          Object.keys(s).forEach((k: string) => {\r\n            if (!result[k]) {\r\n              result[k] = s[k];\r\n            } else {\r\n              result[k] += ` ${s[k]}`;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  static getObjectValueByProp = (obj: any, prop: string): any => {\r\n    const splittedProps = prop.split('.');\r\n    if (splittedProps.length > 1) {\r\n      return Helpers.getObjectValueByProp(\r\n        obj[splittedProps[0]],\r\n        splittedProps.splice(1).join('.')\r\n      );\r\n    }\r\n    return obj[splittedProps[0]];\r\n  };\r\n\r\n  static setObjectValueByProp = (obj: any, prop: string, value: any) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    obj[prop] = value;\r\n  };\r\n\r\n  static getDateFromString = (date: Date | string) => {\r\n    if (typeof date === 'string') {\r\n      // eslint-disable-next-line no-param-reassign\r\n      date = new Date(date);\r\n    }\r\n    return date;\r\n  };\r\n\r\n  static getTranslateByLanguage = (language: string) => {\r\n    let result: TranslateEntry;\r\n    if (language === 'en-US') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.json');\r\n    } else if (language === 'he-IL') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.he.json');\r\n    } else if (language === 'ru-RU') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.ru.json');\r\n    } else {\r\n      result = new TranslateEntry();\r\n    }\r\n    return result;\r\n  };\r\n\r\n  static formatString = (value: string, ...args: any[]) => {\r\n    if (args.length) {\r\n      for (let i = 0; i < args.length; i += 1) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        value = value.replace(`{${i}}`, args[i]);\r\n      }\r\n    }\r\n    return value;\r\n  };\r\n\r\n  static removeDuplicateStyles = () => {\r\n    setTimeout(() => {\r\n      const allHeadStyles = document.head.getElementsByTagName('style');\r\n      const specificMeta: string[] = ['MuiSelect'];\r\n      const removedMeta: string[] = [];\r\n      for (let i = 0; i < allHeadStyles.length; i += 1) {\r\n        const style = allHeadStyles[i];\r\n        const { jss, meta } = style.dataset;\r\n        if (specificMeta.indexOf(meta || '') !== -1) {\r\n          if (\r\n            jss === '' &&\r\n            meta &&\r\n            meta !== 'makeStyles' &&\r\n            removedMeta.indexOf(meta) === -1\r\n          ) {\r\n            const nextStyle = style.nextSibling as HTMLStyleElement;\r\n            if (\r\n              nextStyle &&\r\n              nextStyle.dataset.jss === jss &&\r\n              nextStyle.dataset.meta === meta\r\n            ) {\r\n              removedMeta.push(meta);\r\n              style.remove();\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }, 100);\r\n  };\r\n}\r\n\r\nexport default Helpers;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport enum MenuTypesEnum {\r\n  Cash = 'cash',\r\n  Records = 'records',\r\n  Types = 'types',\r\n  Menu = 'menu',\r\n}\r\n\r\nexport enum MenuSubTypesEnum {\r\n  Properties = 'properties',\r\n  Reports = 'reports',\r\n  Incomes = 'incomes',\r\n  Synchronization = 'synchronization',\r\n}\r\n\r\nexport enum IconTypesEnum {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  Rounded = 'Rounded',\r\n  TwoTone = 'Two tone',\r\n  Sharp = 'Sharp',\r\n}\r\n\r\nexport enum LanguagesEnum {\r\n  English = 'en-US',\r\n  Hebrew = 'he-IL',\r\n  Russian = 'ru-RU',\r\n}\r\n\r\nexport enum PeriodTypeEnum {\r\n  Custom = 1,\r\n  Daily = 2,\r\n  Weekly = 3,\r\n  Monthly = 4,\r\n  Year = 5,\r\n}\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabPanel: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CashPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const buttonAddNewCashClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    const { typeId } = event.currentTarget.dataset;\r\n    history.push(`/${MenuTypesEnum.Cash}/add/${typeId}`);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={css.grid} spacing={2}>\r\n      {typesStore.typesLoaded &&\r\n        typesStore.types.map((type: TypeEntry) => (\r\n          <Grid\r\n            key={type.name}\r\n            item\r\n            xs\r\n            container\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <IconButton\r\n              className={css.card}\r\n              classes={{ label: css.cardLabel }}\r\n              onClick={buttonAddNewCashClick}\r\n              data-type-id={type.name}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  color: getThemeColorStyle(type.iconColor),\r\n                  fontSize: '2rem',\r\n                }}\r\n                className={css.cardIcon}\r\n              >\r\n                {type.icon}\r\n              </Icon>\r\n              <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n                {type.label}\r\n              </Typography>\r\n            </IconButton>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CashPanel;\r\n","import {\r\n  createStyles,\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CashEntry from '../../models/entries/CashEntry';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport CashStore from '../../stores/CashStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport * as classes from './RecordsPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport FormatsStore from '../../stores/FormatsStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n    },\r\n    stickyHeader: {\r\n      background: theme.palette.background.default,\r\n      lineHeight: 'normal',\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      paddingTop: theme.spacing(1) + 2,\r\n      paddingBottom: theme.spacing(1) + 2,\r\n      borderBottom: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    stickyHeaderText: {\r\n      paddingBottom: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      borderBottom: `3px solid ${theme.palette.primary.dark}`,\r\n    },\r\n    cashItem: {\r\n      '&:last-child': {\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      padding: 0,\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      borderBottom: `1px solid ${theme.palette.primary.light}`,\r\n      display: 'grid',\r\n      gridColumnGap: theme.spacing(1),\r\n    },\r\n    total: {\r\n      textAlign: 'right',\r\n    },\r\n    totalCell: {\r\n      textAlign: 'right',\r\n    },\r\n    totalValue: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst RecordsPanel = observer(() => {\r\n  const {\r\n    cashStore,\r\n    typesStore,\r\n    propertiesStore,\r\n    translatesStore,\r\n    formatsStore,\r\n  }: {\r\n    cashStore: CashStore;\r\n    typesStore: TypesStore;\r\n    propertiesStore: PropertiesStore;\r\n    translatesStore: TranslatesStore;\r\n    formatsStore: FormatsStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const getFormattedDate = (date: Date) => {\r\n    return propertiesStore.dateFns.format(date, 'd MMMM, EEEE');\r\n  };\r\n\r\n  const getIconColor = (color?: string) => {\r\n    return typesStore.getColorInHex(theme, color);\r\n  };\r\n\r\n  const buttonCashClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const { cashId } = event.currentTarget.dataset;\r\n    history.push(`/${MenuTypesEnum.Cash}/edit/${cashId}`);\r\n  };\r\n\r\n  const cashesByPeriod = cashStore.getCashesByPeriod(cashStore.cashes);\r\n  const cashesDates = cashStore.getCashesDistinctDates(cashStore.cashes);\r\n\r\n  const getTotalSum = () => {\r\n    let sum = 0;\r\n    cashesByPeriod\r\n      .map((c) => c.total)\r\n      .forEach((total) => {\r\n        sum += total;\r\n      });\r\n    return formatsStore.numberWithDigits.format(sum);\r\n  };\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      {!cashesDates.length && (\r\n        <Typography variant=\"subtitle1\" className={css.noData}>\r\n          {translate.NoDataFoundForTheSelectedPeriod}\r\n        </Typography>\r\n      )}\r\n      {cashesDates.length > 0 && (\r\n        <Typography variant=\"subtitle1\" className={css.total}>\r\n          <span>{translate.Total}: </span>\r\n          <span className={css.totalValue}>\r\n            {getTotalSum()} {propertiesStore.defaultCurrency?.symbol}\r\n          </span>\r\n        </Typography>\r\n      )}\r\n      <List className={css.listRoot} subheader={<li />}>\r\n        {cashesDates.map((d: string) => (\r\n          <li key={`section-${d}`} className={css.listSection}>\r\n            <ul className={css.cashesUl}>\r\n              <ListSubheader className={css.stickyHeader}>\r\n                <span className={css.stickyHeaderText}>\r\n                  {getFormattedDate(Helpers.getDateFromString(d))}\r\n                </span>\r\n              </ListSubheader>\r\n              {cashStore\r\n                .getCashesStartedByDate(cashesByPeriod, d)\r\n                .map((cash: CashEntry) => {\r\n                  const type = typesStore.getTypeByName(cash.typeName);\r\n                  return (\r\n                    <ListItem\r\n                      key={cash.id}\r\n                      className={css.cashItem}\r\n                      button\r\n                      onClick={buttonCashClick}\r\n                      data-cash-id={cash.id}\r\n                    >\r\n                      <Icon style={{ color: getIconColor(type?.iconColor) }}>\r\n                        {type?.icon}\r\n                      </Icon>\r\n                      <Typography variant=\"body1\">{type?.label}</Typography>\r\n                      <Typography variant=\"body2\">\r\n                        {propertiesStore.dateFns.format(\r\n                          cash.createdDate,\r\n                          'HH:mm'\r\n                        )}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" className={css.totalCell}>\r\n                        {cash.total}{' '}\r\n                        {\r\n                          propertiesStore.getCurrencyByName(cash.currency)\r\n                            .symbol\r\n                        }\r\n                      </Typography>\r\n                      {cash.description && (\r\n                        <Typography className={css.desctiptionCell}>\r\n                          {cash.description}\r\n                        </Typography>\r\n                      )}\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RecordsPanel;\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypesPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst TypesPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  const css = Helpers.combineStyles({}, classes);\r\n  const theme = useTheme();\r\n\r\n  const history = useHistory();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const typeClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const typeName = event.currentTarget.dataset.id;\r\n    history.push(`/${MenuTypesEnum.Types}/edit/${typeName}`);\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={css.list}>\r\n      {typesStore.typesLoaded &&\r\n        typesStore.types.map((type: TypeEntry) => (\r\n          <div key={type.name}>\r\n            <ListItem button onClick={typeClick} data-id={type.name}>\r\n              <ListItemAvatar>\r\n                <Icon\r\n                  style={{\r\n                    color: getThemeColorStyle(type.iconColor),\r\n                    fontSize: '2rem',\r\n                  }}\r\n                >\r\n                  {type.icon}\r\n                </Icon>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={type.label}\r\n                primaryTypographyProps={{ variant: 'subtitle1' }}\r\n              />\r\n            </ListItem>\r\n            <Divider component=\"div\" />\r\n          </div>\r\n        ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default TypesPanel;\r\n","import {\r\n  createStyles,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MenuSubTypesEnum, MenuTypesEnum } from '../../models/Enum';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './MenuPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    card: {\r\n      justifyContent: 'flex-start',\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n      lineHeight: 1.2,\r\n    },\r\n    cardIcon: {\r\n      fontSize: '2rem',\r\n    },\r\n  })\r\n);\r\n\r\nconst MenuPanel = observer(() => {\r\n  const { translatesStore }: { translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n\r\n  const buttonLinkClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    const url = event.currentTarget.dataset.linkUrl || '';\r\n    history.push(url);\r\n  };\r\n\r\n  const buttons = [\r\n    {\r\n      endUrl: MenuSubTypesEnum.Properties,\r\n      icon: 'settings',\r\n      label: translate.MainProperties,\r\n    },\r\n    {\r\n      endUrl: MenuSubTypesEnum.Reports,\r\n      icon: 'assignment',\r\n      label: translate.Reports,\r\n    },\r\n    {\r\n      endUrl: MenuSubTypesEnum.Incomes,\r\n      icon: 'monetization_on',\r\n      label: translate.Incomes,\r\n    },\r\n    {\r\n      endUrl: MenuSubTypesEnum.Synchronization,\r\n      icon: 'settings_system_daydream',\r\n      label: translate.Sync,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <div className={css.grid}>\r\n      {buttons.map((b) => (\r\n        <IconButton\r\n          key={b.endUrl}\r\n          className={css.card}\r\n          classes={{ label: css.cardLabel }}\r\n          onClick={buttonLinkClick}\r\n          data-link-url={`/${MenuTypesEnum.Menu}/${b.endUrl}`}\r\n        >\r\n          <Icon className={css.cardIcon}>{b.icon}</Icon>\r\n          <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n            {b.label}\r\n          </Typography>\r\n        </IconButton>\r\n      ))}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default MenuPanel;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  createStyles,\r\n  FormControl,\r\n  Icon,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { IconTypesEnum } from '../../models/Enum';\r\nimport IconsStore from '../../stores/IconsStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport useDebounce from '../../utility/UseDebounce';\r\nimport classes from './IconsChooser.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchInput: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    typesSelectChips: {\r\n      marginTop: -theme.spacing(1),\r\n      marginRight: -theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    typesSelectChip: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    foundedTotalCount: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsIconFont: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    selectedIcon: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    pagination: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  selectedIcon?: string;\r\n  selectedIconChanged?: (newIcon: string) => void;\r\n}\r\n\r\nconst IconsChooser = observer((props: IProps) => {\r\n  const {\r\n    iconsStore,\r\n    translatesStore,\r\n  }: { iconsStore: IconsStore; translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const iconsButtonsContainerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [typeValue, setTypeValue] = React.useState([IconTypesEnum.Filled]);\r\n  const [filter, setFilter] = React.useState('');\r\n  const [page, setPage] = React.useState(1);\r\n  const onTypeValueChange = (newValue: any) => {\r\n    setPage(1);\r\n    setTypeValue(newValue.target.value);\r\n  };\r\n  const onTypeRenderValue = (selected: any) => {\r\n    return (\r\n      <div className={css.typesSelectChips}>\r\n        {(selected as string[]).map((value) => (\r\n          <Chip key={value} label={value} className={css.typesSelectChip} />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  const searchIcons = () => {\r\n    if (iconsButtonsContainerRef.current) {\r\n      iconsButtonsContainerRef.current.scrollTop = 0;\r\n    }\r\n    iconsStore.searchIconsByFilterAndPage(filter, typeValue, page);\r\n  };\r\n  const debouncedSearchFilter = useDebounce(filter, 500);\r\n  const debouncedSearchTypeValue = useDebounce(typeValue, 500);\r\n  const debouncedSearchPage = useDebounce(page, 500);\r\n  const filterChanged = (newFilter: any) => {\r\n    setPage(1);\r\n    setFilter(newFilter.target.value);\r\n  };\r\n  const filterKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      event.currentTarget.blur();\r\n    }\r\n  };\r\n  const onPageChange = (event: any, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n  React.useEffect(searchIcons, [\r\n    debouncedSearchFilter,\r\n    debouncedSearchTypeValue,\r\n    debouncedSearchPage,\r\n  ]);\r\n\r\n  const [selectedIcon, setSelectedIcon] = React.useState('');\r\n  const onIconClick = (icon: any) => {\r\n    let iconRightName = icon.currentTarget.querySelectorAll(\r\n      '.material-icons'\r\n    )[0].innerText;\r\n    // Check if icon is already selected and unselect it\r\n    if (selectedIcon === iconRightName) {\r\n      iconRightName = '';\r\n    }\r\n    setSelectedIcon(iconRightName);\r\n    if (props.selectedIconChanged) {\r\n      props.selectedIconChanged(iconRightName);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSelectedIcon(props.selectedIcon || '');\r\n  }, [props.selectedIcon]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.typeSelect} fullWidth>\r\n        <InputLabel id=\"types-select-label\">{translate.IconsTypes}</InputLabel>\r\n        <Select\r\n          labelId=\"types-select-label\"\r\n          multiple\r\n          fullWidth\r\n          value={typeValue}\r\n          onChange={onTypeValueChange}\r\n          input={<Input />}\r\n          renderValue={onTypeRenderValue}\r\n        >\r\n          {Array.from(iconsStore.iconsTypes.keys()).map((k: IconTypesEnum) => (\r\n            <MenuItem key={k} value={k}>\r\n              <Checkbox checked={typeValue.indexOf(k) > -1} />\r\n              <ListItemText primary={iconsStore.iconsTypes.get(k)} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Input\r\n        fullWidth\r\n        placeholder={translate.EnterToSearch}\r\n        value={filter}\r\n        onChange={filterChanged}\r\n        onKeyUp={filterKeyUp}\r\n        className={css.searchInput}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <Icon>search</Icon>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      <div className={css.foundedTotalCount}>\r\n        <Typography variant=\"caption\">\r\n          {Helpers.formatString(\r\n            translate.MatchingResultsN,\r\n            iconsStore.foundedTotalCount\r\n          )}\r\n        </Typography>\r\n      </div>\r\n      <div ref={iconsButtonsContainerRef} className={css.foundedIconsContainer}>\r\n        {iconsStore.foundedIcons.map((icon: string) => {\r\n          const iconRightName = iconsStore.getIconRightStringNameForFontToShow(\r\n            icon\r\n          );\r\n          return (\r\n            <IconButton\r\n              key={icon}\r\n              onClick={onIconClick}\r\n              className={css.foundedIconsButton}\r\n            >\r\n              <Icon\r\n                className={\r\n                  css.foundedIconsIconFont +\r\n                  (iconRightName === selectedIcon ? ` ${css.selectedIcon}` : '')\r\n                }\r\n              >\r\n                {iconRightName}\r\n              </Icon>\r\n            </IconButton>\r\n          );\r\n        })}\r\n      </div>\r\n      {iconsStore.pagesCount > 0 && (\r\n        <Pagination\r\n          className={css.pagination}\r\n          count={iconsStore.pagesCount}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          page={page}\r\n          onChange={onPageChange}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default IconsChooser;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport IconsChooser from '../IconsChooser/IconsChooser';\r\nimport classes from './TypeEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorAndIconContainer: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorDialogBox: {\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    colorDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    colorDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    iconDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    iconDialogBody: {\r\n      padding: theme.spacing(2),\r\n      paddingBottom: 0,\r\n    },\r\n    iconDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst TypeEditPanel = observer((props: IProps) => {\r\n  const {\r\n    typesStore,\r\n    translatesStore,\r\n  }: { typesStore: TypesStore; translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [typeId, setTypeId] = React.useState('');\r\n  const [color, setColor] = React.useState('');\r\n  const [colorPickerOpened, setColorPickerOpened] = React.useState(false);\r\n  const [icon, setIcon] = React.useState('');\r\n  const [iconPickerOpened, setIconPickerOpened] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setTypeId(props.match.params?.id);\r\n    if (typesStore.typesLoaded) {\r\n      typesStore.getTypeToSaveByName(typeId);\r\n      setColor(typesStore.typeToSave?.iconColor || '');\r\n    }\r\n  }, [props.match.params, typeId, typesStore, typesStore.typesLoaded]);\r\n\r\n  const deleteType = async () => {\r\n    await typesStore.deleteType(typeId);\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const saveEdit = async () => {\r\n    if (typesStore.validateTypeToSave()) {\r\n      await typesStore.saveType(typeId);\r\n      history.push(`/${MenuTypesEnum.Types}`);\r\n    }\r\n  };\r\n\r\n  const changeTypeField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.currentTarget.value;\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    typesStore.updateTypeToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const positionFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const getAppliedColor = () => {\r\n    return typesStore.getColorInHex(theme, typesStore.typeToSave?.iconColor);\r\n  };\r\n\r\n  const colorHandleOpen = () => {\r\n    setColorPickerOpened(true);\r\n  };\r\n  const colorHandleClose = () => {\r\n    setColorPickerOpened(false);\r\n  };\r\n  const pickerColorChange = (pickerProps: any) => {\r\n    setColor(pickerProps.hex);\r\n  };\r\n  const buttonApplyColorSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('iconColor', color);\r\n    colorHandleClose();\r\n  };\r\n  const buttonCancelColorSelect = () => {\r\n    setColor(getAppliedColor());\r\n    colorHandleClose();\r\n  };\r\n\r\n  const iconHandleOpen = () => {\r\n    setIconPickerOpened(true);\r\n  };\r\n  const iconHandleClose = () => {\r\n    setIconPickerOpened(false);\r\n  };\r\n  const iconChange = (newIcon: string) => {\r\n    setIcon(newIcon);\r\n  };\r\n  const buttonApplyIconSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('icon', icon);\r\n    iconHandleClose();\r\n  };\r\n  const buttonCancelIconSelect = () => {\r\n    setIcon(typesStore.typeToSave?.icon || '');\r\n    iconHandleClose();\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {typeId ? translate.TypeEdit : translate.TypeNew}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {typeId && (\r\n                <IconButton onClick={deleteType}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!typesStore.typeToSave?.name}\r\n              fullWidth\r\n              label=\"ID\"\r\n              disabled={!!typeId}\r\n              value={typesStore.typeToSave?.name || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'name' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.name ? translate.IDIsRequired : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={!typesStore.typeToSave?.label}\r\n              fullWidth\r\n              label={translate.Name}\r\n              value={typesStore.typeToSave?.label || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'label' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.label ? translate.NameIsRequired : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n              }\r\n              fullWidth\r\n              label={translate.PositionInTheList}\r\n              value={\r\n                typesStore.typeToSave?.position ||\r\n                typesStore.typeToSave?.position === 0\r\n                  ? typesStore.typeToSave?.position\r\n                  : ''\r\n              }\r\n              onChange={changeTypeField}\r\n              type=\"number\"\r\n              inputProps={{ 'data-prop-name': 'position' }}\r\n              onFocus={positionFieldFocus}\r\n              helperText={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n                  ? translate.PositionInTheListIsRequired\r\n                  : ''\r\n              }\r\n            />\r\n            <div className={css.colorAndIconContainer}>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label={translate.IconColor}\r\n                className={css.dialogSelect}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Icon>stop</Icon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                value={0}\r\n                onClick={colorHandleOpen}\r\n              >\r\n                <MenuItem value={0}>{getAppliedColor()}</MenuItem>\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label={translate.Icon}\r\n                value={typesStore.typeToSave?.icon ? '0' : ''}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                onClick={iconHandleOpen}\r\n              >\r\n                <MenuItem value=\"0\">\r\n                  <Icon>{typesStore.typeToSave?.icon}</Icon>\r\n                </MenuItem>\r\n              </TextField>\r\n            </div>\r\n            <Dialog\r\n              open={colorPickerOpened}\r\n              className={css.colorDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.colorDialogBox}>\r\n                <div className={css.colorDialogHeader}>\r\n                  <Typography variant=\"h6\">\r\n                    {translate.SelectTheColorOfTheIcon}\r\n                  </Typography>\r\n                </div>\r\n                <div className={css.colorDialogBody}>\r\n                  <ChromePicker color={color} onChange={pickerColorChange} />\r\n                </div>\r\n                <div className={css.colorDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyColorSelect}\r\n                  >\r\n                    {translate.Select}\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelColorSelect}>\r\n                    {translate.Cancel}\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n            <Dialog\r\n              open={iconPickerOpened}\r\n              className={css.iconDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.iconDialogBox}>\r\n                <div className={css.iconDialogHeader}>\r\n                  <Typography variant=\"h6\">{translate.SelectIcon}</Typography>\r\n                </div>\r\n                <div className={css.iconDialogBody}>\r\n                  <IconsChooser\r\n                    selectedIcon={typesStore.typeToSave?.icon}\r\n                    selectedIconChanged={iconChange}\r\n                  />\r\n                </div>\r\n                <div className={css.iconDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyIconSelect}\r\n                  >\r\n                    {translate.Select}\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelIconSelect}>\r\n                    {translate.Cancel}\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default TypeEditPanel;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  Fade,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport enPickerLocale from 'date-fns/locale/en-US';\r\nimport hePickerLocale from 'date-fns/locale/he';\r\nimport ruPickerLocale from 'date-fns/locale/ru';\r\nimport { MenuTypesEnum, LanguagesEnum } from '../../models/Enum';\r\nimport CashStore from '../../stores/CashStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    selectTypeIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    totalInput: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    currencySelect: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst CashEditPanel = observer((props: IProps) => {\r\n  const {\r\n    cashStore,\r\n    typesStore,\r\n    translatesStore,\r\n    propertiesStore,\r\n  }: {\r\n    cashStore: CashStore;\r\n    typesStore: TypesStore;\r\n    translatesStore: TranslatesStore;\r\n    propertiesStore: PropertiesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [cashId, setCashId] = React.useState('');\r\n  const [typeId, setTypeId] = React.useState('');\r\n  const [cashCurrency, setCashCurrency] = React.useState('');\r\n  const [pickerLocale, setPickerLocale] = React.useState(enPickerLocale);\r\n\r\n  React.useEffect(() => {\r\n    if (propertiesStore.currentLanguage?.name === LanguagesEnum.English) {\r\n      setPickerLocale(enPickerLocale);\r\n    } else if (propertiesStore.currentLanguage?.name === LanguagesEnum.Hebrew) {\r\n      setPickerLocale(hePickerLocale);\r\n    } else if (\r\n      propertiesStore.currentLanguage?.name === LanguagesEnum.Russian\r\n    ) {\r\n      setPickerLocale(ruPickerLocale);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [propertiesStore.currentLanguage?.rtl]);\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setCashId(props.match.params?.id);\r\n    setTypeId(props.match.params?.typeId);\r\n    if (cashStore.cashesLoaded) {\r\n      cashStore.getCashToSaveById(cashId);\r\n      if (!cashStore.cashToSave?.id) {\r\n        cashStore.updateCashToSaveByProp('typeName', typeId);\r\n      }\r\n    }\r\n  }, [\r\n    cashId,\r\n    cashStore,\r\n    props.match.params,\r\n    typesStore.typesLoaded,\r\n    cashStore.cashesLoaded,\r\n    typesStore,\r\n    typeId,\r\n  ]);\r\n\r\n  const createdDate = new Date();\r\n\r\n  const deleteCash = async () => {\r\n    await cashStore.deleteCash(cashId);\r\n    history.push(`/${MenuTypesEnum.Records}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    if (cashId) {\r\n      history.push(`/${MenuTypesEnum.Records}`);\r\n    } else {\r\n      history.push(`/${MenuTypesEnum.Cash}`);\r\n    }\r\n  };\r\n  const saveEdit = async () => {\r\n    if (!cashStore.cashToSave?.createdDate) {\r\n      cashStore.updateCashToSaveByProp('createdDate', createdDate);\r\n    }\r\n    if (cashStore.validateCashToSave()) {\r\n      await cashStore.saveCash(cashId);\r\n      history.push(`/${MenuTypesEnum.Records}`);\r\n    }\r\n  };\r\n\r\n  const selectTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedTypeId = event.currentTarget.dataset.value!;\r\n    cashStore.updateCashToSaveByProp('typeName', selectedTypeId);\r\n  };\r\n\r\n  const getIconColor = (color?: string) => {\r\n    return typesStore.getColorInHex(theme, color);\r\n  };\r\n\r\n  const pickerDateChange = (date: MaterialUiPickersDate) => {\r\n    cashStore.updateCashToSaveByProp('createdDate', date);\r\n  };\r\n\r\n  const totalInputRef = React.useRef<HTMLInputElement>(null);\r\n  const descriptionKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      console.log(totalInputRef.current);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      totalInputRef.current?.focus();\r\n    }\r\n  };\r\n\r\n  const changeDescriptionField = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const description = event.currentTarget.value;\r\n    cashStore.updateCashToSaveByProp('description', description);\r\n  };\r\n\r\n  const changeTotalField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = parseFloat(event.currentTarget.value);\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    cashStore.updateCashToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const updateCashCurrency = () => {\r\n    const currency =\r\n      propertiesStore.getCurrencyByName(cashStore.cashToSave?.currency || '')\r\n        .name || '';\r\n    setCashCurrency(currency);\r\n  };\r\n\r\n  const changeCurrencyField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.target.value;\r\n    cashStore.updateCashToSaveByProp('currency', newValue);\r\n    updateCashCurrency();\r\n  };\r\n\r\n  const totalFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const submitOnEnterKeyUp = async (\r\n    event: React.KeyboardEvent<HTMLInputElement>\r\n  ) => {\r\n    if (event.keyCode === 13) {\r\n      await saveEdit();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    updateCashCurrency();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cashStore.cashToSave, propertiesStore.defaultCurrency]);\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {cashId ? translate.PaymentEdit : translate.PaymentNew}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {cashId && (\r\n                <IconButton onClick={deleteCash}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!cashStore.cashToSave?.typeName}\r\n              select\r\n              fullWidth\r\n              label={translate.PaymentType}\r\n              className={css.dialogSelect}\r\n              value={cashStore.cashToSave?.typeName || ''}\r\n              onChange={selectTypeChange}\r\n              helperText={\r\n                !cashStore.cashToSave?.typeName\r\n                  ? translate.PaymentTypeIsRequired\r\n                  : ''\r\n              }\r\n            >\r\n              {typesStore.types.map((type) => (\r\n                <MenuItem key={type.name} value={type.name}>\r\n                  <div className={css.dialogSelectBox}>\r\n                    <Icon\r\n                      className={css.selectTypeIcon}\r\n                      style={{ color: getIconColor(type.iconColor) }}\r\n                    >\r\n                      {type.icon}\r\n                    </Icon>\r\n                    <span>{type.label}</span>\r\n                  </div>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <MuiPickersUtilsProvider locale={pickerLocale} utils={DateFnsUtils}>\r\n              <Grid container justify=\"space-around\" className={css.datesGrid}>\r\n                <KeyboardDatePicker\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label={translate.Date}\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                  okLabel={translate.Select}\r\n                  cancelLabel={translate.Cancel}\r\n                  DialogProps={{\r\n                    className: propertiesStore.currentLanguage?.rtl\r\n                      ? css.pickersRtl\r\n                      : '',\r\n                  }}\r\n                />\r\n                <KeyboardTimePicker\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label={translate.Time}\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                  okLabel={translate.Select}\r\n                  cancelLabel={translate.Cancel}\r\n                  DialogProps={{\r\n                    className: propertiesStore.currentLanguage?.rtl\r\n                      ? css.pickersRtl\r\n                      : '',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <TextField\r\n              fullWidth\r\n              className={css.descriptionInput}\r\n              label={translate.Description}\r\n              value={cashStore.cashToSave?.description || ''}\r\n              onChange={changeDescriptionField}\r\n              onKeyUp={descriptionKeyUp}\r\n              inputProps={{ 'data-prop-name': 'description' }}\r\n            />\r\n            <div className={css.totalContainer}>\r\n              <TextField\r\n                inputRef={totalInputRef}\r\n                error={!cashStore.cashToSave?.total}\r\n                fullWidth\r\n                className={css.totalInput}\r\n                label={translate.PaymentTotal}\r\n                value={cashStore.cashToSave?.total || ''}\r\n                onChange={changeTotalField}\r\n                onFocus={totalFieldFocus}\r\n                onKeyUp={submitOnEnterKeyUp}\r\n                type=\"number\"\r\n                inputProps={{ 'data-prop-name': 'total' }}\r\n                helperText={\r\n                  !cashStore.cashToSave?.total\r\n                    ? translate.PaymentTotalIsRequired\r\n                    : ''\r\n                }\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                select\r\n                className={css.currencySelect}\r\n                label={translate.Currency}\r\n                value={cashCurrency}\r\n                onChange={changeCurrencyField}\r\n                inputProps={{ 'data-prop-name': 'currency' }}\r\n              >\r\n                {propertiesStore.currencies.map((c) => (\r\n                  <MenuItem key={c.name} value={c.name}>\r\n                    {c.symbol}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default CashEditPanel;\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Snackbar,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport classes from './SnackErrors.module.css';\r\nimport Helpers from '../../utility/Helpers';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    errors: {\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  errors: string[];\r\n  onClose: () => void;\r\n}\r\n\r\nconst SnackErrors = (props: IProps) => {\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const { open, errors } = props;\r\n  React.useEffect(() => {\r\n    setOpenSnack(open);\r\n  }, [open]);\r\n\r\n  const closeHandle = () => {\r\n    setOpenSnack(false);\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      open={openSnack}\r\n      onClose={closeHandle}\r\n      autoHideDuration={6000}\r\n      message={\r\n        <div className={css.errors}>\r\n          {errors.map((e) => (\r\n            <div key={e}>{e}</div>\r\n          ))}\r\n        </div>\r\n      }\r\n      action={\r\n        <Icon fontSize=\"small\" color=\"inherit\" onClick={closeHandle}>\r\n          close\r\n        </Icon>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackErrors;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React, { ChangeEvent } from 'react';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport SnackErrors from '../SnackErrors/SnackErrors';\r\nimport classes from './CurrencyEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    currencySymbolField: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    errors: {\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  onCancelEdit?: () => void;\r\n  onSaveEdit?: (newCurrencyName: string) => void;\r\n}\r\n\r\nconst CurrencyEditPanel = observer((props: IProps) => {\r\n  const {\r\n    propertiesStore,\r\n    translatesStore,\r\n  }: {\r\n    propertiesStore: PropertiesStore;\r\n    translatesStore: TranslatesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const [currencyId, setCurrencyId] = React.useState('');\r\n  const [currencyName, setCurrencyName] = React.useState('');\r\n  const [currencySymbol, setCurrencySymbol] = React.useState('');\r\n  const [saveErrors, setSaveErrors] = React.useState<Array<string>>([]);\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const deleteCurrency = () => {};\r\n  const cancelEdit = () => {\r\n    if (props.onCancelEdit) {\r\n      props.onCancelEdit();\r\n    }\r\n  };\r\n  const saveEdit = async () => {\r\n    const saveResult = await propertiesStore.addNewCurrency(translate, {\r\n      name: currencyName,\r\n      symbol: currencySymbol,\r\n    });\r\n    if (saveResult.success) {\r\n      if (props.onSaveEdit) {\r\n        props.onSaveEdit(currencyName);\r\n      }\r\n    } else {\r\n      setSaveErrors(saveResult.errors);\r\n    }\r\n  };\r\n\r\n  const closeErrors = () => {\r\n    setSaveErrors([]);\r\n  };\r\n\r\n  const changeCurrencyNameField = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setCurrencyName(event.target.value);\r\n  };\r\n\r\n  const changeCurrencySymbol = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrencySymbol(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.NewCurrency}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {currencyId && (\r\n                <IconButton onClick={deleteCurrency}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!currencyName}\r\n              fullWidth\r\n              label={translate.Name}\r\n              value={currencyName}\r\n              onChange={changeCurrencyNameField}\r\n              inputProps={{ 'data-prop-name': 'name' }}\r\n              helperText={\r\n                !currencyName ? translate.NameIsRequiredForExampleUSD : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={!currencySymbol}\r\n              fullWidth\r\n              label={translate.Symbol}\r\n              value={currencySymbol}\r\n              onChange={changeCurrencySymbol}\r\n              inputProps={{ 'data-prop-name': 'symbol' }}\r\n              className={css.currencySymbolField}\r\n              helperText={\r\n                !currencyName ? translate.SymbolIsRequiredForExample$ : ''\r\n              }\r\n            />\r\n            <SnackErrors\r\n              open={saveErrors.length > 0}\r\n              errors={saveErrors}\r\n              onClose={closeErrors}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default CurrencyEditPanel;\r\n","import { TextField, StandardTextFieldProps } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\ninterface IProps extends StandardTextFieldProps {\r\n  formik: any;\r\n  name: string;\r\n  label?: string;\r\n}\r\n\r\nconst FormikField = React.memo((props: IProps) => {\r\n  const { formik, name, label, children, fullWidth, ...otherProps } = props;\r\n\r\n  return (\r\n    <TextField\r\n      fullWidth\r\n      name={name}\r\n      value={formik.values[name]}\r\n      label={label}\r\n      onChange={formik.handleChange}\r\n      onBlur={formik.handleBlur}\r\n      error={Boolean(formik.errors[name] && formik.touched[name])}\r\n      helperText={\r\n        formik.errors[name] &&\r\n        formik.touched[name] &&\r\n        String(formik.errors[name])\r\n      }\r\n      {...otherProps}\r\n    >\r\n      {children}\r\n    </TextField>\r\n  );\r\n});\r\n\r\nexport default FormikField;\r\n","import {\r\n  Button,\r\n  Grid,\r\n  MenuItem,\r\n  makeStyles,\r\n  createStyles,\r\n  Theme,\r\n} from '@material-ui/core';\r\nimport { useFormik } from 'formik';\r\nimport { observer } from 'mobx-react';\r\nimport React, { forwardRef, useImperativeHandle } from 'react';\r\nimport * as Yup from 'yup';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport CurrencyEditPanel from '../CurrencyEditPanel/CurrencyEditPanel';\r\nimport FormikField from '../FormikField/FormikField';\r\nimport classes from './MainProperties.module.css';\r\nimport SnackErrors from '../SnackErrors/SnackErrors';\r\nimport Helpers from '../../utility/Helpers';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IMainProperties {\r\n  Language: string;\r\n  Currency: string;\r\n}\r\n\r\ninterface IProps {}\r\n\r\nconst MainProperties = observer(\r\n  forwardRef((props: IProps, ref: any) => {\r\n    const {\r\n      propertiesStore,\r\n      translatesStore,\r\n      typesStore,\r\n    }: {\r\n      propertiesStore: PropertiesStore;\r\n      translatesStore: TranslatesStore;\r\n      typesStore: TypesStore;\r\n    } = useStores();\r\n\r\n    const { translate } = translatesStore;\r\n\r\n    const styles = useStyles();\r\n    const css = Helpers.combineStyles(styles, classes);\r\n\r\n    const [saveErrors, setSaveErrors] = React.useState<Array<string>>([]);\r\n\r\n    const initialValues: IMainProperties = {\r\n      Language: '',\r\n      Currency: '',\r\n    };\r\n\r\n    const formik = useFormik({\r\n      initialValues,\r\n      validationSchema: Yup.object({\r\n        Language: Yup.string().required(translate.LanguageIsRequired),\r\n        Currency: Yup.string().required(translate.CurrencyIsRequired),\r\n      }),\r\n      onSubmit: async (values: IMainProperties) => {\r\n        const saveResult = await propertiesStore.saveFirstTimeOptions(\r\n          translate,\r\n          values.Language,\r\n          values.Currency\r\n        );\r\n        if (saveResult.success) {\r\n          await typesStore.loadTypes();\r\n          await translatesStore.loadTranslate(values.Language);\r\n          return true;\r\n        }\r\n        setSaveErrors(saveResult.errors);\r\n        return false;\r\n      },\r\n    });\r\n\r\n    useImperativeHandle(ref, () => ({\r\n      onSave() {\r\n        return formik.submitForm();\r\n      },\r\n    }));\r\n\r\n    React.useEffect(() => {\r\n      if (propertiesStore.currentLanguage?.name) {\r\n        formik.setFieldValue('Language', propertiesStore.currentLanguage?.name);\r\n      }\r\n      if (propertiesStore.defaultCurrency?.name) {\r\n        formik.setFieldValue('Currency', propertiesStore.defaultCurrency?.name);\r\n      }\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [propertiesStore.currentLanguage, propertiesStore.defaultCurrency]);\r\n\r\n    const [addNewCurrencyOpened, setAddNewCurrencyOpened] = React.useState(\r\n      false\r\n    );\r\n    const buttonAddCurrency = () => {\r\n      setAddNewCurrencyOpened(true);\r\n    };\r\n    const addNewCurrencyPanelOnCancelEdit = () => {\r\n      setAddNewCurrencyOpened(false);\r\n    };\r\n    const addNewCurrencyPanelOnSaveEdit = (selectedNewCurrencyName: string) => {\r\n      setAddNewCurrencyOpened(false);\r\n      formik.setFieldValue('Currency', selectedNewCurrencyName);\r\n    };\r\n\r\n    const closeErrors = () => {\r\n      setSaveErrors([]);\r\n    };\r\n\r\n    return (\r\n      <form onSubmit={formik.handleSubmit} noValidate>\r\n        <Grid container alignItems=\"flex-start\" spacing={2}>\r\n          <Grid item xs={12}>\r\n            <FormikField\r\n              formik={formik}\r\n              name=\"Language\"\r\n              label={translate.Language}\r\n              select\r\n            >\r\n              {propertiesStore.languages.map((l) => (\r\n                <MenuItem key={l.name} value={l.name}>\r\n                  {l.title || l.name}\r\n                </MenuItem>\r\n              ))}\r\n            </FormikField>\r\n          </Grid>\r\n          <Grid item xs={7}>\r\n            <FormikField\r\n              formik={formik}\r\n              name=\"Currency\"\r\n              label={translate.Currency}\r\n              select\r\n            >\r\n              {propertiesStore.currencies.map((c) => (\r\n                <MenuItem key={c.name} value={c.name}>\r\n                  {c.symbol || c.name}\r\n                </MenuItem>\r\n              ))}\r\n            </FormikField>\r\n          </Grid>\r\n          <Grid item xs={5} className={css.addCurrencyCell}>\r\n            <Button\r\n              fullWidth\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              size=\"small\"\r\n              onClick={buttonAddCurrency}\r\n            >\r\n              {translate.AddNewCurrency}\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n        {addNewCurrencyOpened && (\r\n          <CurrencyEditPanel\r\n            onCancelEdit={addNewCurrencyPanelOnCancelEdit}\r\n            onSaveEdit={addNewCurrencyPanelOnSaveEdit}\r\n          />\r\n        )}\r\n        <SnackErrors\r\n          open={saveErrors.length > 0}\r\n          errors={saveErrors}\r\n          onClose={closeErrors}\r\n        />\r\n      </form>\r\n    );\r\n  })\r\n);\r\n\r\nexport default MainProperties;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Fade,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Slide,\r\n  IconButton,\r\n  Box,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport classes from './PropertiesPanel.module.css';\r\nimport Helpers from '../../utility/Helpers';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport useStores from '../../stores/UseStores';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport MainProperties from '../MainProperties/MainProperties';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst PropertiesPanel = observer(() => {\r\n  const { translatesStore }: { translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const history = useHistory();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const mainPropertiesRef = React.useRef<any>(null);\r\n  const cancelEdit = () => {\r\n    history.push(`/${MenuTypesEnum.Menu}`);\r\n  };\r\n  const saveEdit = async () => {\r\n    if (mainPropertiesRef && mainPropertiesRef.current) {\r\n      const result = await mainPropertiesRef.current.onSave();\r\n      if (result) {\r\n        history.push(`/${MenuTypesEnum.Menu}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.MainProperties}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <MainProperties ref={mainPropertiesRef} />\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default PropertiesPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport {\r\n  Fade,\r\n  Slide,\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  Box,\r\n  IconButton,\r\n  Icon,\r\n  ExpansionPanel,\r\n  ExpansionPanelSummary,\r\n  ExpansionPanelDetails,\r\n  Button,\r\n  MenuItem,\r\n  TextField,\r\n} from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport classes from './IncomesPanel.module.css';\r\nimport Helpers from '../../utility/Helpers';\r\nimport useStores from '../../stores/UseStores';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst IncomesPanel = observer(() => {\r\n  const { translatesStore }: { translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n\r\n  const buttonBackClick = () => {\r\n    history.push(`/${MenuTypesEnum.Menu}`);\r\n  };\r\n\r\n  const buttonAddIncomeClick = () => {};\r\n\r\n  const buttonApplyFilterClick = () => {};\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.Incomes}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <IconButton onClick={buttonBackClick}>\r\n                <Icon className={css.toolbarIcon}>arrow_back_ios</Icon>\r\n              </IconButton>\r\n              <Box className={css.emptyBox} />\r\n              <IconButton onClick={buttonAddIncomeClick}>\r\n                <Icon className={css.toolbarIcon}>plus_one</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <ExpansionPanel>\r\n              <ExpansionPanelSummary expandIcon={<Icon>expand_more</Icon>}>\r\n                <Typography className={classes.heading}>\r\n                  {translate.IncomesFilter}\r\n                </Typography>\r\n              </ExpansionPanelSummary>\r\n              <ExpansionPanelDetails>\r\n                <TextField\r\n                  select\r\n                  fullWidth\r\n                  label={translate.IncomeType}\r\n                  value=\"\"\r\n                >\r\n                  <MenuItem value={1}>{translate.Periodic}</MenuItem>\r\n                  <MenuItem value={2}>{translate.Fixed}</MenuItem>\r\n                </TextField>\r\n                <Button\r\n                  color=\"primary\"\r\n                  variant=\"contained\"\r\n                  size=\"small\"\r\n                  onClick={buttonApplyFilterClick}\r\n                >\r\n                  {translate.ApplyFilter}\r\n                </Button>\r\n              </ExpansionPanelDetails>\r\n            </ExpansionPanel>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default IncomesPanel;\r\n","import CashPanel from '../components/CashPanel/CashPanel';\r\nimport RecordsPanel from '../components/RecordsPanel/RecordsPanel';\r\nimport TypesPanel from '../components/TypesPanel/TypesPanel';\r\nimport MenuPanel from '../components/MenuPanel/MenuPanel';\r\nimport { MenuTypesEnum, MenuSubTypesEnum } from '../models/Enum';\r\nimport TypeEditPanel from '../components/TypeEditPanel/TypeEditPanel';\r\nimport CashEditPanel from '../components/CashEditPanel/CashEditPanel';\r\nimport PropertiesPanel from '../components/PropertiesPanel/PropertiesPanel';\r\nimport IncomesPanel from '../components/IncomesPanel/IncomesPanel';\r\n\r\nconst routes = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add/:typeId`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/edit/:id`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Records}`,\r\n    exact: true,\r\n    components: RecordsPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}`,\r\n    exact: true,\r\n    components: TypesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/add`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/edit/:id`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}`,\r\n    exact: true,\r\n    components: MenuPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}/${MenuSubTypesEnum.Properties}`,\r\n    exact: true,\r\n    components: PropertiesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}/${MenuSubTypesEnum.Incomes}`,\r\n    exact: true,\r\n    components: IncomesPanel,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst RouteWithSubRoutes = (route: any) => {\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props: any) => {\r\n        if (Array.isArray(route.components)) {\r\n          return route.components.map((Component: any, index: number) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <Component key={index} {...props} routes={route.routes} />\r\n          ));\r\n        }\r\n        return <route.components {...props} routes={route.routes} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSubRoutes;\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  createStyles,\r\n  Fade,\r\n  makeStyles,\r\n  Slide,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport MainProperties from '../MainProperties/MainProperties';\r\nimport classes from './FirstTimeShowPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    currenciesContainer: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    currenciesSelect: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    addCurrencyButton: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    footer: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst FirstTimeShowPanel = observer(() => {\r\n  const {\r\n    translatesStore,\r\n  }: {\r\n    translatesStore: TranslatesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const mainPropertiesRef = React.useRef<any>(null);\r\n\r\n  const buttonSaveProperties = async () => {\r\n    if (mainPropertiesRef && mainPropertiesRef.current) {\r\n      await mainPropertiesRef.current.onSave();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.MainProperties}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <MainProperties ref={mainPropertiesRef} />\r\n          </div>\r\n          <div className={css.footer}>\r\n            <Button\r\n              fullWidth\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={buttonSaveProperties}\r\n            >\r\n              {translate.Save}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default FirstTimeShowPanel;\r\n","import { createStyles, Fab, makeStyles, Theme } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../routes/Routes';\r\nimport RouteWithSubRoutes from '../../routes/RouteWithSubRoutes';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './Body.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport FirstTimeShowPanel from '../FirstTimeShowPanel/FirstTimeShowPanel';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Body = observer(() => {\r\n  const {\r\n    appStore,\r\n    propertiesStore,\r\n  }: { appStore: AppStore; propertiesStore: PropertiesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const getAddButtonLinkUrl = () => {\r\n    let prefix = appStore.selectedMenuUrl;\r\n    if (prefix === '/') {\r\n      prefix += MenuTypesEnum.Cash;\r\n    }\r\n    return `${appStore.selectedMenuUrl}/add`;\r\n  };\r\n\r\n  const showAddIcon = () => {\r\n    return (\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Menu}` &&\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Records}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={css.body}>\r\n      {routes.map((route, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RouteWithSubRoutes key={i} {...route} />\r\n      ))}\r\n      {showAddIcon() && (\r\n        <Link to={getAddButtonLinkUrl()}>\r\n          <Fab\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={css.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      )}\r\n      {!propertiesStore.firstTimeOptionsSelected && <FirstTimeShowPanel />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Body;\r\n","import { Tab } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  to: string;\r\n  icon?: any;\r\n  currentUrl?: string;\r\n}\r\n\r\nconst LinkTab = observer((props: IProps) => {\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const linkClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    if (props.currentUrl === event.currentTarget.pathname) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      to={props.to}\r\n      label={props.label}\r\n      icon={props.icon}\r\n      onClick={linkClick}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LinkTab;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  List as ListIcon,\r\n  Menu as MenuIcon,\r\n  MenuBook as MenuBookIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Search as SearchIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppStore from '../../stores/AppStore';\r\nimport CashStore from '../../stores/CashStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport LinkTab from '../LinkTab/LinkTab';\r\nimport classes from './Menu.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    menuIcon: {\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    comboButton: {\r\n      color: theme.palette.primary.contrastText,\r\n      textTransform: 'none',\r\n    },\r\n    searchIcon: {\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu = observer(() => {\r\n  const {\r\n    appStore,\r\n    translatesStore,\r\n    propertiesStore,\r\n    cashStore,\r\n  }: {\r\n    appStore: AppStore;\r\n    translatesStore: TranslatesStore;\r\n    propertiesStore: PropertiesStore;\r\n    cashStore: CashStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n  const menuTabChanged = (event: any, newValue: number) => {\r\n    appStore.setSelectedMenuIndex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    const listener = history.listen(() => {\r\n      appStore.loadSelectedMenuIndex(history.location.pathname);\r\n      Helpers.removeDuplicateStyles();\r\n    });\r\n\r\n    return () => {\r\n      listener();\r\n    };\r\n  });\r\n\r\n  const menuTabProps = (name: string, href?: string) => {\r\n    return {\r\n      id: `menu-tab-${name}`,\r\n      'aria-controls': `menu-tab-${name}`,\r\n      to: href || `/${name}`,\r\n      currentUrl: appStore.selectedMenuUrl,\r\n    };\r\n  };\r\n\r\n  const cashesByPeriod = cashStore.getCashesByPeriod(cashStore.cashes);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={css.firstBar}>\r\n        <Toolbar>\r\n          {appStore.selectedMenuIndex === 0 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.AddPayment}\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 1 && (\r\n            <Box className={css.headerBox}>\r\n              <IconButton>\r\n                <MenuIcon className={css.menuIcon} />\r\n              </IconButton>\r\n              <Button\r\n                className={css.comboButton}\r\n                endIcon={<ArrowDropDownIcon />}\r\n              >\r\n                <span className={css.comboButtonTextBox}>\r\n                  <span>\r\n                    {propertiesStore.dateFns.format(\r\n                      cashStore.cashPeriodFilter.from,\r\n                      'MMMM yyyy'\r\n                    )}\r\n                  </span>\r\n                  <span>\r\n                    {Helpers.formatString(\r\n                      translate.RecordsN,\r\n                      cashesByPeriod.length\r\n                    )}\r\n                  </span>\r\n                </span>\r\n              </Button>\r\n              <IconButton>\r\n                <SearchIcon className={css.searchIcon} />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {appStore.selectedMenuIndex === 2 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.Types}\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 3 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.More}\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n        <Tabs\r\n          value={appStore.selectedMenuIndex}\r\n          onChange={menuTabChanged}\r\n          aria-label=\"menu tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <LinkTab {...menuTabProps('cash', '/')} icon={<AttachMoneyIcon />} />\r\n          <LinkTab {...menuTabProps('records')} icon={<MenuBookIcon />} />\r\n          <LinkTab {...menuTabProps('types')} icon={<ListIcon />} />\r\n          <LinkTab {...menuTabProps('menu')} icon={<MoreHorizIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Menu;\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport {\r\n  createMuiTheme,\r\n  jssPreset,\r\n  StylesProvider,\r\n  ThemeProvider,\r\n} from '@material-ui/core/styles';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport * as AppSettings from '../../../package.json';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport useStores from '../../stores/UseStores';\r\n// import { enUS, heIL, ruRU } from '@material-ui/core/locale';\r\nimport Body from '../Body/Body';\r\nimport Menu from '../Menu/Menu';\r\nimport classes from './ThemeCreator.module.css';\r\nimport Helpers from '../../utility/Helpers';\r\n\r\nconst jssScript = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst ThemeCreator = observer(() => {\r\n  const { propertiesStore }: { propertiesStore: PropertiesStore } = useStores();\r\n\r\n  const [theme, setTheme] = React.useState(createMuiTheme({}));\r\n  React.useEffect(() => {\r\n    if (propertiesStore.currentLanguage) {\r\n      const direction = !propertiesStore.currentLanguage?.rtl ? 'ltr' : 'rtl';\r\n      if (theme.direction !== direction) {\r\n        setTheme(\r\n          createMuiTheme({\r\n            direction,\r\n          })\r\n        );\r\n        Helpers.removeDuplicateStyles();\r\n      }\r\n      document.body.style.direction = direction;\r\n      document.body.classList.add(direction);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [propertiesStore.currentLanguage?.rtl]);\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <StylesProvider jss={jssScript}>\r\n        <CssBaseline />\r\n        <Router basename={`/${AppSettings.name}`}>\r\n          <div className={classes.page}>\r\n            <Menu />\r\n            <Body />\r\n          </div>\r\n        </Router>\r\n      </StylesProvider>\r\n    </ThemeProvider>\r\n  );\r\n});\r\n\r\nexport default ThemeCreator;\r\n","import { plainToClass } from 'class-transformer';\r\nimport AppStore from '../stores/AppStore';\r\n\r\nexport default class CacheService {\r\n  private appStore: AppStore;\r\n\r\n  constructor(appStore: AppStore) {\r\n    this.appStore = appStore;\r\n    this.get<String>('appVersion', String, false, new Date()).then((r) => {\r\n      if (appStore.version !== r) {\r\n        this.clear();\r\n        this.add('appVersion', appStore.version);\r\n        if (r) {\r\n          window.location.reload();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async add(key: string, entry: any) {\r\n    let entryStr: string;\r\n    if (typeof entry !== 'string') {\r\n      entryStr = JSON.stringify({ date: new Date(), entry });\r\n    } else {\r\n      entryStr = entry;\r\n    }\r\n    const result = await localStorage.setItem(key, entryStr);\r\n    return result;\r\n  }\r\n\r\n  public async get<T>(\r\n    key: string,\r\n    TCreator: new (...args: any[]) => T,\r\n    isArray?: boolean,\r\n    validAt?: Date\r\n  ): Promise<any> {\r\n    let result: string | null = null;\r\n    if (!this.appStore.enableCache) {\r\n      return result;\r\n    }\r\n    result = await localStorage.getItem(key);\r\n    if (result) {\r\n      console.log(`Key: ${key} loaded from cache`);\r\n    }\r\n    if (!result || !result.length) {\r\n      return result;\r\n    }\r\n    try {\r\n      const parsedResult = JSON.parse(result);\r\n      if (validAt) {\r\n        if (new Date(parsedResult.date) < validAt) {\r\n          return parsedResult.entry;\r\n        }\r\n        console.log(\r\n          `Key: ${key} date expired. ValidAt: ${validAt}. ExpiredAt: ${parsedResult.date}`\r\n        );\r\n        return null;\r\n      }\r\n      if (isArray) {\r\n        const arrayResult: T[] = [];\r\n        parsedResult.entry.forEach((entry: any) => {\r\n          const parsedEntry = plainToClass(TCreator, entry);\r\n          arrayResult.push(parsedEntry);\r\n        });\r\n        return arrayResult;\r\n      }\r\n      return plainToClass(TCreator, parsedResult.entry);\r\n    } catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async clear() {\r\n    await localStorage.clear();\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport * as AppJson from '../../package.json';\r\nimport ServicesStore from './ServicesStore';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\n\r\nclass AppStore {\r\n  version = AppJson.version;\r\n  services!: ServicesStore;\r\n\r\n  // NOTE: when application is change version, cache will be cleared\r\n  @observable enableCache = true;\r\n  @observable selectedMenuIndex = 0;\r\n  @observable selectedMenuUrl = '/';\r\n\r\n  @action setSelectedMenuIndex = (newValue: number) => {\r\n    this.selectedMenuIndex = newValue;\r\n  };\r\n\r\n  @action loadSelectedMenuIndex = (url: string) => {\r\n    const urlParts = url.split('/');\r\n    if (urlParts.length > 1) {\r\n      if (urlParts[1] === MenuTypesEnum.Records) {\r\n        this.selectedMenuIndex = 1;\r\n      } else if (urlParts[1] === MenuTypesEnum.Types) {\r\n        this.selectedMenuIndex = 2;\r\n      } else if (urlParts[1] === MenuTypesEnum.Menu) {\r\n        this.selectedMenuIndex = 3;\r\n      } else {\r\n        this.selectedMenuIndex = 0;\r\n      }\r\n    } else {\r\n      this.selectedMenuIndex = 0;\r\n    }\r\n    if (this.selectedMenuIndex === 0) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Cash}`;\r\n    } else if (this.selectedMenuIndex === 1) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Records}`;\r\n    } else if (this.selectedMenuIndex === 2) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Types}`;\r\n    } else if (this.selectedMenuIndex === 3) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Menu}`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default AppStore;\r\n","import CacheService from '../services/CacheService';\r\n\r\nclass ServicesStore {\r\n  cache: CacheService;\r\n\r\n  constructor(cache: CacheService) {\r\n    this.cache = cache;\r\n  }\r\n}\r\n\r\nexport default ServicesStore;\r\n","export default class TypeEntry {\r\n  name!: string;\r\n  label?: string;\r\n  position = 0;\r\n  iconColor?: string;\r\n  icon?: string;\r\n  system?: boolean;\r\n}\r\n","import { Theme } from '@material-ui/core';\r\nimport { action, observable } from 'mobx';\r\nimport TypeEntry from '../models/entries/TypeEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass TypesStore {\r\n  @observable types!: TypeEntry[];\r\n  @observable typesLoaded = false;\r\n  @observable typeToSave?: TypeEntry;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    const loadTypes = async () => {\r\n      await this.loadTypes();\r\n    };\r\n    loadTypes();\r\n  }\r\n\r\n  @action getTypeToSaveByName = (name: string) => {\r\n    this.typeToSave = {\r\n      ...(this.getTypeByName(name) || new TypeEntry()),\r\n    };\r\n  };\r\n\r\n  getTypeByName = (name: string) => {\r\n    return this.types.find((t) => t.name === name);\r\n  };\r\n\r\n  @action updateTypeToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.typeToSave, prop, newValue);\r\n  };\r\n\r\n  validateTypeToSave = () => {\r\n    let valid = true;\r\n    if (!this.typeToSave?.name) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.label) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.position) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedTypes = () => {\r\n    return this.types.sort((a, b) => {\r\n      if (a.position > b.position) {\r\n        return 1;\r\n      }\r\n      if (a.position < b.position) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveType = async (typeId: string) => {\r\n    const editType = this.types.find((t) => t.name === typeId);\r\n    if (editType) {\r\n      if (editType.system && editType.label !== this.typeToSave!.label) {\r\n        this.typeToSave!.system = false;\r\n      }\r\n      Object.keys(editType).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.typeToSave, k);\r\n        Helpers.setObjectValueByProp(editType, k, v);\r\n      });\r\n    } else {\r\n      this.types.push(this.typeToSave!);\r\n    }\r\n    this.types = this.getSortedTypes();\r\n    await this.cacheService.add('allTypes', this.types);\r\n  };\r\n\r\n  @action deleteType = async (typeId: string) => {\r\n    const type = this.types.find((t) => t.name === typeId);\r\n    if (type) {\r\n      const typeIndex = this.types.indexOf(type);\r\n      if (typeIndex > -1) {\r\n        this.types.splice(typeIndex, 1);\r\n        await this.cacheService.add('allTypes', this.types);\r\n      }\r\n    }\r\n  };\r\n\r\n  getColorInHex = (theme: Theme, color?: string) => {\r\n    if (color) {\r\n      if (color.indexOf('#') === 0) {\r\n        return color;\r\n      }\r\n      return Helpers.getObjectValueByProp(theme, color);\r\n    }\r\n    return '';\r\n  };\r\n\r\n  @action loadTypes = async () => {\r\n    this.types = [];\r\n\r\n    const language = await this.cacheService.get<String>('language', String);\r\n    const translate: any = Helpers.getTranslateByLanguage(language);\r\n\r\n    this.typesLoaded = false;\r\n    const types = await this.cacheService.get<TypeEntry>(\r\n      'allTypes',\r\n      TypeEntry,\r\n      true\r\n    );\r\n    if (types) {\r\n      this.types = types;\r\n    } else {\r\n      this.types.push({\r\n        name: 'MenuFood',\r\n        position: 1,\r\n        iconColor: 'palette.secondary.dark',\r\n        icon: 'fastfood',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuStore',\r\n        position: 2,\r\n        iconColor: 'palette.success.dark',\r\n        icon: 'local_grocery_store',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuBus',\r\n        position: 3,\r\n        iconColor: 'palette.warning.dark',\r\n        icon: 'directions_bus',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuClothes',\r\n        position: 4,\r\n        iconColor: 'palette.primary.dark',\r\n        icon: 'local_mall',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuGasStation',\r\n        position: 5,\r\n        iconColor: 'palette.primary.light',\r\n        icon: 'local_gas_station',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuChilds',\r\n        position: 6,\r\n        iconColor: 'palette.warning.light',\r\n        icon: 'child_friendly',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuServices',\r\n        position: 7,\r\n        iconColor: 'palette.secondary.light',\r\n        icon: 'important_devices',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuOther',\r\n        position: 8,\r\n        iconColor: 'palette.success.light',\r\n        icon: 'more_vert',\r\n        system: true,\r\n      });\r\n\r\n      this.types = this.getSortedTypes();\r\n      this.cacheService.add('allTypes', this.types);\r\n    }\r\n    this.types.forEach((t: TypeEntry) => {\r\n      if (t.system) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        t.label = translate[t.name];\r\n      }\r\n    });\r\n    this.typesLoaded = true;\r\n  };\r\n}\r\n\r\nexport default TypesStore;\r\n","import * as AllIcons from '@material-ui/icons';\r\nimport { action, observable, computed } from 'mobx';\r\nimport CacheService from '../services/CacheService';\r\nimport { IconTypesEnum } from '../models/Enum';\r\n\r\nclass IconsStore {\r\n  @observable iconsTypes: Map<IconTypesEnum, string>;\r\n  @observable filledIcons: string[] = [];\r\n  @observable outlinedIcons: string[] = [];\r\n  @observable roundedIcons: string[] = [];\r\n  @observable twoToneIcons: string[] = [];\r\n  @observable sharpIcons: string[] = [];\r\n  @observable iconsOnOnePage = 100;\r\n  @observable foundedIcons: string[] = [];\r\n  @observable foundedTotalCount = 0;\r\n\r\n  @computed get pagesCount() {\r\n    return Math.ceil(this.foundedTotalCount / this.iconsOnOnePage);\r\n  }\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n\r\n    this.iconsTypes = new Map();\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Filled,\r\n      IconTypesEnum[IconTypesEnum.Filled]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Outlined,\r\n      IconTypesEnum[IconTypesEnum.Outlined]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Rounded,\r\n      IconTypesEnum[IconTypesEnum.Rounded]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.TwoTone,\r\n      IconTypesEnum.TwoTone.toString()\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Sharp,\r\n      IconTypesEnum[IconTypesEnum.Sharp]\r\n    );\r\n\r\n    this.cacheService.get<Object>('allIcons', Object).then((allIcons) => {\r\n      if (!allIcons) {\r\n        Object.keys(AllIcons).forEach((k: string) => {\r\n          if (\r\n            k.indexOf(IconTypesEnum.Outlined) ===\r\n            k.length - IconTypesEnum.Outlined.length\r\n          ) {\r\n            this.outlinedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Rounded) ===\r\n            k.length - IconTypesEnum.Rounded.length\r\n          ) {\r\n            this.roundedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.TwoTone) ===\r\n            k.length - IconTypesEnum.TwoTone.length\r\n          ) {\r\n            this.twoToneIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Sharp) ===\r\n            k.length - IconTypesEnum.Sharp.length\r\n          ) {\r\n            this.sharpIcons.push(k);\r\n          } else {\r\n            this.filledIcons.push(k);\r\n          }\r\n        });\r\n        const allIconsForCache = {\r\n          outlinedIcons: this.outlinedIcons,\r\n          roundedIcons: this.roundedIcons,\r\n          twoToneIcons: this.twoToneIcons,\r\n          sharpIcons: this.sharpIcons,\r\n          filledIcons: this.filledIcons,\r\n        };\r\n        this.cacheService.add('allIcons', allIconsForCache);\r\n      } else {\r\n        this.filledIcons = allIcons.filledIcons;\r\n        this.outlinedIcons = allIcons.outlinedIcons;\r\n        this.roundedIcons = allIcons.roundedIcons;\r\n        this.twoToneIcons = allIcons.twoToneIcons;\r\n        this.sharpIcons = allIcons.sharpIcons;\r\n      }\r\n    });\r\n  }\r\n\r\n  @action searchIconsByFilterAndPage = (\r\n    filter: string,\r\n    types: IconTypesEnum[],\r\n    page: number\r\n  ) => {\r\n    let result: string[] = [];\r\n    const lowerCasedFilter = filter.toLowerCase();\r\n    types.forEach((type: IconTypesEnum) => {\r\n      let workingArray: string[] | null = null;\r\n      if (type === IconTypesEnum.Filled) {\r\n        workingArray = this.filledIcons;\r\n      } else if (type === IconTypesEnum.Outlined) {\r\n        workingArray = this.outlinedIcons;\r\n      } else if (type === IconTypesEnum.Rounded) {\r\n        workingArray = this.roundedIcons;\r\n      } else if (type === IconTypesEnum.TwoTone) {\r\n        workingArray = this.twoToneIcons;\r\n      } else if (type === IconTypesEnum.Sharp) {\r\n        workingArray = this.sharpIcons;\r\n      }\r\n      if (workingArray) {\r\n        result = result.concat(\r\n          workingArray.filter(\r\n            (i: string) => i.toLowerCase().indexOf(lowerCasedFilter) !== -1\r\n          )\r\n        );\r\n      }\r\n    });\r\n    this.foundedTotalCount = result.length;\r\n    this.foundedIcons = result.slice(\r\n      (page - 1) * this.iconsOnOnePage,\r\n      page * this.iconsOnOnePage\r\n    );\r\n  };\r\n\r\n  getIconRightStringNameForFontToShow = (iconName: string) => {\r\n    const result = iconName.split(/(?=[A-Z])/);\r\n    let resultStr = result?.map((r) => r.toLowerCase()).join('_');\r\n    const numberMatch = resultStr.match(/[0-9]+/);\r\n    if (numberMatch?.index) {\r\n      resultStr = `${resultStr.substring(\r\n        0,\r\n        numberMatch.index\r\n      )}_${resultStr.substring(numberMatch.index)}`;\r\n    }\r\n    return resultStr;\r\n  };\r\n}\r\n\r\nexport default IconsStore;\r\n","import { Type } from 'class-transformer';\r\n\r\nexport default class CashEntry {\r\n  id!: string;\r\n  typeName!: string;\r\n  @Type(() => Date)\r\n  createdDate!: Date;\r\n  total!: number;\r\n  currency!: string;\r\n  description?: string;\r\n}\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { PeriodTypeEnum } from '../Enum';\r\n\r\nexport default class CashPeriodFilterEntry {\r\n  type: PeriodTypeEnum;\r\n  from!: Date;\r\n  to?: Date;\r\n\r\n  constructor() {\r\n    this.type = PeriodTypeEnum.Monthly;\r\n    this.initializeByType();\r\n  }\r\n\r\n  private initializeByType = () => {\r\n    if (this.type !== PeriodTypeEnum.Custom) {\r\n      this.to = undefined;\r\n    }\r\n    const now = new Date();\r\n    const dateFns = new DateFnsUtils();\r\n    if (this.type === PeriodTypeEnum.Daily) {\r\n      this.from = new Date(\r\n        now.getFullYear(),\r\n        now.getMonth(),\r\n        now.getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0\r\n      );\r\n    } else if (this.type === PeriodTypeEnum.Weekly) {\r\n      this.from = new Date(\r\n        now.getFullYear(),\r\n        now.getMonth(),\r\n        dateFns.addDays(now, -7).getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0\r\n      );\r\n    } else if (this.type === PeriodTypeEnum.Monthly) {\r\n      this.from = new Date(now.getFullYear(), now.getMonth(), 1, 0, 0, 0, 0);\r\n    } else if (this.type === PeriodTypeEnum.Year) {\r\n      this.from = new Date(now.getFullYear(), 0, 1, 0, 0, 0, 0);\r\n    }\r\n  };\r\n\r\n  reinitializeByType = () => {\r\n    if (!this.from) {\r\n      this.initializeByType();\r\n    }\r\n  };\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport CashEntry from '../models/entries/CashEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\nimport CashPeriodFilterEntry from '../models/entries/CashPeriodFilterEntry';\r\n\r\nclass CashStore {\r\n  @observable cashes: CashEntry[] = [];\r\n  @observable cashPeriodFilter!: CashPeriodFilterEntry;\r\n  @observable cashToSave?: CashEntry;\r\n  @observable cashesLoaded = false;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.loadAllCashes();\r\n    this.loadCashPeriodFilter();\r\n  }\r\n\r\n  @action getCashToSaveById = (id: string) => {\r\n    this.cashToSave = {\r\n      ...(this.cashes.find((t) => t.id === id) || ({} as CashEntry)),\r\n    };\r\n  };\r\n\r\n  @action updateCashToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.cashToSave, prop, newValue);\r\n  };\r\n\r\n  validateCashToSave = () => {\r\n    let valid = true;\r\n    if (!this.cashToSave?.typeName) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.createdDate) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.total) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedCashes = () => {\r\n    return this.cashes.sort((a, b) => {\r\n      if (a.createdDate > b.createdDate) {\r\n        return -1;\r\n      }\r\n      if (a.createdDate < b.createdDate) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveCash = async (cashId: string) => {\r\n    const editCash = this.cashes.find((c) => c.id === cashId);\r\n    if (editCash) {\r\n      Object.keys(editCash).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.cashToSave, k);\r\n        Helpers.setObjectValueByProp(editCash, k, v);\r\n      });\r\n    } else {\r\n      this.cashToSave!.id = uuidv4();\r\n      this.cashes.push(this.cashToSave!);\r\n    }\r\n    this.cashes = this.getSortedCashes();\r\n    await this.cacheService.add('allCashes', this.cashes);\r\n    await this.loadAllCashes();\r\n  };\r\n\r\n  @action deleteCash = async (cashId: string) => {\r\n    const cash = this.cashes.find((c) => c.id === cashId);\r\n    if (cash) {\r\n      const typeIndex = this.cashes.indexOf(cash);\r\n      if (typeIndex > -1) {\r\n        this.cashes.splice(typeIndex, 1);\r\n        await this.cacheService.add('allCashes', this.cashes);\r\n      }\r\n    }\r\n  };\r\n\r\n  private loadAllCashes = async () => {\r\n    this.cashes = [];\r\n    const cashes = await this.cacheService.get<CashEntry>(\r\n      'allCashes',\r\n      CashEntry,\r\n      true\r\n    );\r\n    if (cashes) {\r\n      this.cashes = cashes;\r\n      this.cashes = this.getSortedCashes();\r\n    }\r\n    this.cashesLoaded = true;\r\n  };\r\n\r\n  private loadCashPeriodFilter = async () => {\r\n    this.cashPeriodFilter = await this.cacheService.get<CashPeriodFilterEntry>(\r\n      'cashPeriodFilter',\r\n      CashPeriodFilterEntry\r\n    );\r\n    if (!this.cashPeriodFilter) {\r\n      this.cashPeriodFilter = new CashPeriodFilterEntry();\r\n    }\r\n    this.cashPeriodFilter.reinitializeByType();\r\n  };\r\n\r\n  getCashesByPeriod = (cashes: CashEntry[]) => {\r\n    const result = cashes.filter((c) => {\r\n      if (this.cashPeriodFilter?.from && this.cashPeriodFilter?.to) {\r\n        return (\r\n          c.createdDate >= this.cashPeriodFilter.from &&\r\n          c.createdDate <= this.cashPeriodFilter.to\r\n        );\r\n      }\r\n      if (this.cashPeriodFilter?.from) {\r\n        return c.createdDate >= this.cashPeriodFilter.from;\r\n      }\r\n      if (this.cashPeriodFilter?.to) {\r\n        return c.createdDate <= this.cashPeriodFilter.to;\r\n      }\r\n      return false;\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getCashesDistinctDates = (cashes: CashEntry[]) => {\r\n    const datesOfCashes = this.getCashesByPeriod(cashes).map((c) =>\r\n      c.createdDate\r\n        .toISOString()\r\n        .substring(0, c.createdDate.toISOString().indexOf('T'))\r\n    );\r\n    const result: string[] = [];\r\n    datesOfCashes.forEach((d) => {\r\n      if (!result.length || result[result.length - 1] !== d) {\r\n        result.push(d);\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getCashesStartedByDate = (cashes: CashEntry[], dateYYYYMMDD: string) => {\r\n    return cashes.filter((c) =>\r\n      c.createdDate.toISOString().startsWith(dateYYYYMMDD)\r\n    );\r\n  };\r\n}\r\n\r\nexport default CashStore;\r\n","export default class LanguageEntry {\r\n  name!: string;\r\n  title?: string;\r\n  rtl?: boolean;\r\n}\r\n","export default class CurrencyEntry {\r\n  name!: string;\r\n  symbol!: string;\r\n}\r\n","export default class ErrorEntry {\r\n  success!: boolean;\r\n  errors!: string[];\r\n\r\n  constructor() {\r\n    this.success = true;\r\n    this.errors = [];\r\n  }\r\n\r\n  addError(error: string) {\r\n    this.success = false;\r\n    this.errors.push(error);\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { LanguagesEnum } from '../models/Enum';\r\nimport CacheService from '../services/CacheService';\r\nimport LanguageEntry from '../models/entries/LanguageEntry';\r\nimport CurrencyEntry from '../models/entries/CurrencyEntry';\r\nimport ErrorEntry from '../models/entries/ErrorEntry';\r\nimport TranslateEntry from '../models/entries/TranslateEntry';\r\nimport FormatsStore from './FormatsStore';\r\n\r\nexport default class PropertiesStore {\r\n  @observable firstTimeOptionsSelected = true;\r\n  @observable languages!: LanguageEntry[];\r\n  @observable currentLanguage!: LanguageEntry;\r\n  @observable currencies!: CurrencyEntry[];\r\n  @observable defaultCurrency!: CurrencyEntry;\r\n  @observable dateFns = new DateFnsUtils({ locale: enLocale });\r\n\r\n  private cacheService: CacheService;\r\n  private formatsStore: FormatsStore;\r\n\r\n  constructor(cacheService: CacheService, formatsStore: FormatsStore) {\r\n    this.cacheService = cacheService;\r\n    this.formatsStore = formatsStore;\r\n    const fillLanguages = async () => {\r\n      await this.fillLanguages();\r\n    };\r\n    fillLanguages();\r\n\r\n    const loadCurrencies = async () => {\r\n      await this.loadCurrencies();\r\n    };\r\n    loadCurrencies();\r\n\r\n    this.cacheService\r\n      .get<Boolean>('firstTimeOptionsSelected', Boolean)\r\n      .then((r: boolean) => {\r\n        this.firstTimeOptionsSelected = !!r;\r\n      });\r\n  }\r\n\r\n  private fillLanguages = async () => {\r\n    this.languages = [];\r\n    this.languages.push({ name: LanguagesEnum.English, title: 'English' });\r\n    this.languages.push({\r\n      name: LanguagesEnum.Hebrew,\r\n      title: 'עברית',\r\n      rtl: true,\r\n    });\r\n    this.languages.push({ name: LanguagesEnum.Russian, title: 'Русский' });\r\n\r\n    this.loadCurrentLanguage('');\r\n  };\r\n\r\n  @action changeLanguage = async (languageName: string) => {\r\n    await this.cacheService.add('language', languageName);\r\n    await this.loadCurrentLanguage(languageName);\r\n  };\r\n\r\n  @action changeCurrency = async (currencyName: string) => {\r\n    await this.cacheService.add('currency', currencyName);\r\n    await this.loadCurrencies();\r\n  };\r\n\r\n  @action loadCurrentLanguage = async (languageName: string) => {\r\n    let language = languageName;\r\n    if (!language) {\r\n      language = await this.cacheService.get<String>('language', String);\r\n    }\r\n    let currentLanguage = this.languages.find((l) => l.name === language);\r\n    if (!currentLanguage) {\r\n      currentLanguage = new LanguageEntry();\r\n      currentLanguage.name = LanguagesEnum.English;\r\n      currentLanguage.title = 'English';\r\n    }\r\n    this.currentLanguage = currentLanguage;\r\n    this.formatsStore.localeChanged(this.currentLanguage.name);\r\n\r\n    if (this.currentLanguage.name === LanguagesEnum.English) {\r\n      this.dateFns = new DateFnsUtils({ locale: enLocale });\r\n    } else if (this.currentLanguage.name === LanguagesEnum.Hebrew) {\r\n      this.dateFns = new DateFnsUtils({ locale: heLocale });\r\n    } else if (this.currentLanguage.name === LanguagesEnum.Russian) {\r\n      this.dateFns = new DateFnsUtils({ locale: ruLocale });\r\n    }\r\n  };\r\n\r\n  private loadCurrencies = async () => {\r\n    this.currencies = [];\r\n\r\n    const currencies = await this.cacheService.get<CurrencyEntry>(\r\n      'allCurrencies',\r\n      CurrencyEntry,\r\n      true\r\n    );\r\n    if (currencies && currencies.length) {\r\n      this.currencies = currencies;\r\n    } else {\r\n      this.currencies.push({ name: 'USD', symbol: '$' });\r\n      this.currencies.push({ name: 'EUR', symbol: '€' });\r\n      this.currencies.push({ name: 'ILS', symbol: '₪' });\r\n    }\r\n    const currency = await this.cacheService.get<String>('currency', String);\r\n    this.defaultCurrency =\r\n      this.currencies.find((c) => c.name === currency) || new CurrencyEntry();\r\n  };\r\n\r\n  @action addNewCurrency = async (\r\n    translate: TranslateEntry,\r\n    currency: CurrencyEntry\r\n  ) => {\r\n    const result = new ErrorEntry();\r\n    if (!currency.name) {\r\n      result.addError(translate.CurrencyNameIsRequired);\r\n    }\r\n    if (!currency.symbol) {\r\n      result.addError(translate.CurrencySymbolIsRequired);\r\n    }\r\n    if (this.currencies.some((c) => c.name === currency.name)) {\r\n      result.addError(translate.CurrencyWithThisNameIsAlreadyExists);\r\n    }\r\n    if (result.success) {\r\n      this.currencies.push(currency);\r\n      await this.cacheService.add('allCurrencies', this.currencies);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action saveFirstTimeOptions = async (\r\n    translate: TranslateEntry,\r\n    languageName: string,\r\n    currencyName: string\r\n  ) => {\r\n    const result = new ErrorEntry();\r\n    if (!languageName) {\r\n      result.addError(translate.LanguageSelectionIsRequired);\r\n    }\r\n    if (!currencyName) {\r\n      result.addError(translate.CurrencySelectionIsRequired);\r\n    }\r\n    if (result.success) {\r\n      await this.changeLanguage(languageName);\r\n      await this.changeCurrency(currencyName);\r\n      await this.cacheService.add('firstTimeOptionsSelected', true);\r\n      this.firstTimeOptionsSelected = true;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action getCurrencyByName = (name: string) => {\r\n    const currency = this.currencies.find((c) => c.name === name);\r\n    return currency || this.defaultCurrency || new CurrencyEntry();\r\n  };\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport TranslateEntry from '../models/entries/TranslateEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass TranslatesStore {\r\n  @observable translate: TranslateEntry;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.translate = new TranslateEntry();\r\n\r\n    this.cacheService.get<String>('language', String).then((l) => {\r\n      this.loadTranslate(l || 'en-US');\r\n    });\r\n  }\r\n\r\n  @action loadTranslate = async (language: string) => {\r\n    this.translate = Helpers.getTranslateByLanguage(language);\r\n  };\r\n}\r\n\r\nexport default TranslatesStore;\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class FormatsStore {\r\n  @observable numberWithDigits = new Intl.NumberFormat('en-US', {\r\n    // maximumFractionDigits: 2,\r\n  });\r\n\r\n  @action localeChanged = (locale: string) => {\r\n    if (locale) {\r\n      this.numberWithDigits = new Intl.NumberFormat(locale);\r\n    }\r\n  };\r\n}\r\n","import CacheService from '../services/CacheService';\r\nimport AppStore from './AppStore';\r\nimport ServicesStore from './ServicesStore';\r\nimport TypesStore from './TypesStore';\r\nimport IconsStore from './IconsStore';\r\nimport CashStore from './CashStore';\r\nimport PropertiesStore from './PropertiesStore';\r\nimport TranslatesStore from './TranslatesStore';\r\nimport FormatsStore from './FormatsStore';\r\n\r\nconst appStore = new AppStore();\r\nconst cacheService = new CacheService(appStore);\r\nconst servicesStore = new ServicesStore(cacheService);\r\nappStore.services = servicesStore;\r\nconst cashStore = new CashStore(cacheService);\r\nconst typesStore = new TypesStore(cacheService);\r\nconst iconsStore = new IconsStore(cacheService);\r\nconst formatsStore = new FormatsStore();\r\nconst propertiesStore = new PropertiesStore(cacheService, formatsStore);\r\nconst translatesStore = new TranslatesStore(cacheService);\r\n\r\nconst stores = {\r\n  appStore,\r\n  cashStore,\r\n  typesStore,\r\n  iconsStore,\r\n  propertiesStore,\r\n  translatesStore,\r\n  formatsStore,\r\n};\r\n\r\nexport default stores;\r\n","import { Provider } from 'mobx-react';\r\nimport React from 'react';\r\nimport ThemeCreator from './components/ThemeCreator/ThemeCreator';\r\nimport store from './stores';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeCreator />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
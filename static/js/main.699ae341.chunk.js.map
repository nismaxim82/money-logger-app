{"version":3,"sources":["components/IconsChooser/IconsChooser.module.css","App.module.css","components/CashPanel/CashPanel.module.css","components/RecordsPanel/RecordsPanel.module.css","components/TypeEditPanel/TypeEditPanel.module.css","components/CashEditPanel/CashEditPanel.module.css","components/Body/Body.module.css","components/Menu/Menu.module.css","stores/UseStores.ts","utility/Helpers.ts","models/Enum.ts","components/CashPanel/CashPanel.tsx","components/RecordsPanel/RecordsPanel.tsx","components/TypesPanel/TypesPanel.tsx","components/MenuPanel/MenuPanel.tsx","utility/UseDebounce.tsx","components/IconsChooser/IconsChooser.tsx","components/TypeEditPanel/TypeEditPanel.tsx","components/CashEditPanel/CashEditPanel.tsx","routes/Routes.ts","routes/RouteWithSubRoutes.tsx","components/Body/Body.tsx","components/LinkTab/LinkTab.tsx","components/Menu/Menu.tsx","services/CacheService.ts","stores/AppStore.ts","stores/ServicesStore.ts","models/entries/TypeEntry.ts","stores/TypesStore.ts","stores/IconsStore.ts","stores/CashStore.ts","stores/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStores","useContext","MobXProviderContext","store","Helpers","combineStyles","result","styles","length","otherStyles","slice","forEach","s","Object","keys","k","getObjectValueByProp","obj","prop","splittedProps","split","splice","join","setObjectValueByProp","value","getDateFromString","date","Date","MenuTypesEnum","IconTypesEnum","useStyles","makeStyles","theme","createStyles","tabPanel","gridGap","spacing","cardLabelText","marginTop","color","palette","text","primary","CashPanel","observer","typesStore","css","classes","useTheme","getThemeColorStyle","p","history","useHistory","buttonAddNewCashClick","event","typeId","currentTarget","dataset","push","Cash","Grid","container","className","grid","types","map","type","key","name","item","xs","alignItems","justify","IconButton","card","label","cardLabel","onClick","data-type-id","Icon","style","iconColor","fontSize","cardIcon","icon","Typography","variant","root","padding","stickyHeader","background","default","lineHeight","paddingLeft","paddingRight","paddingTop","paddingBottom","borderBottom","light","stickyHeaderText","dark","cashItem","RecordsPanel","cashStore","dateFns","DateFnsUtils","locale","ruLocale","List","subheader","getCashesDistinctDates","cashes","d","listSection","cashesUl","ListSubheader","format","getCashesStartedByDate","cash","ListItem","id","ListItemText","total","TypesPanel","typeClick","typeName","Types","component","list","button","data-id","ListItemAvatar","primaryTypographyProps","Divider","MenuPanel","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchInput","typesSelectChips","marginRight","typesSelectChip","foundedTotalCount","foundedIconsContainer","foundedIconsIconFont","selectedIcon","secondary","main","pagination","IconsChooser","props","iconsStore","iconsButtonsContainerRef","React","useRef","Filled","typeValue","setTypeValue","filter","setFilter","page","setPage","debouncedSearchFilter","debouncedSearchTypeValue","debouncedSearchPage","current","scrollTop","searchIconsByFilterAndPage","setSelectedIcon","onIconClick","iconRightName","querySelectorAll","innerText","selectedIconChanged","FormControl","typeSelect","fullWidth","InputLabel","Select","labelId","multiple","onChange","newValue","target","input","Input","renderValue","selected","Chip","Array","from","iconsTypes","MenuItem","Checkbox","checked","indexOf","get","placeholder","newFilter","onKeyUp","keyCode","blur","startAdornment","InputAdornment","position","ref","foundedIcons","getIconRightStringNameForFontToShow","foundedIconsButton","pagesCount","Pagination","count","size","newPage","modalContainer","zIndex","modal","paper","firstBar","secondBar","toolbarIcon","body","colorAndIconContainer","colorDialogBox","colorDialogHeader","minHeight","mixins","toolbar","colorDialogBody","colorDialogFooter","iconDialogHeader","iconDialogBody","iconDialogFooter","TypeEditPanel","setTypeId","setColor","colorPickerOpened","setColorPickerOpened","setIcon","iconPickerOpened","setIconPickerOpened","match","params","typesLoaded","getTypeToSaveByName","typeToSave","deleteType","a","saveEdit","validateTypeToSave","saveType","changeTypeField","propName","updateTypeToSaveByProp","getAppliedColor","getColorInHex","colorHandleClose","iconHandleClose","Fade","in","timeout","Slide","direction","mountOnEnter","unmountOnExit","AppBar","Toolbar","Box","emptyBox","TextField","error","disabled","inputProps","helperText","onFocus","select","dialogSelect","SelectProps","InputProps","Dialog","open","fullScreen","Paper","pickerProps","hex","Button","iconDialogBox","newIcon","selectTypeIcon","totalInput","CashEditPanel","cashId","setCashId","cashesLoaded","getCashToSaveById","cashToSave","createdDate","deleteCash","Records","validateCashToSave","saveCash","pickerDateChange","totalKeyUp","selectedTypeId","dialogSelectBox","utils","datesGrid","margin","parseFloat","routes","path","exact","components","Menu","RouteWithSubRoutes","route","render","isArray","Component","index","fab","bottom","right","Body","appStore","i","selectedMenuUrl","to","prefix","getAddButtonLinkUrl","Fab","aria-label","LinkTab","Tab","Link","currentUrl","pathname","preventDefault","menuIcon","comboButton","searchIcon","loadSelectedMenuIndex","location","listener","listen","menuTabProps","href","selectedMenuIndex","headerTitle","headerBox","endIcon","ArrowDropDown","comboButtonTextBox","toDateString","Search","Tabs","setSelectedMenuIndex","AttachMoney","MenuBook","MoreHoriz","CacheService","this","then","r","version","clear","add","entry","entryStr","JSON","stringify","localStorage","setItem","validAt","enableCache","getItem","console","log","parsedResult","parse","AppStore","AppJson","services","observable","action","url","urlParts","ServicesStore","cache","TypeEntry","TypesStore","cacheService","getTypeByName","find","t","valid","getSortedTypes","sort","b","initializeDefaultTypes","editType","v","typeIndex","IconsStore","iconName","resultStr","toLowerCase","numberMatch","substring","Map","set","Outlined","Rounded","TwoTone","toString","Sharp","allIcons","filledIcons","outlinedIcons","roundedIcons","twoToneIcons","sharpIcons","AllIcons","allIconsForCache","Math","ceil","iconsOnOnePage","computed","lowerCasedFilter","workingArray","concat","CashStore","getSortedCashes","loadAllCashes","c","datesOfCashes","toISOString","dateYYYYMMDD","startsWith","editCash","uuidv4","dateFrom","dateTo","servicesStore","stores","App","basename","AppSettings","CssBaseline","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.699ae341.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typesSelectChips\":\"IconsChooser_typesSelectChips__rNRQf\",\"foundedIconsContainer\":\"IconsChooser_foundedIconsContainer__9eTT8\",\"foundedIconsButton\":\"IconsChooser_foundedIconsButton__3wU-W\",\"pagination\":\"IconsChooser_pagination__1dXi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__2L-Jj\",\"footer\":\"App_footer__12-B7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CashPanel_grid__1M0h2\",\"card\":\"CashPanel_card__2ETq-\",\"cardLabel\":\"CashPanel_cardLabel__3f2v_\",\"lastCard\":\"CashPanel_lastCard__2tePY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RecordsPanel_root__2BXAY\",\"cashesUl\":\"RecordsPanel_cashesUl__3kagc\",\"stickyHeader\":\"RecordsPanel_stickyHeader__13-Qe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"TypeEditPanel_modalContainer__o8c64\",\"emptyBox\":\"TypeEditPanel_emptyBox__2akL7\",\"body\":\"TypeEditPanel_body__2pBnt\",\"colorAndIconContainer\":\"TypeEditPanel_colorAndIconContainer__35IGH\",\"dialogSelect\":\"TypeEditPanel_dialogSelect__2KpQS\",\"colorDialogBox\":\"TypeEditPanel_colorDialogBox__mLPjz\",\"iconDialogBox\":\"TypeEditPanel_iconDialogBox__j1WSI\",\"colorDialogHeader\":\"TypeEditPanel_colorDialogHeader__2qD8B\",\"iconDialogHeader\":\"TypeEditPanel_iconDialogHeader__2Q3n4\",\"colorDialogBody\":\"TypeEditPanel_colorDialogBody__285q0\",\"iconDialogBody\":\"TypeEditPanel_iconDialogBody__nr6zd\",\"colorDialogFooter\":\"TypeEditPanel_colorDialogFooter__2ZN7j\",\"iconDialogFooter\":\"TypeEditPanel_iconDialogFooter__3L6_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"CashEditPanel_modalContainer__3HV8D\",\"emptyBox\":\"CashEditPanel_emptyBox__Oe2ld\",\"body\":\"CashEditPanel_body__1Wrp-\",\"dialogSelectBox\":\"CashEditPanel_dialogSelectBox__2sII0\",\"datesGrid\":\"CashEditPanel_datesGrid__MiAud\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__2G_GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBox\":\"Menu_headerBox__1Me5e\",\"headerTitle\":\"Menu_headerTitle__2LUUc\",\"comboButton\":\"Menu_comboButton__OoKdQ\",\"comboButtonTextBox\":\"Menu_comboButtonTextBox__1axJS\"};","import { MobXProviderContext } from 'mobx-react';\r\nimport { useContext } from 'react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext).store;\r\n};\r\nexport default useStores;\r\n","class Helpers {\r\n  static combineStyles = (...styles: any) => {\r\n    let result: any;\r\n    if (styles.length) {\r\n      result = { ...styles[0] };\r\n      const otherStyles = styles.slice(1);\r\n      if (otherStyles.length) {\r\n        otherStyles.forEach((s: any) => {\r\n          Object.keys(s).forEach((k: string) => {\r\n            if (!result[k]) {\r\n              result[k] = s[k];\r\n            } else {\r\n              result[k] += ` ${s[k]}`;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  static getObjectValueByProp = (obj: any, prop: string): any => {\r\n    const splittedProps = prop.split('.');\r\n    if (splittedProps.length > 1) {\r\n      return Helpers.getObjectValueByProp(\r\n        obj[splittedProps[0]],\r\n        splittedProps.splice(1).join('.')\r\n      );\r\n    }\r\n    return obj[splittedProps[0]];\r\n  };\r\n\r\n  static setObjectValueByProp = (obj: any, prop: string, value: any) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    obj[prop] = value;\r\n  };\r\n\r\n  static getDateFromString = (date: Date | string) => {\r\n    if (typeof date === 'string') {\r\n      // eslint-disable-next-line no-param-reassign\r\n      date = new Date(date);\r\n    }\r\n    return date;\r\n  };\r\n}\r\n\r\nexport default Helpers;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport enum MenuTypesEnum {\r\n  Cash = 'cash',\r\n  Records = 'records',\r\n  Types = 'types',\r\n  Menu = 'menu',\r\n}\r\n\r\nexport enum IconTypesEnum {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  Rounded = 'Rounded',\r\n  TwoTone = 'Two tone',\r\n  Sharp = 'Sharp',\r\n}\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabPanel: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CashPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const buttonAddNewCashClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    const { typeId } = event.currentTarget.dataset;\r\n    history.push(`/${MenuTypesEnum.Cash}/add/${typeId}`);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={css.grid} spacing={2}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <Grid\r\n          key={type.name}\r\n          item\r\n          xs\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <IconButton\r\n            className={css.card}\r\n            classes={{ label: css.cardLabel }}\r\n            onClick={buttonAddNewCashClick}\r\n            data-type-id={type.name}\r\n          >\r\n            <Icon\r\n              style={{\r\n                color: getThemeColorStyle(type.iconColor),\r\n                fontSize: '2rem',\r\n              }}\r\n              className={css.cardIcon}\r\n            >\r\n              {type.icon}\r\n            </Icon>\r\n            <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n              {type.label}\r\n            </Typography>\r\n          </IconButton>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CashPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  List,\r\n  ListSubheader,\r\n  ListItem,\r\n  ListItemText,\r\n} from '@material-ui/core';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport CashStore from '../../stores/CashStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport * as classes from './RecordsPanel.module.css';\r\nimport ICash from '../../models/entries/ICash';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n    },\r\n    stickyHeader: {\r\n      background: theme.palette.background.default,\r\n      lineHeight: 'normal',\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      paddingTop: theme.spacing(1) + 2,\r\n      paddingBottom: theme.spacing(1) + 2,\r\n      borderBottom: `1px solid ${theme.palette.primary.light}`,\r\n    },\r\n    stickyHeaderText: {\r\n      paddingBottom: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      borderBottom: `3px solid ${theme.palette.primary.dark}`,\r\n    },\r\n    cashItem: {\r\n      padding: 0,\r\n    },\r\n  })\r\n);\r\n\r\nconst RecordsPanel = observer(() => {\r\n  const { cashStore }: { cashStore: CashStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const dateFns = new DateFnsUtils({ locale: ruLocale });\r\n  const getFormattedDate = (date: Date) => {\r\n    return dateFns.format(date, 'd MMMM, EEEE');\r\n  };\r\n\r\n  return (\r\n    <List className={css.root} subheader={<li />}>\r\n      {cashStore.getCashesDistinctDates(cashStore.cashes).map((d: string) => (\r\n        <li key={`section-${d}`} className={css.listSection}>\r\n          <ul className={css.cashesUl}>\r\n            <ListSubheader className={css.stickyHeader}>\r\n              <span className={css.stickyHeaderText}>\r\n                {getFormattedDate(Helpers.getDateFromString(d))}\r\n              </span>\r\n            </ListSubheader>\r\n            {cashStore\r\n              .getCashesStartedByDate(cashStore.cashes, d)\r\n              .map((cash: ICash) => (\r\n                <ListItem key={cash.id} className={css.cashItem}>\r\n                  <ListItemText primary={`Item ${cash.total}`} />\r\n                </ListItem>\r\n              ))}\r\n          </ul>\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default RecordsPanel;\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypesPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst TypesPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  const css = Helpers.combineStyles({}, classes);\r\n  const theme = useTheme();\r\n\r\n  const history = useHistory();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const typeClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const typeName = event.currentTarget.dataset.id;\r\n    history.push(`/${MenuTypesEnum.Types}/edit/${typeName}`);\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={css.list}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <div key={type.name}>\r\n          <ListItem button onClick={typeClick} data-id={type.name}>\r\n            <ListItemAvatar>\r\n              <Icon\r\n                style={{\r\n                  color: getThemeColorStyle(type.iconColor),\r\n                  fontSize: '2rem',\r\n                }}\r\n              >\r\n                {type.icon}\r\n              </Icon>\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={type.label}\r\n              primaryTypographyProps={{ variant: 'subtitle1' }}\r\n            />\r\n          </ListItem>\r\n          <Divider component=\"div\" />\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default TypesPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst MenuPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <></>;\r\n});\r\n\r\nexport default MenuPanel;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  createStyles,\r\n  FormControl,\r\n  Icon,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { IconTypesEnum } from '../../models/Enum';\r\nimport IconsStore from '../../stores/IconsStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport useDebounce from '../../utility/UseDebounce';\r\nimport classes from './IconsChooser.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchInput: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    typesSelectChips: {\r\n      marginTop: -theme.spacing(1),\r\n      marginRight: -theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    typesSelectChip: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    foundedTotalCount: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsIconFont: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    selectedIcon: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    pagination: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  selectedIcon?: string;\r\n  selectedIconChanged?: (newIcon: string) => void;\r\n}\r\n\r\nconst IconsChooser = observer((props: IProps) => {\r\n  const { iconsStore }: { iconsStore: IconsStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const iconsButtonsContainerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [typeValue, setTypeValue] = React.useState([IconTypesEnum.Filled]);\r\n  const [filter, setFilter] = React.useState('');\r\n  const [page, setPage] = React.useState(1);\r\n  const onTypeValueChange = (newValue: any) => {\r\n    setPage(1);\r\n    setTypeValue(newValue.target.value);\r\n  };\r\n  const onTypeRenderValue = (selected: any) => {\r\n    return (\r\n      <div className={css.typesSelectChips}>\r\n        {(selected as string[]).map((value) => (\r\n          <Chip key={value} label={value} className={css.typesSelectChip} />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  const searchIcons = () => {\r\n    if (iconsButtonsContainerRef.current) {\r\n      iconsButtonsContainerRef.current.scrollTop = 0;\r\n    }\r\n    iconsStore.searchIconsByFilterAndPage(filter, typeValue, page);\r\n  };\r\n  const debouncedSearchFilter = useDebounce(filter, 500);\r\n  const debouncedSearchTypeValue = useDebounce(typeValue, 500);\r\n  const debouncedSearchPage = useDebounce(page, 500);\r\n  const filterChanged = (newFilter: any) => {\r\n    setPage(1);\r\n    setFilter(newFilter.target.value);\r\n  };\r\n  const filterKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      event.currentTarget.blur();\r\n    }\r\n  };\r\n  const onPageChange = (event: any, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n  React.useEffect(searchIcons, [\r\n    debouncedSearchFilter,\r\n    debouncedSearchTypeValue,\r\n    debouncedSearchPage,\r\n  ]);\r\n\r\n  const [selectedIcon, setSelectedIcon] = React.useState('');\r\n  const onIconClick = (icon: any) => {\r\n    let iconRightName = icon.currentTarget.querySelectorAll(\r\n      '.material-icons'\r\n    )[0].innerText;\r\n    // Check if icon is already selected and unselect it\r\n    if (selectedIcon === iconRightName) {\r\n      iconRightName = '';\r\n    }\r\n    setSelectedIcon(iconRightName);\r\n    if (props.selectedIconChanged) {\r\n      props.selectedIconChanged(iconRightName);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSelectedIcon(props.selectedIcon || '');\r\n  }, [props.selectedIcon]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.typeSelect} fullWidth>\r\n        <InputLabel id=\"types-select-label\">Типы иконок</InputLabel>\r\n        <Select\r\n          labelId=\"types-select-label\"\r\n          multiple\r\n          fullWidth\r\n          value={typeValue}\r\n          onChange={onTypeValueChange}\r\n          input={<Input />}\r\n          renderValue={onTypeRenderValue}\r\n        >\r\n          {Array.from(iconsStore.iconsTypes.keys()).map((k: IconTypesEnum) => (\r\n            <MenuItem key={k} value={k}>\r\n              <Checkbox checked={typeValue.indexOf(k) > -1} />\r\n              <ListItemText primary={iconsStore.iconsTypes.get(k)} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Input\r\n        fullWidth\r\n        placeholder=\"Введите для поиска\"\r\n        value={filter}\r\n        onChange={filterChanged}\r\n        onKeyUp={filterKeyUp}\r\n        className={css.searchInput}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <Icon>search</Icon>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      <div className={css.foundedTotalCount}>\r\n        <Typography variant=\"caption\">\r\n          всего найдено {iconsStore.foundedTotalCount}\r\n        </Typography>\r\n      </div>\r\n      <div ref={iconsButtonsContainerRef} className={css.foundedIconsContainer}>\r\n        {iconsStore.foundedIcons.map((icon: string) => {\r\n          const iconRightName = iconsStore.getIconRightStringNameForFontToShow(\r\n            icon\r\n          );\r\n          return (\r\n            <IconButton\r\n              key={icon}\r\n              onClick={onIconClick}\r\n              className={css.foundedIconsButton}\r\n            >\r\n              <Icon\r\n                className={\r\n                  css.foundedIconsIconFont +\r\n                  (iconRightName === selectedIcon ? ` ${css.selectedIcon}` : '')\r\n                }\r\n              >\r\n                {iconRightName}\r\n              </Icon>\r\n            </IconButton>\r\n          );\r\n        })}\r\n      </div>\r\n      {iconsStore.pagesCount > 0 && (\r\n        <Pagination\r\n          className={css.pagination}\r\n          count={iconsStore.pagesCount}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          page={page}\r\n          onChange={onPageChange}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default IconsChooser;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport IconsChooser from '../IconsChooser/IconsChooser';\r\nimport classes from './TypeEditPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorAndIconContainer: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorDialogBox: {\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    colorDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    colorDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    iconDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    iconDialogBody: {\r\n      padding: theme.spacing(2),\r\n      paddingBottom: 0,\r\n    },\r\n    iconDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst TypeEditPanel = observer((props: IProps) => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [typeId, setTypeId] = React.useState('');\r\n  const [color, setColor] = React.useState('');\r\n  const [colorPickerOpened, setColorPickerOpened] = React.useState(false);\r\n  const [icon, setIcon] = React.useState('');\r\n  const [iconPickerOpened, setIconPickerOpened] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setTypeId(props.match.params?.id);\r\n    if (typesStore.typesLoaded) {\r\n      typesStore.getTypeToSaveByName(typeId);\r\n      setColor(typesStore.typeToSave?.iconColor || '');\r\n    }\r\n  }, [props.match.params, typeId, typesStore, typesStore.typesLoaded]);\r\n\r\n  const deleteType = async () => {\r\n    await typesStore.deleteType(typeId);\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const saveEdit = async () => {\r\n    if (typesStore.validateTypeToSave()) {\r\n      await typesStore.saveType(typeId);\r\n      history.push(`/${MenuTypesEnum.Types}`);\r\n    }\r\n  };\r\n\r\n  const changeTypeField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.currentTarget.value;\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    typesStore.updateTypeToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const positionFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const getAppliedColor = () => {\r\n    return typesStore.getColorInHex(theme, typesStore.typeToSave?.iconColor);\r\n  };\r\n\r\n  const colorHandleOpen = () => {\r\n    setColorPickerOpened(true);\r\n  };\r\n  const colorHandleClose = () => {\r\n    setColorPickerOpened(false);\r\n  };\r\n  const pickerColorChange = (pickerProps: any) => {\r\n    setColor(pickerProps.hex);\r\n  };\r\n  const buttonApplyColorSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('iconColor', color);\r\n    colorHandleClose();\r\n  };\r\n  const buttonCancelColorSelect = () => {\r\n    setColor(getAppliedColor());\r\n    colorHandleClose();\r\n  };\r\n\r\n  const iconHandleOpen = () => {\r\n    setIconPickerOpened(true);\r\n  };\r\n  const iconHandleClose = () => {\r\n    setIconPickerOpened(false);\r\n  };\r\n  const iconChange = (newIcon: string) => {\r\n    setIcon(newIcon);\r\n  };\r\n  const buttonApplyIconSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('icon', icon);\r\n    iconHandleClose();\r\n  };\r\n  const buttonCancelIconSelect = () => {\r\n    setIcon(typesStore.typeToSave?.icon || '');\r\n    iconHandleClose();\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {typeId ? 'Редактирование типа' : 'Новый тип'}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {typeId && (\r\n                <IconButton onClick={deleteType}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!typesStore.typeToSave?.name}\r\n              fullWidth\r\n              label=\"ID\"\r\n              disabled={!!typeId}\r\n              value={typesStore.typeToSave?.name || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'name' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.name\r\n                  ? 'ID обязательно для заполнения'\r\n                  : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={!typesStore.typeToSave?.label}\r\n              fullWidth\r\n              label=\"Название\"\r\n              value={typesStore.typeToSave?.label || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'label' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.label\r\n                  ? 'Название обязательно для заполнения'\r\n                  : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n              }\r\n              fullWidth\r\n              label=\"Позиция в списке\"\r\n              value={\r\n                typesStore.typeToSave?.position ||\r\n                typesStore.typeToSave?.position === 0\r\n                  ? typesStore.typeToSave?.position\r\n                  : ''\r\n              }\r\n              onChange={changeTypeField}\r\n              type=\"number\"\r\n              inputProps={{ 'data-prop-name': 'position' }}\r\n              onFocus={positionFieldFocus}\r\n              helperText={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n                  ? 'Позиция в списке обязательна для заполнения'\r\n                  : ''\r\n              }\r\n            />\r\n            <div className={css.colorAndIconContainer}>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label=\"Цвет иконки\"\r\n                className={css.dialogSelect}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Icon>stop</Icon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                value={0}\r\n                onClick={colorHandleOpen}\r\n              >\r\n                <MenuItem value={0}>{getAppliedColor()}</MenuItem>\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label=\"Иконка\"\r\n                value={typesStore.typeToSave?.icon ? '0' : ''}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                onClick={iconHandleOpen}\r\n              >\r\n                <MenuItem value=\"0\">\r\n                  <Icon>{typesStore.typeToSave?.icon}</Icon>\r\n                </MenuItem>\r\n              </TextField>\r\n            </div>\r\n            <Dialog\r\n              open={colorPickerOpened}\r\n              className={css.colorDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.colorDialogBox}>\r\n                <div className={css.colorDialogHeader}>\r\n                  <Typography variant=\"h6\">Выберите цвет иконки</Typography>\r\n                </div>\r\n                <div className={css.colorDialogBody}>\r\n                  <ChromePicker color={color} onChange={pickerColorChange} />\r\n                </div>\r\n                <div className={css.colorDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyColorSelect}\r\n                  >\r\n                    Выбрать\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelColorSelect}>\r\n                    Отмена\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n            <Dialog\r\n              open={iconPickerOpened}\r\n              className={css.iconDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.iconDialogBox}>\r\n                <div className={css.iconDialogHeader}>\r\n                  <Typography variant=\"h6\">Выберите иконку</Typography>\r\n                </div>\r\n                <div className={css.iconDialogBody}>\r\n                  <IconsChooser\r\n                    selectedIcon={typesStore.typeToSave?.icon}\r\n                    selectedIconChanged={iconChange}\r\n                  />\r\n                </div>\r\n                <div className={css.iconDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyIconSelect}\r\n                  >\r\n                    Выбрать\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelIconSelect}>\r\n                    Отмена\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default TypeEditPanel;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  Fade,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport CashStore from '../../stores/CashStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashEditPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    selectTypeIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    totalInput: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst CashEditPanel = observer((props: IProps) => {\r\n  const {\r\n    cashStore,\r\n    typesStore,\r\n  }: { cashStore: CashStore; typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [cashId, setCashId] = React.useState('');\r\n  const [typeId, setTypeId] = React.useState('');\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setCashId(props.match.params?.id);\r\n    setTypeId(props.match.params?.typeId);\r\n    if (cashStore.cashesLoaded) {\r\n      cashStore.getCashToSaveById(cashId);\r\n      if (!cashStore.cashToSave?.id) {\r\n        cashStore.updateTypeToSaveByProp('typeName', typeId);\r\n      }\r\n    }\r\n  }, [\r\n    cashId,\r\n    cashStore,\r\n    props.match.params,\r\n    typesStore.typesLoaded,\r\n    cashStore.cashesLoaded,\r\n    typesStore,\r\n    typeId,\r\n  ]);\r\n\r\n  const createdDate = new Date();\r\n\r\n  const deleteCash = async () => {\r\n    await typesStore.deleteType(cashId);\r\n    history.push(`/${MenuTypesEnum.Records}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    if (cashId) {\r\n      history.push(`/${MenuTypesEnum.Records}`);\r\n    } else {\r\n      history.push(`/${MenuTypesEnum.Cash}`);\r\n    }\r\n  };\r\n  const saveEdit = async () => {\r\n    if (!cashStore.cashToSave?.createdDate) {\r\n      cashStore.updateTypeToSaveByProp('createdDate', createdDate);\r\n    }\r\n    if (cashStore.validateCashToSave()) {\r\n      await cashStore.saveCash(cashId);\r\n      history.push(`/${MenuTypesEnum.Cash}`);\r\n    }\r\n  };\r\n\r\n  const selectTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedTypeId = event.currentTarget.dataset.value!;\r\n    cashStore.updateTypeToSaveByProp('typeName', selectedTypeId);\r\n  };\r\n\r\n  const getIconColor = (color?: string) => {\r\n    return typesStore.getColorInHex(theme, color);\r\n  };\r\n\r\n  const pickerDateChange = (date: MaterialUiPickersDate) => {\r\n    cashStore.updateTypeToSaveByProp('createdDate', date);\r\n  };\r\n\r\n  const changeTotalField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = parseFloat(event.currentTarget.value);\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    cashStore.updateTypeToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const totalFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const totalKeyUp = async (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      await saveEdit();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {cashId ? 'Редактирование оплаты' : 'Новая оплата'}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {cashId && (\r\n                <IconButton onClick={deleteCash}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!cashStore.cashToSave?.typeName}\r\n              select\r\n              fullWidth\r\n              label=\"Тип оплаты\"\r\n              className={css.dialogSelect}\r\n              value={cashStore.cashToSave?.typeName || ''}\r\n              onChange={selectTypeChange}\r\n              helperText={\r\n                !cashStore.cashToSave?.typeName\r\n                  ? 'Тип оплаты обязателен для заполнения'\r\n                  : ''\r\n              }\r\n            >\r\n              {typesStore.types.map((type) => (\r\n                <MenuItem key={type.name} value={type.name}>\r\n                  <div className={css.dialogSelectBox}>\r\n                    <Icon\r\n                      className={css.selectTypeIcon}\r\n                      style={{ color: getIconColor(type.iconColor) }}\r\n                    >\r\n                      {type.icon}\r\n                    </Icon>\r\n                    <span>{type.label}</span>\r\n                  </div>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n              <Grid container justify=\"space-around\" className={css.datesGrid}>\r\n                <KeyboardDatePicker\r\n                  margin=\"normal\"\r\n                  label=\"Дата\"\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                />\r\n                <KeyboardTimePicker\r\n                  margin=\"normal\"\r\n                  label=\"Время\"\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <TextField\r\n              error={!cashStore.cashToSave?.total}\r\n              fullWidth\r\n              className={css.totalInput}\r\n              label=\"Сумма оплаты\"\r\n              value={cashStore.cashToSave?.total || ''}\r\n              onChange={changeTotalField}\r\n              onFocus={totalFieldFocus}\r\n              onKeyUp={totalKeyUp}\r\n              type=\"number\"\r\n              inputProps={{ 'data-prop-name': 'total' }}\r\n              helperText={\r\n                !cashStore.cashToSave?.total\r\n                  ? 'Сумма оплаты обязательна для заполнения'\r\n                  : ''\r\n              }\r\n            />\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default CashEditPanel;\r\n","import CashPanel from '../components/CashPanel/CashPanel';\r\nimport RecordsPanel from '../components/RecordsPanel/RecordsPanel';\r\nimport TypesPanel from '../components/TypesPanel/TypesPanel';\r\nimport MenuPanel from '../components/MenuPanel/MenuPanel';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\nimport TypeEditPanel from '../components/TypeEditPanel/TypeEditPanel';\r\nimport CashEditPanel from '../components/CashEditPanel/CashEditPanel';\r\n\r\nconst routes = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add/:typeId`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/edit/:id`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Records}`,\r\n    exact: true,\r\n    components: RecordsPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}`,\r\n    exact: true,\r\n    components: TypesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/add`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/edit/:id`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}`,\r\n    exact: true,\r\n    components: MenuPanel,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst RouteWithSubRoutes = (route: any) => {\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props: any) => {\r\n        if (Array.isArray(route.components)) {\r\n          return route.components.map((Component: any, index: number) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <Component key={index} {...props} routes={route.routes} />\r\n          ));\r\n        }\r\n        return <route.components {...props} routes={route.routes} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSubRoutes;\r\n","import { createStyles, Fab, makeStyles, Theme } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../routes/Routes';\r\nimport RouteWithSubRoutes from '../../routes/RouteWithSubRoutes';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './Body.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Body = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const getAddButtonLinkUrl = () => {\r\n    let prefix = appStore.selectedMenuUrl;\r\n    if (prefix === '/') {\r\n      prefix += MenuTypesEnum.Cash;\r\n    }\r\n    return `${appStore.selectedMenuUrl}/add`;\r\n  };\r\n\r\n  const showAddIcon = () => {\r\n    return (\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Menu}` &&\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Records}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={css.body}>\r\n      {routes.map((route, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RouteWithSubRoutes key={i} {...route} />\r\n      ))}\r\n      {showAddIcon() && (\r\n        <Link to={getAddButtonLinkUrl()}>\r\n          <Fab\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={css.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Body;\r\n","import { Tab } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  to: string;\r\n  icon?: any;\r\n  currentUrl?: string;\r\n}\r\n\r\nconst LinkTab = observer((props: IProps) => {\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const linkClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    if (props.currentUrl === event.currentTarget.pathname) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      to={props.to}\r\n      label={props.label}\r\n      icon={props.icon}\r\n      onClick={linkClick}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LinkTab;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  List as ListIcon,\r\n  Menu as MenuIcon,\r\n  MenuBook as MenuBookIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Search as SearchIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helpers from '../../utility/Helpers';\r\nimport LinkTab from '../LinkTab/LinkTab';\r\nimport classes from './Menu.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    menuIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    comboButton: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    searchIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n  const menuTabChanged = (event: any, newValue: number) => {\r\n    appStore.setSelectedMenuIndex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    const listener = history.listen(() => {\r\n      appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    });\r\n\r\n    return () => {\r\n      listener();\r\n    };\r\n  });\r\n\r\n  const menuTabProps = (name: string, href?: string) => {\r\n    return {\r\n      id: `menu-tab-${name}`,\r\n      'aria-controls': `menu-tab-${name}`,\r\n      to: href || `/${name}`,\r\n      currentUrl: appStore.selectedMenuUrl,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={css.firstBar}>\r\n        <Toolbar>\r\n          {appStore.selectedMenuIndex === 0 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Внести оплату\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 1 && (\r\n            <Box className={css.headerBox}>\r\n              <IconButton>\r\n                <MenuIcon className={css.menuIcon} />\r\n              </IconButton>\r\n              <Button\r\n                className={css.comboButton}\r\n                endIcon={<ArrowDropDownIcon />}\r\n              >\r\n                <span className={css.comboButtonTextBox}>\r\n                  <span>{new Date().toDateString()}</span>\r\n                  <span>Записей 21</span>\r\n                </span>\r\n              </Button>\r\n              <IconButton>\r\n                <SearchIcon className={css.searchIcon} />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {appStore.selectedMenuIndex === 2 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Типы\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 3 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Еще\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n        <Tabs\r\n          value={appStore.selectedMenuIndex}\r\n          onChange={menuTabChanged}\r\n          aria-label=\"menu tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <LinkTab {...menuTabProps('cash', '/')} icon={<AttachMoneyIcon />} />\r\n          <LinkTab {...menuTabProps('records')} icon={<MenuBookIcon />} />\r\n          <LinkTab {...menuTabProps('types')} icon={<ListIcon />} />\r\n          <LinkTab {...menuTabProps('menu')} icon={<MoreHorizIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Menu;\r\n","import AppStore from '../stores/AppStore';\r\n\r\nexport default class CacheService {\r\n  private appStore: AppStore;\r\n\r\n  constructor(appStore: AppStore) {\r\n    this.appStore = appStore;\r\n    this.get<String>('appVersion', false, new Date()).then((r) => {\r\n      if (appStore.version !== r) {\r\n        this.clear();\r\n        this.add('appVersion', appStore.version);\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async add(key: string, entry: any) {\r\n    let entryStr: string;\r\n    if (typeof entry !== 'string') {\r\n      entryStr = JSON.stringify({ date: new Date(), entry });\r\n    } else {\r\n      entryStr = entry;\r\n    }\r\n    const result = await localStorage.setItem(key, entryStr);\r\n    return result;\r\n  }\r\n\r\n  public async get<T>(\r\n    key: string,\r\n    isArray?: boolean,\r\n    validAt?: Date\r\n  ): Promise<any> {\r\n    let result: string | null = null;\r\n    if (!this.appStore.enableCache) {\r\n      return result;\r\n    }\r\n    result = await localStorage.getItem(key);\r\n    if (result) {\r\n      console.log(`Key: ${key} loaded from cache`);\r\n    }\r\n    if (!result || !result.length) {\r\n      return result;\r\n    }\r\n    try {\r\n      const parsedResult = JSON.parse(result);\r\n      if (validAt) {\r\n        if (new Date(parsedResult.date) < validAt) {\r\n          return parsedResult.entry;\r\n        }\r\n        console.log(\r\n          `Key: ${key} date expired. ValidAt: ${validAt}. ExpiredAt: ${parsedResult.date}`\r\n        );\r\n        return null;\r\n      }\r\n      return parsedResult.entry;\r\n      // let returnResult: any;\r\n      // if (isArray) {\r\n      //   returnResult = [];\r\n      //   parsedResult.entry.forEach((t: any) => {\r\n      //     returnResult.push(t as T);\r\n      //   });\r\n      // } else {\r\n      //   returnResult = parsedResult.entry as T;\r\n      // }\r\n      // return returnResult;\r\n    } catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async clear() {\r\n    await localStorage.clear();\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport * as AppJson from '../../package.json';\r\nimport ServicesStore from './ServicesStore';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\n\r\nclass AppStore {\r\n  version = AppJson.version;\r\n  services!: ServicesStore;\r\n\r\n  // NOTE: when application is change version, cache will be cleared\r\n  @observable enableCache = true;\r\n  @observable selectedMenuIndex = 0;\r\n  @observable selectedMenuUrl = '/';\r\n\r\n  @action setSelectedMenuIndex = (newValue: number) => {\r\n    this.selectedMenuIndex = newValue;\r\n  };\r\n\r\n  @action loadSelectedMenuIndex = (url: string) => {\r\n    const urlParts = url.split('/');\r\n    if (urlParts.length > 1) {\r\n      if (urlParts[1] === MenuTypesEnum.Records) {\r\n        this.selectedMenuIndex = 1;\r\n      } else if (urlParts[1] === MenuTypesEnum.Types) {\r\n        this.selectedMenuIndex = 2;\r\n      } else if (urlParts[1] === MenuTypesEnum.Menu) {\r\n        this.selectedMenuIndex = 3;\r\n      } else {\r\n        this.selectedMenuIndex = 0;\r\n      }\r\n    } else {\r\n      this.selectedMenuIndex = 0;\r\n    }\r\n    if (this.selectedMenuIndex === 0) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Cash}`;\r\n    } else if (this.selectedMenuIndex === 1) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Records}`;\r\n    } else if (this.selectedMenuIndex === 2) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Types}`;\r\n    } else if (this.selectedMenuIndex === 3) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Menu}`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default AppStore;\r\n","import CacheService from '../services/CacheService';\r\n\r\nclass ServicesStore {\r\n  cache: CacheService;\r\n\r\n  constructor(cache: CacheService) {\r\n    this.cache = cache;\r\n  }\r\n}\r\n\r\nexport default ServicesStore;\r\n","export default class TypeEntry {\r\n  name!: string;\r\n  label?: string;\r\n  position = 0;\r\n  iconColor?: string;\r\n  icon?: string;\r\n}\r\n","import { Theme } from '@material-ui/core';\r\nimport { action, observable } from 'mobx';\r\nimport TypeEntry from '../models/entries/TypeEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass TypesStore {\r\n  @observable types!: TypeEntry[];\r\n  @observable typesLoaded = false;\r\n  @observable typeToSave?: TypeEntry;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.initializeDefaultTypes();\r\n  }\r\n\r\n  @action getTypeToSaveByName = (name: string) => {\r\n    this.typeToSave = {\r\n      ...(this.getTypeByName(name) || new TypeEntry()),\r\n    };\r\n  };\r\n\r\n  getTypeByName = (name: string) => {\r\n    return this.types.find((t) => t.name === name);\r\n  };\r\n\r\n  @action updateTypeToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.typeToSave, prop, newValue);\r\n  };\r\n\r\n  validateTypeToSave = () => {\r\n    let valid = true;\r\n    if (!this.typeToSave?.name) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.label) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.position) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedTypes = () => {\r\n    return this.types.sort((a, b) => {\r\n      if (a.position > b.position) {\r\n        return 1;\r\n      }\r\n      if (a.position < b.position) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveType = async (typeId: string) => {\r\n    const editType = this.types.find((t) => t.name === typeId);\r\n    if (editType) {\r\n      Object.keys(editType).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.typeToSave, k);\r\n        Helpers.setObjectValueByProp(editType, k, v);\r\n      });\r\n    } else {\r\n      this.types.push(this.typeToSave!);\r\n    }\r\n    this.types = this.getSortedTypes();\r\n    await this.cacheService.add('allTypes', this.types);\r\n  };\r\n\r\n  @action deleteType = async (typeId: string) => {\r\n    const type = this.types.find((t) => t.name === typeId);\r\n    if (type) {\r\n      const typeIndex = this.types.indexOf(type);\r\n      if (typeIndex > -1) {\r\n        this.types.splice(typeIndex, 1);\r\n        await this.cacheService.add('allTypes', this.types);\r\n      }\r\n    }\r\n  };\r\n\r\n  getColorInHex = (theme: Theme, color?: string) => {\r\n    if (color) {\r\n      if (color.indexOf('#') === 0) {\r\n        return color;\r\n      }\r\n      return Helpers.getObjectValueByProp(theme, color);\r\n    }\r\n    return '';\r\n  };\r\n\r\n  private initializeDefaultTypes = () => {\r\n    this.types = [];\r\n\r\n    this.cacheService\r\n      .get<TypeEntry>('allTypes', true)\r\n      .then((types: TypeEntry[]) => {\r\n        if (types) {\r\n          this.types = types;\r\n        } else {\r\n          this.types.push({\r\n            name: 'menuFood',\r\n            label: 'Еда',\r\n            position: 1,\r\n            iconColor: 'palette.secondary.dark',\r\n            icon: 'fastfood',\r\n          });\r\n\r\n          this.types.push({\r\n            name: 'menuStore',\r\n            label: 'Магазин',\r\n            position: 2,\r\n            iconColor: 'palette.success.dark',\r\n            icon: 'local_grocery_store',\r\n          });\r\n\r\n          this.types.push({\r\n            name: 'menuBus',\r\n            label: 'Автобус',\r\n            position: 3,\r\n            iconColor: 'palette.warning.dark',\r\n            icon: 'directions_bus',\r\n          });\r\n\r\n          this.types.push({\r\n            name: 'menuClothes',\r\n            label: 'Вещи',\r\n            position: 4,\r\n            iconColor: 'palette.primary.dark',\r\n            icon: 'local_mall',\r\n          });\r\n\r\n          this.types.push({\r\n            name: 'menuGasStation',\r\n            label: 'Заправка',\r\n            position: 5,\r\n            iconColor: 'palette.primary.light',\r\n            icon: 'local_gas_station',\r\n          });\r\n\r\n          this.types.push({\r\n            name: 'menuChilds',\r\n            label: 'Дети',\r\n            position: 6,\r\n            iconColor: 'palette.warning.light',\r\n            icon: 'child_friendly',\r\n          });\r\n\r\n          this.types.push({\r\n            name: 'menuServices',\r\n            label: 'Услуги',\r\n            position: 7,\r\n            iconColor: 'palette.secondary.light',\r\n            icon: 'important_devices',\r\n          });\r\n\r\n          this.types.push({\r\n            name: 'menuOther',\r\n            label: 'Другое',\r\n            position: 8,\r\n            iconColor: 'palette.success.light',\r\n            icon: 'more_vert',\r\n          });\r\n\r\n          this.types = this.getSortedTypes();\r\n          this.cacheService.add('allTypes', this.types);\r\n        }\r\n        this.typesLoaded = true;\r\n      });\r\n  };\r\n}\r\n\r\nexport default TypesStore;\r\n","import * as AllIcons from '@material-ui/icons';\r\nimport { action, observable, computed } from 'mobx';\r\nimport CacheService from '../services/CacheService';\r\nimport { IconTypesEnum } from '../models/Enum';\r\n\r\nclass IconsStore {\r\n  @observable iconsTypes: Map<IconTypesEnum, string>;\r\n  @observable filledIcons: string[] = [];\r\n  @observable outlinedIcons: string[] = [];\r\n  @observable roundedIcons: string[] = [];\r\n  @observable twoToneIcons: string[] = [];\r\n  @observable sharpIcons: string[] = [];\r\n  @observable iconsOnOnePage = 100;\r\n  @observable foundedIcons: string[] = [];\r\n  @observable foundedTotalCount = 0;\r\n\r\n  @computed get pagesCount() {\r\n    return Math.ceil(this.foundedTotalCount / this.iconsOnOnePage);\r\n  }\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n\r\n    this.iconsTypes = new Map();\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Filled,\r\n      IconTypesEnum[IconTypesEnum.Filled]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Outlined,\r\n      IconTypesEnum[IconTypesEnum.Outlined]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Rounded,\r\n      IconTypesEnum[IconTypesEnum.Rounded]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.TwoTone,\r\n      IconTypesEnum.TwoTone.toString()\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Sharp,\r\n      IconTypesEnum[IconTypesEnum.Sharp]\r\n    );\r\n\r\n    this.cacheService.get<any>('allIcons').then((allIcons) => {\r\n      if (!allIcons) {\r\n        Object.keys(AllIcons).forEach((k: string) => {\r\n          if (\r\n            k.indexOf(IconTypesEnum.Outlined) ===\r\n            k.length - IconTypesEnum.Outlined.length\r\n          ) {\r\n            this.outlinedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Rounded) ===\r\n            k.length - IconTypesEnum.Rounded.length\r\n          ) {\r\n            this.roundedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.TwoTone) ===\r\n            k.length - IconTypesEnum.TwoTone.length\r\n          ) {\r\n            this.twoToneIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Sharp) ===\r\n            k.length - IconTypesEnum.Sharp.length\r\n          ) {\r\n            this.sharpIcons.push(k);\r\n          } else {\r\n            this.filledIcons.push(k);\r\n          }\r\n        });\r\n        const allIconsForCache = {\r\n          outlinedIcons: this.outlinedIcons,\r\n          roundedIcons: this.roundedIcons,\r\n          twoToneIcons: this.twoToneIcons,\r\n          sharpIcons: this.sharpIcons,\r\n          filledIcons: this.filledIcons,\r\n        };\r\n        this.cacheService.add('allIcons', allIconsForCache);\r\n      } else {\r\n        this.filledIcons = allIcons.filledIcons;\r\n        this.outlinedIcons = allIcons.outlinedIcons;\r\n        this.roundedIcons = allIcons.roundedIcons;\r\n        this.twoToneIcons = allIcons.twoToneIcons;\r\n        this.sharpIcons = allIcons.sharpIcons;\r\n      }\r\n    });\r\n  }\r\n\r\n  @action searchIconsByFilterAndPage = (\r\n    filter: string,\r\n    types: IconTypesEnum[],\r\n    page: number\r\n  ) => {\r\n    let result: string[] = [];\r\n    const lowerCasedFilter = filter.toLowerCase();\r\n    types.forEach((type: IconTypesEnum) => {\r\n      let workingArray: string[] | null = null;\r\n      if (type === IconTypesEnum.Filled) {\r\n        workingArray = this.filledIcons;\r\n      } else if (type === IconTypesEnum.Outlined) {\r\n        workingArray = this.outlinedIcons;\r\n      } else if (type === IconTypesEnum.Rounded) {\r\n        workingArray = this.roundedIcons;\r\n      } else if (type === IconTypesEnum.TwoTone) {\r\n        workingArray = this.twoToneIcons;\r\n      } else if (type === IconTypesEnum.Sharp) {\r\n        workingArray = this.sharpIcons;\r\n      }\r\n      if (workingArray) {\r\n        result = result.concat(\r\n          workingArray.filter(\r\n            (i: string) => i.toLowerCase().indexOf(lowerCasedFilter) !== -1\r\n          )\r\n        );\r\n      }\r\n    });\r\n    this.foundedTotalCount = result.length;\r\n    this.foundedIcons = result.slice(\r\n      (page - 1) * this.iconsOnOnePage,\r\n      page * this.iconsOnOnePage\r\n    );\r\n  };\r\n\r\n  getIconRightStringNameForFontToShow = (iconName: string) => {\r\n    const result = iconName.split(/(?=[A-Z])/);\r\n    let resultStr = result?.map((r) => r.toLowerCase()).join('_');\r\n    const numberMatch = resultStr.match(/[0-9]+/);\r\n    if (numberMatch?.index) {\r\n      resultStr = `${resultStr.substring(\r\n        0,\r\n        numberMatch.index\r\n      )}_${resultStr.substring(numberMatch.index)}`;\r\n    }\r\n    return resultStr;\r\n  };\r\n}\r\n\r\nexport default IconsStore;\r\n","import { observable, action } from 'mobx';\r\n// import DateFnsUtils from '@date-io/date-fns';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport ICash from '../models/entries/ICash';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass CashStore {\r\n  @observable cashes: ICash[] = [];\r\n  @observable cashToSave?: ICash;\r\n  @observable cashesLoaded = false;\r\n\r\n  private cacheService: CacheService;\r\n  // private dateFns: DateFnsUtils;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.loadAllCashes();\r\n  }\r\n\r\n  @action getCashToSaveById = (id: string) => {\r\n    this.cashToSave = {\r\n      ...(this.cashes.find((t) => t.id === id) || ({} as ICash)),\r\n    };\r\n  };\r\n\r\n  @action updateTypeToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.cashToSave, prop, newValue);\r\n  };\r\n\r\n  validateCashToSave = () => {\r\n    let valid = true;\r\n    if (!this.cashToSave?.typeName) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.createdDate) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.total) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedCashes = () => {\r\n    return this.cashes.sort((a, b) => {\r\n      if (a.createdDate > b.createdDate) {\r\n        return -1;\r\n      }\r\n      if (a.createdDate < b.createdDate) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveCash = async (cashId: string) => {\r\n    const editCash = this.cashes.find((c) => c.id === cashId);\r\n    if (editCash) {\r\n      Object.keys(editCash).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.cashToSave, k);\r\n        Helpers.setObjectValueByProp(editCash, k, v);\r\n      });\r\n    } else {\r\n      this.cashToSave!.id = uuidv4();\r\n      this.cashes.push(this.cashToSave!);\r\n    }\r\n    this.cashes = this.getSortedCashes();\r\n    await this.cacheService.add('allCashes', this.cashes);\r\n    await this.loadAllCashes();\r\n  };\r\n\r\n  @action deleteCash = async (cashId: string) => {\r\n    const cash = this.cashes.find((c) => c.id === cashId);\r\n    if (cash) {\r\n      const typeIndex = this.cashes.indexOf(cash);\r\n      if (typeIndex > -1) {\r\n        this.cashes.splice(typeIndex, 1);\r\n        await this.cacheService.add('allCashes', this.cashes);\r\n      }\r\n    }\r\n  };\r\n\r\n  @action getCashesByPeriod = (dateFrom: Date, dateTo?: Date) => {\r\n    if (!dateTo) {\r\n      // eslint-disable-next-line no-param-reassign\r\n      dateTo = new Date();\r\n    }\r\n    console.log(dateFrom, dateTo);\r\n  };\r\n\r\n  private loadAllCashes = async () => {\r\n    this.cashes = [];\r\n    const cashes = await this.cacheService.get<ICash>('allCashes', true);\r\n    if (cashes) {\r\n      cashes.forEach((c: ICash) => {\r\n        // eslint-disable-next-line no-param-reassign\r\n        c.createdDate = new Date(c.createdDate);\r\n        this.cashes.push(c);\r\n      });\r\n      this.cashes = this.getSortedCashes();\r\n    }\r\n    this.cashesLoaded = true;\r\n  };\r\n\r\n  getCashesDistinctDates = (cashes: ICash[]) => {\r\n    const datesOfCashes = cashes.map((c) =>\r\n      c.createdDate\r\n        .toISOString()\r\n        .substring(0, c.createdDate.toISOString().indexOf('T'))\r\n    );\r\n    const result: string[] = [];\r\n    datesOfCashes.forEach((d) => {\r\n      if (!result.length || result[result.length - 1] !== d) {\r\n        result.push(d);\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getCashesStartedByDate = (cashes: ICash[], dateYYYYMMDD: string) => {\r\n    return cashes.filter((c) =>\r\n      c.createdDate.toISOString().startsWith(dateYYYYMMDD)\r\n    );\r\n  };\r\n}\r\n\r\nexport default CashStore;\r\n","import CacheService from '../services/CacheService';\r\nimport AppStore from './AppStore';\r\nimport ServicesStore from './ServicesStore';\r\nimport TypesStore from './TypesStore';\r\nimport IconsStore from './IconsStore';\r\nimport CashStore from './CashStore';\r\n\r\nconst appStore = new AppStore();\r\nconst cacheService = new CacheService(appStore);\r\nconst servicesStore = new ServicesStore(cacheService);\r\nappStore.services = servicesStore;\r\nconst cashStore = new CashStore(cacheService);\r\nconst typesStore = new TypesStore(cacheService);\r\nconst iconsStore = new IconsStore(cacheService);\r\n\r\nconst stores = {\r\n  appStore,\r\n  cashStore,\r\n  typesStore,\r\n  iconsStore,\r\n};\r\n\r\nexport default stores;\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport { Provider } from 'mobx-react';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport classes from './App.module.css';\r\nimport Body from './components/Body/Body';\r\nimport Menu from './components/Menu/Menu';\r\nimport store from './stores';\r\nimport * as AppSettings from '../package.json';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router basename={`/${AppSettings.name}`}>\r\n        <CssBaseline />\r\n        <div className={classes.page}>\r\n          <Menu />\r\n          <Body />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
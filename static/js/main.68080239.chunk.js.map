{"version":3,"sources":["components/IconsChooser/IconsChooser.module.css","components/CashPanel/CashPanel.module.css","components/RecordsPanel/RecordsPanel.module.css","components/TypeEditPanel/TypeEditPanel.module.css","components/CashEditPanel/CashEditPanel.module.css","components/Body/Body.module.css","components/CurrencyEditPanel/CurrencyEditPanel.module.css","components/FirstTimeShowPanel/FirstTimeShowPanel.module.css","components/Menu/Menu.module.css","components/ThemeCreator/ThemeCreator.module.css","stores/UseStores.ts","models/entries/TranslateEntry.ts","utility/Helpers.ts","models/Enum.ts","components/CashPanel/CashPanel.tsx","components/RecordsPanel/RecordsPanel.tsx","components/TypesPanel/TypesPanel.tsx","components/MenuPanel/MenuPanel.tsx","utility/UseDebounce.tsx","components/IconsChooser/IconsChooser.tsx","components/TypeEditPanel/TypeEditPanel.tsx","components/CashEditPanel/CashEditPanel.tsx","routes/Routes.ts","routes/RouteWithSubRoutes.tsx","components/SnackErrors/SnackErrors.tsx","components/CurrencyEditPanel/CurrencyEditPanel.tsx","components/FirstTimeShowPanel/FirstTimeShowPanel.tsx","components/Body/Body.tsx","components/LinkTab/LinkTab.tsx","components/Menu/Menu.tsx","components/ThemeCreator/ThemeCreator.tsx","services/CacheService.ts","stores/AppStore.ts","stores/ServicesStore.ts","models/entries/TypeEntry.ts","stores/TypesStore.ts","stores/IconsStore.ts","models/entries/CashEntry.ts","models/entries/CashPeriodFilterEntry.ts","stores/CashStore.ts","models/entries/LanguageEntry.ts","models/entries/CurrencyEntry.ts","models/entries/ErrorEntry.ts","stores/PropertiesStore.ts","stores/TranslatesStore.ts","stores/FormatsStore.ts","stores/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStores","useContext","MobXProviderContext","store","TranslateEntry","MainProperties","Language","LanguageIsRequired","Currency","CurrencyIsRequired","AddNewCurrency","Save","LanguageSelectionIsRequired","CurrencySelectionIsRequired","NewCurrency","Name","NameIsRequiredForExampleUSD","Symbol","SymbolIsRequiredForExample$","CurrencyNameIsRequired","CurrencySymbolIsRequired","CurrencyWithThisNameIsAlreadyExists","AddPayment","RecordsN","Types","More","PaymentEdit","PaymentNew","PaymentType","PaymentTypeIsRequired","Date","Time","Description","PaymentTotal","PaymentTotalIsRequired","NoDataFoundForTheSelectedPeriod","Total","TypeEdit","TypeNew","IDIsRequired","NameIsRequired","PositionInTheList","PositionInTheListIsRequired","IconColor","Icon","SelectTheColorOfTheIcon","Select","Cancel","SelectIcon","IconsTypes","EnterToSearch","MatchingResultsN","Helpers","combineStyles","result","styles","length","otherStyles","slice","forEach","s","Object","keys","k","getObjectValueByProp","obj","prop","splittedProps","split","splice","join","setObjectValueByProp","value","getDateFromString","date","getTranslateByLanguage","language","require","formatString","i","replace","MenuTypesEnum","IconTypesEnum","LanguagesEnum","PeriodTypeEnum","useStyles","makeStyles","theme","createStyles","tabPanel","gridGap","spacing","cardLabelText","marginTop","color","palette","text","primary","CashPanel","observer","typesStore","css","classes","useTheme","getThemeColorStyle","p","history","useHistory","buttonAddNewCashClick","event","typeId","currentTarget","dataset","push","Cash","Grid","container","className","grid","typesLoaded","types","map","type","key","name","item","xs","alignItems","justify","IconButton","card","label","cardLabel","onClick","data-type-id","style","iconColor","fontSize","cardIcon","icon","Typography","variant","root","padding","stickyHeader","background","default","lineHeight","paddingLeft","paddingRight","paddingTop","paddingBottom","borderBottom","main","stickyHeaderText","dark","cashItem","marginBottom","light","display","gridColumnGap","total","textAlign","totalCell","RecordsPanel","cashStore","propertiesStore","translatesStore","formatsStore","translate","buttonCashClick","cashId","cashesByPeriod","getCashesByPeriod","cashes","cashesDates","getCashesDistinctDates","noData","totalValue","sum","c","numberWithDigits","format","getTotalSum","defaultCurrency","symbol","List","listRoot","subheader","d","listSection","cashesUl","ListSubheader","dateFns","getCashesStartedByDate","cash","getTypeByName","typeName","ListItem","id","button","data-cash-id","getColorInHex","createdDate","getCurrencyByName","currency","description","desctiptionCell","TypesPanel","typeClick","component","list","data-id","ListItemAvatar","ListItemText","primaryTypographyProps","Divider","MenuPanel","useDebounce","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchInput","typesSelectChips","marginRight","typesSelectChip","foundedTotalCount","foundedIconsContainer","foundedIconsIconFont","selectedIcon","secondary","pagination","IconsChooser","props","iconsStore","iconsButtonsContainerRef","React","useRef","Filled","typeValue","setTypeValue","filter","setFilter","page","setPage","debouncedSearchFilter","debouncedSearchTypeValue","debouncedSearchPage","current","scrollTop","searchIconsByFilterAndPage","setSelectedIcon","onIconClick","iconRightName","querySelectorAll","innerText","selectedIconChanged","FormControl","typeSelect","fullWidth","InputLabel","labelId","multiple","onChange","newValue","target","input","Input","renderValue","selected","Chip","Array","from","iconsTypes","MenuItem","Checkbox","checked","indexOf","get","placeholder","newFilter","onKeyUp","keyCode","blur","startAdornment","InputAdornment","position","ref","foundedIcons","getIconRightStringNameForFontToShow","foundedIconsButton","pagesCount","Pagination","count","size","newPage","modalContainer","zIndex","modal","paper","firstBar","secondBar","toolbarIcon","body","colorAndIconContainer","colorDialogBox","colorDialogHeader","minHeight","mixins","toolbar","colorDialogBody","colorDialogFooter","iconDialogHeader","iconDialogBody","iconDialogFooter","TypeEditPanel","setTypeId","setColor","colorPickerOpened","setColorPickerOpened","setIcon","iconPickerOpened","setIconPickerOpened","match","params","getTypeToSaveByName","typeToSave","deleteType","a","saveEdit","validateTypeToSave","saveType","changeTypeField","propName","updateTypeToSaveByProp","getAppliedColor","colorHandleClose","iconHandleClose","Fade","in","timeout","Slide","direction","mountOnEnter","unmountOnExit","AppBar","Toolbar","Box","emptyBox","TextField","error","disabled","inputProps","helperText","onFocus","select","dialogSelect","SelectProps","InputProps","Dialog","open","fullScreen","Paper","pickerProps","hex","Button","iconDialogBox","newIcon","selectTypeIcon","totalInput","currencySelect","CashEditPanel","setCashId","cashCurrency","setCashCurrency","enPickerLocale","pickerLocale","setPickerLocale","currentLanguage","English","Hebrew","hePickerLocale","Russian","ruPickerLocale","rtl","cashesLoaded","getCashToSaveById","cashToSave","updateCashToSaveByProp","deleteCash","Records","validateCashToSave","saveCash","pickerDateChange","totalInputRef","updateCashCurrency","submitOnEnterKeyUp","selectedTypeId","dialogSelectBox","locale","utils","DateFnsUtils","datesGrid","margin","okLabel","cancelLabel","DialogProps","pickersRtl","descriptionInput","console","log","focus","totalContainer","inputRef","parseFloat","currencies","routes","path","exact","components","Menu","RouteWithSubRoutes","route","render","isArray","Component","index","errors","SnackErrors","openSnack","setOpenSnack","closeHandle","onClose","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","e","action","currencySymbolField","CurrencyEditPanel","currencyId","currencyName","setCurrencyName","currencySymbol","setCurrencySymbol","openErrors","setOpenErrors","saveErrors","setSaveErrors","addNewCurrency","saveResult","success","onSaveEdit","onCancelEdit","currenciesContainer","currenciesSelect","addCurrencyButton","marginLeft","footer","FirstTimeShowPanel","setLanguage","setCurrency","addNewCurrencyOpened","setAddNewCurrencyOpened","buttonSaveProperties","saveFirstTimeOptions","loadTypes","loadTranslate","languages","l","title","selectedNewCurrencyName","fab","bottom","right","Body","appStore","selectedMenuUrl","to","prefix","getAddButtonLinkUrl","Fab","aria-label","firstTimeOptionsSelected","LinkTab","Tab","Link","currentUrl","pathname","preventDefault","menuIcon","contrastText","comboButton","textTransform","searchIcon","loadSelectedMenuIndex","location","listener","listen","menuTabProps","href","selectedMenuIndex","headerTitle","headerBox","endIcon","ArrowDropDown","comboButtonTextBox","cashPeriodFilter","Search","Tabs","setSelectedMenuIndex","AttachMoney","MenuBook","MoreHoriz","jss","create","plugins","jssPreset","ThemeCreator","createMuiTheme","setTheme","document","setThemeLoaded","StylesProvider","CssBaseline","themeLoaded","ThemeProvider","basename","AppSettings","CacheService","this","String","then","r","version","clear","add","window","reload","entry","entryStr","JSON","stringify","localStorage","setItem","TCreator","validAt","enableCache","getItem","parsedResult","parse","arrayResult","parsedEntry","plainToClass","AppStore","AppJson","services","observable","url","urlParts","ServicesStore","cache","TypeEntry","system","TypesStore","cacheService","find","t","valid","getSortedTypes","sort","b","editType","v","typeIndex","IconsStore","iconName","resultStr","toLowerCase","numberMatch","substring","Map","set","Outlined","Rounded","TwoTone","toString","Sharp","allIcons","filledIcons","outlinedIcons","roundedIcons","twoToneIcons","sharpIcons","AllIcons","allIconsForCache","Math","ceil","iconsOnOnePage","computed","lowerCasedFilter","workingArray","concat","CashEntry","Type","CashPeriodFilterEntry","initializeByType","Custom","undefined","now","Daily","getFullYear","getMonth","getDate","Weekly","addDays","Monthly","Year","reinitializeByType","CashStore","getSortedCashes","loadAllCashes","loadCashPeriodFilter","datesOfCashes","toISOString","dateYYYYMMDD","startsWith","editCash","uuidv4","LanguageEntry","CurrencyEntry","ErrorEntry","PropertiesStore","fillLanguages","loadCurrentLanguage","loadCurrencies","Boolean","enLocale","languageName","localeChanged","heLocale","ruLocale","addError","some","changeLanguage","changeCurrency","loaded","TranslatesStore","FormatsStore","Intl","NumberFormat","servicesStore","stores","App","hostname","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch"],"mappings":"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","file":"static/js/main.68080239.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typesSelectChips\":\"IconsChooser_typesSelectChips__rNRQf\",\"foundedIconsContainer\":\"IconsChooser_foundedIconsContainer__9eTT8\",\"foundedIconsButton\":\"IconsChooser_foundedIconsButton__3wU-W\",\"pagination\":\"IconsChooser_pagination__1dXi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CashPanel_grid__1M0h2\",\"card\":\"CashPanel_card__2ETq-\",\"cardLabel\":\"CashPanel_cardLabel__3f2v_\",\"lastCard\":\"CashPanel_lastCard__2tePY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"RecordsPanel_root__2BXAY\",\"noData\":\"RecordsPanel_noData__1iBIH\",\"listRoot\":\"RecordsPanel_listRoot__2cJAW\",\"cashesUl\":\"RecordsPanel_cashesUl__3kagc\",\"cashItem\":\"RecordsPanel_cashItem__1OmpH\",\"desctiptionCell\":\"RecordsPanel_desctiptionCell__3udrE\",\"totalValue\":\"RecordsPanel_totalValue__30E6I\",\"totalCell\":\"RecordsPanel_totalCell__1FQFY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"TypeEditPanel_modalContainer__o8c64\",\"emptyBox\":\"TypeEditPanel_emptyBox__2akL7\",\"body\":\"TypeEditPanel_body__2pBnt\",\"colorAndIconContainer\":\"TypeEditPanel_colorAndIconContainer__35IGH\",\"dialogSelect\":\"TypeEditPanel_dialogSelect__2KpQS\",\"colorDialogBox\":\"TypeEditPanel_colorDialogBox__mLPjz\",\"iconDialogBox\":\"TypeEditPanel_iconDialogBox__j1WSI\",\"colorDialogHeader\":\"TypeEditPanel_colorDialogHeader__2qD8B\",\"iconDialogHeader\":\"TypeEditPanel_iconDialogHeader__2Q3n4\",\"colorDialogBody\":\"TypeEditPanel_colorDialogBody__285q0\",\"iconDialogBody\":\"TypeEditPanel_iconDialogBody__nr6zd\",\"colorDialogFooter\":\"TypeEditPanel_colorDialogFooter__2ZN7j\",\"iconDialogFooter\":\"TypeEditPanel_iconDialogFooter__3L6_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"CashEditPanel_modalContainer__3HV8D\",\"emptyBox\":\"CashEditPanel_emptyBox__Oe2ld\",\"body\":\"CashEditPanel_body__1Wrp-\",\"dialogSelectBox\":\"CashEditPanel_dialogSelectBox__2sII0\",\"datesGrid\":\"CashEditPanel_datesGrid__MiAud\",\"pickersRtl\":\"CashEditPanel_pickersRtl__2zEt4\",\"totalContainer\":\"CashEditPanel_totalContainer__3fMHG\",\"descriptionInput\":\"CashEditPanel_descriptionInput__3z4uu\",\"currencySelect\":\"CashEditPanel_currencySelect__2woQ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__2G_GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"CurrencyEditPanel_modalContainer__2FuyW\",\"emptyBox\":\"CurrencyEditPanel_emptyBox__2wvgQ\",\"body\":\"CurrencyEditPanel_body__3xbws\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"FirstTimeShowPanel_modalContainer__1T54k\",\"body\":\"FirstTimeShowPanel_body__35A_R\",\"currenciesContainer\":\"FirstTimeShowPanel_currenciesContainer__3gQgL\",\"currenciesSelect\":\"FirstTimeShowPanel_currenciesSelect__ZmVZt\",\"addCurrencyButton\":\"FirstTimeShowPanel_addCurrencyButton__-wJDk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBox\":\"Menu_headerBox__1Me5e\",\"headerTitle\":\"Menu_headerTitle__2LUUc\",\"comboButton\":\"Menu_comboButton__OoKdQ\",\"comboButtonTextBox\":\"Menu_comboButtonTextBox__1axJS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"ThemeCreator_page__1dUxF\"};","import { MobXProviderContext } from 'mobx-react';\r\nimport { useContext } from 'react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext).store;\r\n};\r\nexport default useStores;\r\n","export default class TranslateEntry {\r\n  MainProperties!: string;\r\n  Language!: string;\r\n  LanguageIsRequired!: string;\r\n  Currency!: string;\r\n  CurrencyIsRequired!: string;\r\n  AddNewCurrency!: string;\r\n  Save!: string;\r\n  LanguageSelectionIsRequired!: string;\r\n  CurrencySelectionIsRequired!: string;\r\n  NewCurrency!: string;\r\n  Name!: string;\r\n  NameIsRequiredForExampleUSD!: string;\r\n  Symbol!: string;\r\n  SymbolIsRequiredForExample$!: string;\r\n  CurrencyNameIsRequired!: string;\r\n  CurrencySymbolIsRequired!: string;\r\n  CurrencyWithThisNameIsAlreadyExists!: string;\r\n  AddPayment!: string;\r\n  RecordsN!: string;\r\n  Types!: string;\r\n  More!: string;\r\n  PaymentEdit!: string;\r\n  PaymentNew!: string;\r\n  PaymentType!: string;\r\n  PaymentTypeIsRequired!: string;\r\n  Date!: string;\r\n  Time!: string;\r\n  Description!: string;\r\n  PaymentTotal!: string;\r\n  PaymentTotalIsRequired!: string;\r\n  NoDataFoundForTheSelectedPeriod!: string;\r\n  Total!: string;\r\n  TypeEdit!: string;\r\n  TypeNew!: string;\r\n  IDIsRequired!: string;\r\n  NameIsRequired!: string;\r\n  PositionInTheList!: string;\r\n  PositionInTheListIsRequired!: string;\r\n  IconColor!: string;\r\n  Icon!: string;\r\n  SelectTheColorOfTheIcon!: string;\r\n  Select!: string;\r\n  Cancel!: string;\r\n  SelectIcon!: string;\r\n  IconsTypes!: string;\r\n  EnterToSearch!: string;\r\n  MatchingResultsN!: string;\r\n}\r\n","import TranslateEntry from '../models/entries/TranslateEntry';\r\n\r\nclass Helpers {\r\n  static combineStyles = (...styles: any) => {\r\n    let result: any;\r\n    if (styles.length) {\r\n      result = { ...styles[0] };\r\n      const otherStyles = styles.slice(1);\r\n      if (otherStyles.length) {\r\n        otherStyles.forEach((s: any) => {\r\n          Object.keys(s).forEach((k: string) => {\r\n            if (!result[k]) {\r\n              result[k] = s[k];\r\n            } else {\r\n              result[k] += ` ${s[k]}`;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n\r\n  static getObjectValueByProp = (obj: any, prop: string): any => {\r\n    const splittedProps = prop.split('.');\r\n    if (splittedProps.length > 1) {\r\n      return Helpers.getObjectValueByProp(\r\n        obj[splittedProps[0]],\r\n        splittedProps.splice(1).join('.')\r\n      );\r\n    }\r\n    return obj[splittedProps[0]];\r\n  };\r\n\r\n  static setObjectValueByProp = (obj: any, prop: string, value: any) => {\r\n    // eslint-disable-next-line no-param-reassign\r\n    obj[prop] = value;\r\n  };\r\n\r\n  static getDateFromString = (date: Date | string) => {\r\n    if (typeof date === 'string') {\r\n      // eslint-disable-next-line no-param-reassign\r\n      date = new Date(date);\r\n    }\r\n    return date;\r\n  };\r\n\r\n  static getTranslateByLanguage = (language: string) => {\r\n    let result: TranslateEntry;\r\n    if (language === 'en-US') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.json');\r\n    } else if (language === 'he-IL') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.he.json');\r\n    } else if (language === 'ru-RU') {\r\n      // eslint-disable-next-line global-require\r\n      result = require('../translates/index.ru.json');\r\n    } else {\r\n      result = new TranslateEntry();\r\n    }\r\n    return result;\r\n  };\r\n\r\n  static formatString = (value: string, ...args: any[]) => {\r\n    if (args.length) {\r\n      for (let i = 0; i < args.length; i += 1) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        value = value.replace(`{${i}}`, args[i]);\r\n      }\r\n    }\r\n    return value;\r\n  };\r\n}\r\n\r\nexport default Helpers;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport enum MenuTypesEnum {\r\n  Cash = 'cash',\r\n  Records = 'records',\r\n  Types = 'types',\r\n  Menu = 'menu',\r\n}\r\n\r\nexport enum IconTypesEnum {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  Rounded = 'Rounded',\r\n  TwoTone = 'Two tone',\r\n  Sharp = 'Sharp',\r\n}\r\n\r\nexport enum LanguagesEnum {\r\n  English = 'en-US',\r\n  Hebrew = 'he-IL',\r\n  Russian = 'ru-RU',\r\n}\r\n\r\nexport enum PeriodTypeEnum {\r\n  Custom = 1,\r\n  Daily = 2,\r\n  Weekly = 3,\r\n  Monthly = 4,\r\n  Year = 5,\r\n}\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabPanel: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CashPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const history = useHistory();\r\n\r\n  const buttonAddNewCashClick = (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    const { typeId } = event.currentTarget.dataset;\r\n    history.push(`/${MenuTypesEnum.Cash}/add/${typeId}`);\r\n  };\r\n\r\n  return (\r\n    <Grid container className={css.grid} spacing={2}>\r\n      {typesStore.typesLoaded &&\r\n        typesStore.types.map((type: TypeEntry) => (\r\n          <Grid\r\n            key={type.name}\r\n            item\r\n            xs\r\n            container\r\n            alignItems=\"center\"\r\n            justify=\"center\"\r\n          >\r\n            <IconButton\r\n              className={css.card}\r\n              classes={{ label: css.cardLabel }}\r\n              onClick={buttonAddNewCashClick}\r\n              data-type-id={type.name}\r\n            >\r\n              <Icon\r\n                style={{\r\n                  color: getThemeColorStyle(type.iconColor),\r\n                  fontSize: '2rem',\r\n                }}\r\n                className={css.cardIcon}\r\n              >\r\n                {type.icon}\r\n              </Icon>\r\n              <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n                {type.label}\r\n              </Typography>\r\n            </IconButton>\r\n          </Grid>\r\n        ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CashPanel;\r\n","import {\r\n  createStyles,\r\n  Icon,\r\n  List,\r\n  ListItem,\r\n  ListSubheader,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport CashEntry from '../../models/entries/CashEntry';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport CashStore from '../../stores/CashStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport * as classes from './RecordsPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport FormatsStore from '../../stores/FormatsStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    root: {\r\n      padding: 0,\r\n    },\r\n    stickyHeader: {\r\n      background: theme.palette.background.default,\r\n      lineHeight: 'normal',\r\n      paddingLeft: 0,\r\n      paddingRight: 0,\r\n      paddingTop: theme.spacing(1) + 2,\r\n      paddingBottom: theme.spacing(1) + 2,\r\n      borderBottom: `2px solid ${theme.palette.primary.main}`,\r\n    },\r\n    stickyHeaderText: {\r\n      paddingBottom: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n      borderBottom: `3px solid ${theme.palette.primary.dark}`,\r\n    },\r\n    cashItem: {\r\n      '&:last-child': {\r\n        marginBottom: theme.spacing(2),\r\n      },\r\n      padding: 0,\r\n      paddingTop: theme.spacing(2),\r\n      paddingBottom: theme.spacing(2),\r\n      borderBottom: `1px solid ${theme.palette.primary.light}`,\r\n      display: 'grid',\r\n      gridColumnGap: theme.spacing(1),\r\n    },\r\n    total: {\r\n      textAlign: 'right',\r\n    },\r\n    totalCell: {\r\n      textAlign: 'right',\r\n    },\r\n  })\r\n);\r\n\r\nconst RecordsPanel = observer(() => {\r\n  const {\r\n    cashStore,\r\n    typesStore,\r\n    propertiesStore,\r\n    translatesStore,\r\n    formatsStore,\r\n  }: {\r\n    cashStore: CashStore;\r\n    typesStore: TypesStore;\r\n    propertiesStore: PropertiesStore;\r\n    translatesStore: TranslatesStore;\r\n    formatsStore: FormatsStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n  const history = useHistory();\r\n\r\n  const getFormattedDate = (date: Date) => {\r\n    return propertiesStore.dateFns.format(date, 'd MMMM, EEEE');\r\n  };\r\n\r\n  const getIconColor = (color?: string) => {\r\n    return typesStore.getColorInHex(theme, color);\r\n  };\r\n\r\n  const buttonCashClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const { cashId } = event.currentTarget.dataset;\r\n    history.push(`/${MenuTypesEnum.Cash}/edit/${cashId}`);\r\n  };\r\n\r\n  const cashesByPeriod = cashStore.getCashesByPeriod(cashStore.cashes);\r\n  const cashesDates = cashStore.getCashesDistinctDates(cashStore.cashes);\r\n\r\n  const getTotalSum = () => {\r\n    let sum = 0;\r\n    cashesByPeriod\r\n      .map((c) => c.total)\r\n      .forEach((total) => {\r\n        sum += total;\r\n      });\r\n    return formatsStore.numberWithDigits.format(sum);\r\n  };\r\n\r\n  return (\r\n    <div className={css.root}>\r\n      {!cashesDates.length && (\r\n        <Typography variant=\"subtitle1\" className={css.noData}>\r\n          {translate.NoDataFoundForTheSelectedPeriod}\r\n        </Typography>\r\n      )}\r\n      <Typography variant=\"subtitle1\" className={css.total}>\r\n        <span>{translate.Total}: </span>\r\n        <span className={css.totalValue}>\r\n          {getTotalSum()} {propertiesStore.defaultCurrency?.symbol}\r\n        </span>\r\n      </Typography>\r\n      <List className={css.listRoot} subheader={<li />}>\r\n        {cashesDates.map((d: string) => (\r\n          <li key={`section-${d}`} className={css.listSection}>\r\n            <ul className={css.cashesUl}>\r\n              <ListSubheader className={css.stickyHeader}>\r\n                <span className={css.stickyHeaderText}>\r\n                  {getFormattedDate(Helpers.getDateFromString(d))}\r\n                </span>\r\n              </ListSubheader>\r\n              {cashStore\r\n                .getCashesStartedByDate(cashesByPeriod, d)\r\n                .map((cash: CashEntry) => {\r\n                  const type = typesStore.getTypeByName(cash.typeName);\r\n                  return (\r\n                    <ListItem\r\n                      key={cash.id}\r\n                      className={css.cashItem}\r\n                      button\r\n                      onClick={buttonCashClick}\r\n                      data-cash-id={cash.id}\r\n                    >\r\n                      <Icon style={{ color: getIconColor(type?.iconColor) }}>\r\n                        {type?.icon}\r\n                      </Icon>\r\n                      <Typography variant=\"body1\">{type?.label}</Typography>\r\n                      <Typography variant=\"body2\">\r\n                        {propertiesStore.dateFns.format(\r\n                          cash.createdDate,\r\n                          'HH:mm'\r\n                        )}\r\n                      </Typography>\r\n                      <Typography variant=\"body1\" className={css.totalCell}>\r\n                        {cash.total}{' '}\r\n                        {\r\n                          propertiesStore.getCurrencyByName(cash.currency)\r\n                            .symbol\r\n                        }\r\n                      </Typography>\r\n                      {cash.description && (\r\n                        <Typography className={css.desctiptionCell}>\r\n                          {cash.description}\r\n                        </Typography>\r\n                      )}\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n            </ul>\r\n          </li>\r\n        ))}\r\n      </List>\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default RecordsPanel;\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  useTheme,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypesPanel.module.css';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst TypesPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  const css = Helpers.combineStyles({}, classes);\r\n  const theme = useTheme();\r\n\r\n  const history = useHistory();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  const typeClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n    const typeName = event.currentTarget.dataset.id;\r\n    history.push(`/${MenuTypesEnum.Types}/edit/${typeName}`);\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={css.list}>\r\n      {typesStore.typesLoaded &&\r\n        typesStore.types.map((type: TypeEntry) => (\r\n          <div key={type.name}>\r\n            <ListItem button onClick={typeClick} data-id={type.name}>\r\n              <ListItemAvatar>\r\n                <Icon\r\n                  style={{\r\n                    color: getThemeColorStyle(type.iconColor),\r\n                    fontSize: '2rem',\r\n                  }}\r\n                >\r\n                  {type.icon}\r\n                </Icon>\r\n              </ListItemAvatar>\r\n              <ListItemText\r\n                primary={type.label}\r\n                primaryTypographyProps={{ variant: 'subtitle1' }}\r\n              />\r\n            </ListItem>\r\n            <Divider component=\"div\" />\r\n          </div>\r\n        ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default TypesPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst MenuPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <></>;\r\n});\r\n\r\nexport default MenuPanel;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  createStyles,\r\n  FormControl,\r\n  Icon,\r\n  IconButton,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { IconTypesEnum } from '../../models/Enum';\r\nimport IconsStore from '../../stores/IconsStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport useDebounce from '../../utility/UseDebounce';\r\nimport classes from './IconsChooser.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchInput: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    typesSelectChips: {\r\n      marginTop: -theme.spacing(1),\r\n      marginRight: -theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    typesSelectChip: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    foundedTotalCount: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsIconFont: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    selectedIcon: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    pagination: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  selectedIcon?: string;\r\n  selectedIconChanged?: (newIcon: string) => void;\r\n}\r\n\r\nconst IconsChooser = observer((props: IProps) => {\r\n  const {\r\n    iconsStore,\r\n    translatesStore,\r\n  }: { iconsStore: IconsStore; translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const iconsButtonsContainerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [typeValue, setTypeValue] = React.useState([IconTypesEnum.Filled]);\r\n  const [filter, setFilter] = React.useState('');\r\n  const [page, setPage] = React.useState(1);\r\n  const onTypeValueChange = (newValue: any) => {\r\n    setPage(1);\r\n    setTypeValue(newValue.target.value);\r\n  };\r\n  const onTypeRenderValue = (selected: any) => {\r\n    return (\r\n      <div className={css.typesSelectChips}>\r\n        {(selected as string[]).map((value) => (\r\n          <Chip key={value} label={value} className={css.typesSelectChip} />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  const searchIcons = () => {\r\n    if (iconsButtonsContainerRef.current) {\r\n      iconsButtonsContainerRef.current.scrollTop = 0;\r\n    }\r\n    iconsStore.searchIconsByFilterAndPage(filter, typeValue, page);\r\n  };\r\n  const debouncedSearchFilter = useDebounce(filter, 500);\r\n  const debouncedSearchTypeValue = useDebounce(typeValue, 500);\r\n  const debouncedSearchPage = useDebounce(page, 500);\r\n  const filterChanged = (newFilter: any) => {\r\n    setPage(1);\r\n    setFilter(newFilter.target.value);\r\n  };\r\n  const filterKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      event.currentTarget.blur();\r\n    }\r\n  };\r\n  const onPageChange = (event: any, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n  React.useEffect(searchIcons, [\r\n    debouncedSearchFilter,\r\n    debouncedSearchTypeValue,\r\n    debouncedSearchPage,\r\n  ]);\r\n\r\n  const [selectedIcon, setSelectedIcon] = React.useState('');\r\n  const onIconClick = (icon: any) => {\r\n    let iconRightName = icon.currentTarget.querySelectorAll(\r\n      '.material-icons'\r\n    )[0].innerText;\r\n    // Check if icon is already selected and unselect it\r\n    if (selectedIcon === iconRightName) {\r\n      iconRightName = '';\r\n    }\r\n    setSelectedIcon(iconRightName);\r\n    if (props.selectedIconChanged) {\r\n      props.selectedIconChanged(iconRightName);\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    setSelectedIcon(props.selectedIcon || '');\r\n  }, [props.selectedIcon]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.typeSelect} fullWidth>\r\n        <InputLabel id=\"types-select-label\">{translate.IconsTypes}</InputLabel>\r\n        <Select\r\n          labelId=\"types-select-label\"\r\n          multiple\r\n          fullWidth\r\n          value={typeValue}\r\n          onChange={onTypeValueChange}\r\n          input={<Input />}\r\n          renderValue={onTypeRenderValue}\r\n        >\r\n          {Array.from(iconsStore.iconsTypes.keys()).map((k: IconTypesEnum) => (\r\n            <MenuItem key={k} value={k}>\r\n              <Checkbox checked={typeValue.indexOf(k) > -1} />\r\n              <ListItemText primary={iconsStore.iconsTypes.get(k)} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Input\r\n        fullWidth\r\n        placeholder={translate.EnterToSearch}\r\n        value={filter}\r\n        onChange={filterChanged}\r\n        onKeyUp={filterKeyUp}\r\n        className={css.searchInput}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <Icon>search</Icon>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      <div className={css.foundedTotalCount}>\r\n        <Typography variant=\"caption\">\r\n          {Helpers.formatString(\r\n            translate.MatchingResultsN,\r\n            iconsStore.foundedTotalCount\r\n          )}\r\n        </Typography>\r\n      </div>\r\n      <div ref={iconsButtonsContainerRef} className={css.foundedIconsContainer}>\r\n        {iconsStore.foundedIcons.map((icon: string) => {\r\n          const iconRightName = iconsStore.getIconRightStringNameForFontToShow(\r\n            icon\r\n          );\r\n          return (\r\n            <IconButton\r\n              key={icon}\r\n              onClick={onIconClick}\r\n              className={css.foundedIconsButton}\r\n            >\r\n              <Icon\r\n                className={\r\n                  css.foundedIconsIconFont +\r\n                  (iconRightName === selectedIcon ? ` ${css.selectedIcon}` : '')\r\n                }\r\n              >\r\n                {iconRightName}\r\n              </Icon>\r\n            </IconButton>\r\n          );\r\n        })}\r\n      </div>\r\n      {iconsStore.pagesCount > 0 && (\r\n        <Pagination\r\n          className={css.pagination}\r\n          count={iconsStore.pagesCount}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          page={page}\r\n          onChange={onPageChange}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default IconsChooser;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  Dialog,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport IconsChooser from '../IconsChooser/IconsChooser';\r\nimport classes from './TypeEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorAndIconContainer: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    colorDialogBox: {\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    colorDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    colorDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    iconDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    iconDialogBody: {\r\n      padding: theme.spacing(2),\r\n      paddingBottom: 0,\r\n    },\r\n    iconDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst TypeEditPanel = observer((props: IProps) => {\r\n  const {\r\n    typesStore,\r\n    translatesStore,\r\n  }: { typesStore: TypesStore; translatesStore: TranslatesStore } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [typeId, setTypeId] = React.useState('');\r\n  const [color, setColor] = React.useState('');\r\n  const [colorPickerOpened, setColorPickerOpened] = React.useState(false);\r\n  const [icon, setIcon] = React.useState('');\r\n  const [iconPickerOpened, setIconPickerOpened] = React.useState(false);\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setTypeId(props.match.params?.id);\r\n    if (typesStore.typesLoaded) {\r\n      typesStore.getTypeToSaveByName(typeId);\r\n      setColor(typesStore.typeToSave?.iconColor || '');\r\n    }\r\n  }, [props.match.params, typeId, typesStore, typesStore.typesLoaded]);\r\n\r\n  const deleteType = async () => {\r\n    await typesStore.deleteType(typeId);\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    history.push(`/${MenuTypesEnum.Types}`);\r\n  };\r\n  const saveEdit = async () => {\r\n    if (typesStore.validateTypeToSave()) {\r\n      await typesStore.saveType(typeId);\r\n      history.push(`/${MenuTypesEnum.Types}`);\r\n    }\r\n  };\r\n\r\n  const changeTypeField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.currentTarget.value;\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    typesStore.updateTypeToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const positionFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const getAppliedColor = () => {\r\n    return typesStore.getColorInHex(theme, typesStore.typeToSave?.iconColor);\r\n  };\r\n\r\n  const colorHandleOpen = () => {\r\n    setColorPickerOpened(true);\r\n  };\r\n  const colorHandleClose = () => {\r\n    setColorPickerOpened(false);\r\n  };\r\n  const pickerColorChange = (pickerProps: any) => {\r\n    setColor(pickerProps.hex);\r\n  };\r\n  const buttonApplyColorSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('iconColor', color);\r\n    colorHandleClose();\r\n  };\r\n  const buttonCancelColorSelect = () => {\r\n    setColor(getAppliedColor());\r\n    colorHandleClose();\r\n  };\r\n\r\n  const iconHandleOpen = () => {\r\n    setIconPickerOpened(true);\r\n  };\r\n  const iconHandleClose = () => {\r\n    setIconPickerOpened(false);\r\n  };\r\n  const iconChange = (newIcon: string) => {\r\n    setIcon(newIcon);\r\n  };\r\n  const buttonApplyIconSelect = () => {\r\n    typesStore.updateTypeToSaveByProp('icon', icon);\r\n    iconHandleClose();\r\n  };\r\n  const buttonCancelIconSelect = () => {\r\n    setIcon(typesStore.typeToSave?.icon || '');\r\n    iconHandleClose();\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {typeId ? translate.TypeEdit : translate.TypeNew}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {typeId && (\r\n                <IconButton onClick={deleteType}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!typesStore.typeToSave?.name}\r\n              fullWidth\r\n              label=\"ID\"\r\n              disabled={!!typeId}\r\n              value={typesStore.typeToSave?.name || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'name' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.name ? translate.IDIsRequired : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={!typesStore.typeToSave?.label}\r\n              fullWidth\r\n              label={translate.Name}\r\n              value={typesStore.typeToSave?.label || ''}\r\n              onChange={changeTypeField}\r\n              inputProps={{ 'data-prop-name': 'label' }}\r\n              helperText={\r\n                !typesStore.typeToSave?.label ? translate.NameIsRequired : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n              }\r\n              fullWidth\r\n              label={translate.PositionInTheList}\r\n              value={\r\n                typesStore.typeToSave?.position ||\r\n                typesStore.typeToSave?.position === 0\r\n                  ? typesStore.typeToSave?.position\r\n                  : ''\r\n              }\r\n              onChange={changeTypeField}\r\n              type=\"number\"\r\n              inputProps={{ 'data-prop-name': 'position' }}\r\n              onFocus={positionFieldFocus}\r\n              helperText={\r\n                !typesStore.typeToSave?.position &&\r\n                typesStore.typeToSave?.position !== 0\r\n                  ? translate.PositionInTheListIsRequired\r\n                  : ''\r\n              }\r\n            />\r\n            <div className={css.colorAndIconContainer}>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label={translate.IconColor}\r\n                className={css.dialogSelect}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                InputProps={{\r\n                  startAdornment: (\r\n                    <InputAdornment position=\"start\">\r\n                      <Icon>stop</Icon>\r\n                    </InputAdornment>\r\n                  ),\r\n                }}\r\n                value={0}\r\n                onClick={colorHandleOpen}\r\n              >\r\n                <MenuItem value={0}>{getAppliedColor()}</MenuItem>\r\n              </TextField>\r\n              <TextField\r\n                select\r\n                disabled\r\n                fullWidth\r\n                label={translate.Icon}\r\n                value={typesStore.typeToSave?.icon ? '0' : ''}\r\n                SelectProps={{ style: { color: getAppliedColor() } }}\r\n                onClick={iconHandleOpen}\r\n              >\r\n                <MenuItem value=\"0\">\r\n                  <Icon>{typesStore.typeToSave?.icon}</Icon>\r\n                </MenuItem>\r\n              </TextField>\r\n            </div>\r\n            <Dialog\r\n              open={colorPickerOpened}\r\n              className={css.colorDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.colorDialogBox}>\r\n                <div className={css.colorDialogHeader}>\r\n                  <Typography variant=\"h6\">\r\n                    {translate.SelectTheColorOfTheIcon}\r\n                  </Typography>\r\n                </div>\r\n                <div className={css.colorDialogBody}>\r\n                  <ChromePicker color={color} onChange={pickerColorChange} />\r\n                </div>\r\n                <div className={css.colorDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyColorSelect}\r\n                  >\r\n                    {translate.Select}\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelColorSelect}>\r\n                    {translate.Cancel}\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n            <Dialog\r\n              open={iconPickerOpened}\r\n              className={css.iconDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.iconDialogBox}>\r\n                <div className={css.iconDialogHeader}>\r\n                  <Typography variant=\"h6\">{translate.SelectIcon}</Typography>\r\n                </div>\r\n                <div className={css.iconDialogBody}>\r\n                  <IconsChooser\r\n                    selectedIcon={typesStore.typeToSave?.icon}\r\n                    selectedIconChanged={iconChange}\r\n                  />\r\n                </div>\r\n                <div className={css.iconDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={buttonApplyIconSelect}\r\n                  >\r\n                    {translate.Select}\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={buttonCancelIconSelect}>\r\n                    {translate.Cancel}\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default TypeEditPanel;\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  Fade,\r\n  Grid,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  MenuItem,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport {\r\n  KeyboardDatePicker,\r\n  KeyboardTimePicker,\r\n  MuiPickersUtilsProvider,\r\n} from '@material-ui/pickers';\r\nimport { MaterialUiPickersDate } from '@material-ui/pickers/typings/date';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport enPickerLocale from 'date-fns/locale/en-US';\r\nimport hePickerLocale from 'date-fns/locale/he';\r\nimport ruPickerLocale from 'date-fns/locale/ru';\r\nimport { MenuTypesEnum, LanguagesEnum } from '../../models/Enum';\r\nimport CashStore from '../../stores/CashStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    selectTypeIcon: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    totalInput: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    currencySelect: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  match: any;\r\n}\r\n\r\nconst CashEditPanel = observer((props: IProps) => {\r\n  const {\r\n    cashStore,\r\n    typesStore,\r\n    translatesStore,\r\n    propertiesStore,\r\n  }: {\r\n    cashStore: CashStore;\r\n    typesStore: TypesStore;\r\n    translatesStore: TranslatesStore;\r\n    propertiesStore: PropertiesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const [cashId, setCashId] = React.useState('');\r\n  const [typeId, setTypeId] = React.useState('');\r\n  const [cashCurrency, setCashCurrency] = React.useState('');\r\n  const [pickerLocale, setPickerLocale] = React.useState(enPickerLocale);\r\n\r\n  React.useEffect(() => {\r\n    if (propertiesStore.currentLanguage?.name === LanguagesEnum.English) {\r\n      setPickerLocale(enPickerLocale);\r\n    } else if (propertiesStore.currentLanguage?.name === LanguagesEnum.Hebrew) {\r\n      setPickerLocale(hePickerLocale);\r\n    } else if (\r\n      propertiesStore.currentLanguage?.name === LanguagesEnum.Russian\r\n    ) {\r\n      setPickerLocale(ruPickerLocale);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [propertiesStore.currentLanguage?.rtl]);\r\n\r\n  const history = useHistory();\r\n  React.useEffect(() => {\r\n    setCashId(props.match.params?.id);\r\n    setTypeId(props.match.params?.typeId);\r\n    if (cashStore.cashesLoaded) {\r\n      cashStore.getCashToSaveById(cashId);\r\n      if (!cashStore.cashToSave?.id) {\r\n        cashStore.updateCashToSaveByProp('typeName', typeId);\r\n      }\r\n    }\r\n  }, [\r\n    cashId,\r\n    cashStore,\r\n    props.match.params,\r\n    typesStore.typesLoaded,\r\n    cashStore.cashesLoaded,\r\n    typesStore,\r\n    typeId,\r\n  ]);\r\n\r\n  const createdDate = new Date();\r\n\r\n  const deleteCash = async () => {\r\n    await cashStore.deleteCash(cashId);\r\n    history.push(`/${MenuTypesEnum.Records}`);\r\n  };\r\n  const cancelEdit = () => {\r\n    if (cashId) {\r\n      history.push(`/${MenuTypesEnum.Records}`);\r\n    } else {\r\n      history.push(`/${MenuTypesEnum.Cash}`);\r\n    }\r\n  };\r\n  const saveEdit = async () => {\r\n    if (!cashStore.cashToSave?.createdDate) {\r\n      cashStore.updateCashToSaveByProp('createdDate', createdDate);\r\n    }\r\n    if (cashStore.validateCashToSave()) {\r\n      await cashStore.saveCash(cashId);\r\n      history.push(`/${MenuTypesEnum.Records}`);\r\n    }\r\n  };\r\n\r\n  const selectTypeChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const selectedTypeId = event.currentTarget.dataset.value!;\r\n    cashStore.updateCashToSaveByProp('typeName', selectedTypeId);\r\n  };\r\n\r\n  const getIconColor = (color?: string) => {\r\n    return typesStore.getColorInHex(theme, color);\r\n  };\r\n\r\n  const pickerDateChange = (date: MaterialUiPickersDate) => {\r\n    cashStore.updateCashToSaveByProp('createdDate', date);\r\n  };\r\n\r\n  const totalInputRef = React.useRef<HTMLInputElement>(null);\r\n  const descriptionKeyUp = (event: React.KeyboardEvent<HTMLInputElement>) => {\r\n    if (event.keyCode === 13) {\r\n      console.log(totalInputRef.current);\r\n      // eslint-disable-next-line no-unused-expressions\r\n      totalInputRef.current?.focus();\r\n    }\r\n  };\r\n\r\n  const changeDescriptionField = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    const description = event.currentTarget.value;\r\n    cashStore.updateCashToSaveByProp('description', description);\r\n  };\r\n\r\n  const changeTotalField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = parseFloat(event.currentTarget.value);\r\n    const prop = event.currentTarget.dataset.propName!;\r\n    cashStore.updateCashToSaveByProp(prop, newValue);\r\n  };\r\n\r\n  const updateCashCurrency = () => {\r\n    const currency =\r\n      propertiesStore.getCurrencyByName(cashStore.cashToSave?.currency || '')\r\n        .name || '';\r\n    setCashCurrency(currency);\r\n  };\r\n\r\n  const changeCurrencyField = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    const newValue = event.target.value;\r\n    cashStore.updateCashToSaveByProp('currency', newValue);\r\n    updateCashCurrency();\r\n  };\r\n\r\n  const totalFieldFocus = (event: React.FocusEvent<HTMLInputElement>) => {\r\n    event.currentTarget.select();\r\n  };\r\n\r\n  const submitOnEnterKeyUp = async (\r\n    event: React.KeyboardEvent<HTMLInputElement>\r\n  ) => {\r\n    if (event.keyCode === 13) {\r\n      await saveEdit();\r\n    }\r\n  };\r\n\r\n  React.useEffect(() => {\r\n    updateCashCurrency();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [cashStore.cashToSave, propertiesStore.defaultCurrency]);\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">\r\n                {cashId ? translate.PaymentEdit : translate.PaymentNew}\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {cashId && (\r\n                <IconButton onClick={deleteCash}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!cashStore.cashToSave?.typeName}\r\n              select\r\n              fullWidth\r\n              label={translate.PaymentType}\r\n              className={css.dialogSelect}\r\n              value={cashStore.cashToSave?.typeName || ''}\r\n              onChange={selectTypeChange}\r\n              helperText={\r\n                !cashStore.cashToSave?.typeName\r\n                  ? translate.PaymentTypeIsRequired\r\n                  : ''\r\n              }\r\n            >\r\n              {typesStore.types.map((type) => (\r\n                <MenuItem key={type.name} value={type.name}>\r\n                  <div className={css.dialogSelectBox}>\r\n                    <Icon\r\n                      className={css.selectTypeIcon}\r\n                      style={{ color: getIconColor(type.iconColor) }}\r\n                    >\r\n                      {type.icon}\r\n                    </Icon>\r\n                    <span>{type.label}</span>\r\n                  </div>\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <MuiPickersUtilsProvider locale={pickerLocale} utils={DateFnsUtils}>\r\n              <Grid container justify=\"space-around\" className={css.datesGrid}>\r\n                <KeyboardDatePicker\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label={translate.Date}\r\n                  format=\"dd/MM/yyyy\"\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                  okLabel={translate.Select}\r\n                  cancelLabel={translate.Cancel}\r\n                  DialogProps={{\r\n                    className: propertiesStore.currentLanguage?.rtl\r\n                      ? css.pickersRtl\r\n                      : '',\r\n                  }}\r\n                />\r\n                <KeyboardTimePicker\r\n                  fullWidth\r\n                  margin=\"normal\"\r\n                  label={translate.Time}\r\n                  value={cashStore.cashToSave?.createdDate || createdDate}\r\n                  onChange={pickerDateChange}\r\n                  okLabel={translate.Select}\r\n                  cancelLabel={translate.Cancel}\r\n                  DialogProps={{\r\n                    className: propertiesStore.currentLanguage?.rtl\r\n                      ? css.pickersRtl\r\n                      : '',\r\n                  }}\r\n                />\r\n              </Grid>\r\n            </MuiPickersUtilsProvider>\r\n            <TextField\r\n              fullWidth\r\n              className={css.descriptionInput}\r\n              label={translate.Description}\r\n              value={cashStore.cashToSave?.description || ''}\r\n              onChange={changeDescriptionField}\r\n              onKeyUp={descriptionKeyUp}\r\n              inputProps={{ 'data-prop-name': 'description' }}\r\n            />\r\n            <div className={css.totalContainer}>\r\n              <TextField\r\n                inputRef={totalInputRef}\r\n                error={!cashStore.cashToSave?.total}\r\n                fullWidth\r\n                className={css.totalInput}\r\n                label={translate.PaymentTotal}\r\n                value={cashStore.cashToSave?.total || ''}\r\n                onChange={changeTotalField}\r\n                onFocus={totalFieldFocus}\r\n                onKeyUp={submitOnEnterKeyUp}\r\n                type=\"number\"\r\n                inputProps={{ 'data-prop-name': 'total' }}\r\n                helperText={\r\n                  !cashStore.cashToSave?.total\r\n                    ? translate.PaymentTotalIsRequired\r\n                    : ''\r\n                }\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                select\r\n                className={css.currencySelect}\r\n                label={translate.Currency}\r\n                value={cashCurrency}\r\n                onChange={changeCurrencyField}\r\n                inputProps={{ 'data-prop-name': 'currency' }}\r\n              >\r\n                {propertiesStore.currencies.map((c) => (\r\n                  <MenuItem key={c.name} value={c.name}>\r\n                    {c.symbol}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default CashEditPanel;\r\n","import CashPanel from '../components/CashPanel/CashPanel';\r\nimport RecordsPanel from '../components/RecordsPanel/RecordsPanel';\r\nimport TypesPanel from '../components/TypesPanel/TypesPanel';\r\nimport MenuPanel from '../components/MenuPanel/MenuPanel';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\nimport TypeEditPanel from '../components/TypeEditPanel/TypeEditPanel';\r\nimport CashEditPanel from '../components/CashEditPanel/CashEditPanel';\r\n\r\nconst routes = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/add/:typeId`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}/edit/:id`,\r\n    exact: true,\r\n    components: CashEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Records}`,\r\n    exact: true,\r\n    components: RecordsPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}`,\r\n    exact: true,\r\n    components: TypesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/add`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/edit/:id`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}`,\r\n    exact: true,\r\n    components: MenuPanel,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst RouteWithSubRoutes = (route: any) => {\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props: any) => {\r\n        if (Array.isArray(route.components)) {\r\n          return route.components.map((Component: any, index: number) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <Component key={index} {...props} routes={route.routes} />\r\n          ));\r\n        }\r\n        return <route.components {...props} routes={route.routes} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSubRoutes;\r\n","import React from 'react';\r\nimport {\r\n  makeStyles,\r\n  Theme,\r\n  createStyles,\r\n  Snackbar,\r\n  Icon,\r\n} from '@material-ui/core';\r\nimport classes from './SnackErrors.module.css';\r\nimport Helpers from '../../utility/Helpers';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    errors: {\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  open: boolean;\r\n  errors: string[];\r\n  onClose: () => void;\r\n}\r\n\r\nconst SnackErrors = (props: IProps) => {\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const [openSnack, setOpenSnack] = React.useState(false);\r\n  const { open, errors } = props;\r\n  React.useEffect(() => {\r\n    setOpenSnack(open);\r\n  }, [open]);\r\n\r\n  const closeHandle = () => {\r\n    setOpenSnack(false);\r\n    props.onClose();\r\n  };\r\n\r\n  return (\r\n    <Snackbar\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'center',\r\n      }}\r\n      open={openSnack}\r\n      onClose={closeHandle}\r\n      autoHideDuration={6000}\r\n      message={\r\n        <div className={css.errors}>\r\n          {errors.map((e) => (\r\n            <div key={e}>{e}</div>\r\n          ))}\r\n        </div>\r\n      }\r\n      action={\r\n        <Icon fontSize=\"small\" color=\"inherit\" onClick={closeHandle}>\r\n          close\r\n        </Icon>\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nexport default SnackErrors;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  createStyles,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  makeStyles,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React, { ChangeEvent } from 'react';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport SnackErrors from '../SnackErrors/SnackErrors';\r\nimport classes from './CurrencyEditPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    toolbarIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    currencySymbolField: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    errors: {\r\n      color: theme.palette.error.main,\r\n    },\r\n  })\r\n);\r\n\r\ninterface IProps {\r\n  onCancelEdit?: () => void;\r\n  onSaveEdit?: (newCurrencyName: string) => void;\r\n}\r\n\r\nconst CurrencyEditPanel = observer((props: IProps) => {\r\n  const {\r\n    propertiesStore,\r\n    translatesStore,\r\n  }: {\r\n    propertiesStore: PropertiesStore;\r\n    translatesStore: TranslatesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const [currencyId, setCurrencyId] = React.useState('');\r\n  const [currencyName, setCurrencyName] = React.useState('');\r\n  const [currencySymbol, setCurrencySymbol] = React.useState('');\r\n  const [openErrors, setOpenErrors] = React.useState(false);\r\n  const [saveErrors, setSaveErrors] = React.useState<Array<string>>([]);\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const deleteCurrency = () => {};\r\n  const cancelEdit = () => {\r\n    if (props.onCancelEdit) {\r\n      props.onCancelEdit();\r\n    }\r\n  };\r\n  const saveEdit = async () => {\r\n    const saveResult = await propertiesStore.addNewCurrency(translate, {\r\n      name: currencyName,\r\n      symbol: currencySymbol,\r\n    });\r\n    if (saveResult.success) {\r\n      if (props.onSaveEdit) {\r\n        props.onSaveEdit(currencyName);\r\n      }\r\n    } else {\r\n      setSaveErrors(saveResult.errors);\r\n      setOpenErrors(true);\r\n    }\r\n  };\r\n\r\n  const closeErrors = () => {\r\n    setOpenErrors(false);\r\n  };\r\n\r\n  const changeCurrencyNameField = (\r\n    event: React.ChangeEvent<HTMLInputElement>\r\n  ) => {\r\n    setCurrencyName(event.target.value);\r\n  };\r\n\r\n  const changeCurrencySymbol = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrencySymbol(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.NewCurrency}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              {currencyId && (\r\n                <IconButton onClick={deleteCurrency}>\r\n                  <Icon className={css.toolbarIcon}>delete_forever</Icon>\r\n                </IconButton>\r\n              )}\r\n              <IconButton onClick={cancelEdit}>\r\n                <Icon className={css.toolbarIcon}>close</Icon>\r\n              </IconButton>\r\n              <IconButton onClick={saveEdit}>\r\n                <Icon className={css.toolbarIcon}>done</Icon>\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error={!currencyName}\r\n              fullWidth\r\n              label={translate.Name}\r\n              value={currencyName}\r\n              onChange={changeCurrencyNameField}\r\n              inputProps={{ 'data-prop-name': 'name' }}\r\n              helperText={\r\n                !currencyName ? translate.NameIsRequiredForExampleUSD : ''\r\n              }\r\n            />\r\n            <TextField\r\n              error={!currencySymbol}\r\n              fullWidth\r\n              label={translate.Symbol}\r\n              value={currencySymbol}\r\n              onChange={changeCurrencySymbol}\r\n              inputProps={{ 'data-prop-name': 'symbol' }}\r\n              className={css.currencySymbolField}\r\n              helperText={\r\n                !currencyName ? translate.SymbolIsRequiredForExample$ : ''\r\n              }\r\n            />\r\n            <SnackErrors\r\n              open={openErrors}\r\n              errors={saveErrors}\r\n              onClose={closeErrors}\r\n            />\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default CurrencyEditPanel;\r\n","import {\r\n  AppBar,\r\n  Button,\r\n  createStyles,\r\n  Fade,\r\n  makeStyles,\r\n  MenuItem,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React, { ChangeEvent } from 'react';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport CurrencyEditPanel from '../CurrencyEditPanel/CurrencyEditPanel';\r\nimport SnackErrors from '../SnackErrors/SnackErrors';\r\nimport classes from './FirstTimeShowPanel.module.css';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport TypesStore from '../../stores/TypesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    currenciesContainer: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    currenciesSelect: {\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    addCurrencyButton: {\r\n      marginLeft: theme.spacing(1),\r\n    },\r\n    footer: {\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      paddingTop: theme.spacing(1),\r\n      paddingBottom: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst FirstTimeShowPanel = observer(() => {\r\n  const {\r\n    propertiesStore,\r\n    translatesStore,\r\n    typesStore,\r\n  }: {\r\n    propertiesStore: PropertiesStore;\r\n    translatesStore: TranslatesStore;\r\n    typesStore: TypesStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const [language, setLanguage] = React.useState('');\r\n  const [currency, setCurrency] = React.useState('');\r\n  const [openErrors, setOpenErrors] = React.useState(false);\r\n  const [saveErrors, setSaveErrors] = React.useState<Array<string>>([]);\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const [addNewCurrencyOpened, setAddNewCurrencyOpened] = React.useState(false);\r\n  const buttonAddCurrency = () => {\r\n    setAddNewCurrencyOpened(true);\r\n  };\r\n\r\n  const buttonSaveProperties = async () => {\r\n    const saveResult = await propertiesStore.saveFirstTimeOptions(\r\n      translate,\r\n      language,\r\n      currency\r\n    );\r\n    if (!saveResult.success) {\r\n      setSaveErrors(saveResult.errors);\r\n      setOpenErrors(true);\r\n    } else {\r\n      await typesStore.loadTypes();\r\n      await translatesStore.loadTranslate(language);\r\n    }\r\n  };\r\n\r\n  const addNewCurrencyPanelOnCancelEdit = () => {\r\n    setAddNewCurrencyOpened(false);\r\n  };\r\n  const addNewCurrencyPanelOnSaveEdit = (selectedNewCurrencyName: string) => {\r\n    setAddNewCurrencyOpened(false);\r\n    setCurrency(selectedNewCurrencyName);\r\n  };\r\n\r\n  const changeLanguage = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setLanguage(event.target.value);\r\n  };\r\n  const changeCurrency = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setCurrency(event.target.value);\r\n  };\r\n\r\n  const closeErrors = () => {\r\n    setOpenErrors(false);\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">{translate.MainProperties}</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              select\r\n              fullWidth\r\n              error={!language}\r\n              value={language}\r\n              onChange={changeLanguage}\r\n              label={translate.Language}\r\n              helperText={!language ? translate.LanguageIsRequired : ''}\r\n            >\r\n              {propertiesStore.languages.map((l) => (\r\n                <MenuItem key={l.name} value={l.name}>\r\n                  {l.title || l.name}\r\n                </MenuItem>\r\n              ))}\r\n            </TextField>\r\n            <div className={css.currenciesContainer}>\r\n              <TextField\r\n                select\r\n                fullWidth\r\n                error={!currency}\r\n                label={translate.Currency}\r\n                value={currency}\r\n                onChange={changeCurrency}\r\n                className={css.currenciesSelect}\r\n                helperText={!currency ? translate.CurrencyIsRequired : ''}\r\n              >\r\n                {propertiesStore.currencies.map((c) => (\r\n                  <MenuItem key={c.name} value={c.name}>\r\n                    {c.symbol || c.name}\r\n                  </MenuItem>\r\n                ))}\r\n              </TextField>\r\n              <Button\r\n                fullWidth\r\n                className={css.addCurrencyButton}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                onClick={buttonAddCurrency}\r\n              >\r\n                {translate.AddNewCurrency}\r\n              </Button>\r\n            </div>\r\n            <SnackErrors\r\n              open={openErrors}\r\n              errors={saveErrors}\r\n              onClose={closeErrors}\r\n            />\r\n          </div>\r\n          <div className={css.footer}>\r\n            <Button\r\n              fullWidth\r\n              color=\"primary\"\r\n              variant=\"contained\"\r\n              onClick={buttonSaveProperties}\r\n            >\r\n              {translate.Save}\r\n            </Button>\r\n          </div>\r\n          {addNewCurrencyOpened && (\r\n            <CurrencyEditPanel\r\n              onCancelEdit={addNewCurrencyPanelOnCancelEdit}\r\n              onSaveEdit={addNewCurrencyPanelOnSaveEdit}\r\n            />\r\n          )}\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default FirstTimeShowPanel;\r\n","import { createStyles, Fab, makeStyles, Theme } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../routes/Routes';\r\nimport RouteWithSubRoutes from '../../routes/RouteWithSubRoutes';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './Body.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\nimport FirstTimeShowPanel from '../FirstTimeShowPanel/FirstTimeShowPanel';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Body = observer(() => {\r\n  const {\r\n    appStore,\r\n    propertiesStore,\r\n  }: { appStore: AppStore; propertiesStore: PropertiesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const getAddButtonLinkUrl = () => {\r\n    let prefix = appStore.selectedMenuUrl;\r\n    if (prefix === '/') {\r\n      prefix += MenuTypesEnum.Cash;\r\n    }\r\n    return `${appStore.selectedMenuUrl}/add`;\r\n  };\r\n\r\n  const showAddIcon = () => {\r\n    return (\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Menu}` &&\r\n      appStore.selectedMenuUrl !== `/${MenuTypesEnum.Records}`\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={css.body}>\r\n      {routes.map((route, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RouteWithSubRoutes key={i} {...route} />\r\n      ))}\r\n      {showAddIcon() && (\r\n        <Link to={getAddButtonLinkUrl()}>\r\n          <Fab\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={css.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      )}\r\n      {!propertiesStore.firstTimeOptionsSelected && <FirstTimeShowPanel />}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Body;\r\n","import { Tab } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  to: string;\r\n  icon?: any;\r\n  currentUrl?: string;\r\n}\r\n\r\nconst LinkTab = observer((props: IProps) => {\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const linkClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    if (props.currentUrl === event.currentTarget.pathname) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      to={props.to}\r\n      label={props.label}\r\n      icon={props.icon}\r\n      onClick={linkClick}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LinkTab;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  List as ListIcon,\r\n  Menu as MenuIcon,\r\n  MenuBook as MenuBookIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Search as SearchIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport AppStore from '../../stores/AppStore';\r\nimport CashStore from '../../stores/CashStore';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\nimport TranslatesStore from '../../stores/TranslatesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport LinkTab from '../LinkTab/LinkTab';\r\nimport classes from './Menu.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    menuIcon: {\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n    comboButton: {\r\n      color: theme.palette.primary.contrastText,\r\n      textTransform: 'none',\r\n    },\r\n    searchIcon: {\r\n      color: theme.palette.primary.contrastText,\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu = observer(() => {\r\n  const {\r\n    appStore,\r\n    translatesStore,\r\n    propertiesStore,\r\n    cashStore,\r\n  }: {\r\n    appStore: AppStore;\r\n    translatesStore: TranslatesStore;\r\n    propertiesStore: PropertiesStore;\r\n    cashStore: CashStore;\r\n  } = useStores();\r\n\r\n  const { translate } = translatesStore;\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n  const menuTabChanged = (event: any, newValue: number) => {\r\n    appStore.setSelectedMenuIndex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    const listener = history.listen(() => {\r\n      appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    });\r\n\r\n    return () => {\r\n      listener();\r\n    };\r\n  });\r\n\r\n  const menuTabProps = (name: string, href?: string) => {\r\n    return {\r\n      id: `menu-tab-${name}`,\r\n      'aria-controls': `menu-tab-${name}`,\r\n      to: href || `/${name}`,\r\n      currentUrl: appStore.selectedMenuUrl,\r\n    };\r\n  };\r\n\r\n  const cashesByPeriod = cashStore.getCashesByPeriod(cashStore.cashes);\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={css.firstBar}>\r\n        <Toolbar>\r\n          {appStore.selectedMenuIndex === 0 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.AddPayment}\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 1 && (\r\n            <Box className={css.headerBox}>\r\n              <IconButton>\r\n                <MenuIcon className={css.menuIcon} />\r\n              </IconButton>\r\n              <Button\r\n                className={css.comboButton}\r\n                endIcon={<ArrowDropDownIcon />}\r\n              >\r\n                <span className={css.comboButtonTextBox}>\r\n                  <span>\r\n                    {propertiesStore.dateFns.format(\r\n                      cashStore.cashPeriodFilter.from,\r\n                      'MMMM yyyy'\r\n                    )}\r\n                  </span>\r\n                  <span>\r\n                    {Helpers.formatString(\r\n                      translate.RecordsN,\r\n                      cashesByPeriod.length\r\n                    )}\r\n                  </span>\r\n                </span>\r\n              </Button>\r\n              <IconButton>\r\n                <SearchIcon className={css.searchIcon} />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {appStore.selectedMenuIndex === 2 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.Types}\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 3 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              {translate.More}\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n        <Tabs\r\n          value={appStore.selectedMenuIndex}\r\n          onChange={menuTabChanged}\r\n          aria-label=\"menu tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <LinkTab {...menuTabProps('cash', '/')} icon={<AttachMoneyIcon />} />\r\n          <LinkTab {...menuTabProps('records')} icon={<MenuBookIcon />} />\r\n          <LinkTab {...menuTabProps('types')} icon={<ListIcon />} />\r\n          <LinkTab {...menuTabProps('menu')} icon={<MoreHorizIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Menu;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport { CssBaseline } from '@material-ui/core';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport {\r\n  StylesProvider,\r\n  jssPreset,\r\n  createMuiTheme,\r\n  ThemeProvider,\r\n} from '@material-ui/core/styles';\r\n// import { enUS, heIL, ruRU } from '@material-ui/core/locale';\r\nimport Body from '../Body/Body';\r\nimport Menu from '../Menu/Menu';\r\nimport classes from './ThemeCreator.module.css';\r\nimport * as AppSettings from '../../../package.json';\r\nimport useStores from '../../stores/UseStores';\r\nimport PropertiesStore from '../../stores/PropertiesStore';\r\n\r\nconst jss = create({ plugins: [...jssPreset().plugins, rtl()] });\r\n\r\nconst ThemeCreator = observer(() => {\r\n  const { propertiesStore }: { propertiesStore: PropertiesStore } = useStores();\r\n\r\n  const [theme, setTheme] = React.useState(\r\n    createMuiTheme({\r\n      direction: 'ltr',\r\n    })\r\n  );\r\n  React.useEffect(() => {\r\n    const direction = !propertiesStore.currentLanguage?.rtl ? 'ltr' : 'rtl';\r\n    if (theme.direction !== direction) {\r\n      setTheme(\r\n        createMuiTheme({\r\n          direction,\r\n        })\r\n      );\r\n      document.body.style.direction = direction;\r\n      propertiesStore.setThemeLoaded(true);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [propertiesStore.currentLanguage?.rtl]);\r\n\r\n  return (\r\n    <StylesProvider jss={jss}>\r\n      <CssBaseline />\r\n      {propertiesStore.themeLoaded && (\r\n        <ThemeProvider theme={theme}>\r\n          <Router basename={`/${AppSettings.name}`}>\r\n            <div className={classes.page}>\r\n              <Menu />\r\n              <Body />\r\n            </div>\r\n          </Router>\r\n        </ThemeProvider>\r\n      )}\r\n    </StylesProvider>\r\n  );\r\n});\r\n\r\nexport default ThemeCreator;\r\n","import { plainToClass } from 'class-transformer';\r\nimport AppStore from '../stores/AppStore';\r\n\r\nexport default class CacheService {\r\n  private appStore: AppStore;\r\n\r\n  constructor(appStore: AppStore) {\r\n    this.appStore = appStore;\r\n    this.get<String>('appVersion', String, false, new Date()).then((r) => {\r\n      if (appStore.version !== r) {\r\n        this.clear();\r\n        this.add('appVersion', appStore.version);\r\n        if (r) {\r\n          window.location.reload();\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async add(key: string, entry: any) {\r\n    let entryStr: string;\r\n    if (typeof entry !== 'string') {\r\n      entryStr = JSON.stringify({ date: new Date(), entry });\r\n    } else {\r\n      entryStr = entry;\r\n    }\r\n    const result = await localStorage.setItem(key, entryStr);\r\n    return result;\r\n  }\r\n\r\n  public async get<T>(\r\n    key: string,\r\n    TCreator: new (...args: any[]) => T,\r\n    isArray?: boolean,\r\n    validAt?: Date\r\n  ): Promise<any> {\r\n    let result: string | null = null;\r\n    if (!this.appStore.enableCache) {\r\n      return result;\r\n    }\r\n    result = await localStorage.getItem(key);\r\n    if (result) {\r\n      console.log(`Key: ${key} loaded from cache`);\r\n    }\r\n    if (!result || !result.length) {\r\n      return result;\r\n    }\r\n    try {\r\n      const parsedResult = JSON.parse(result);\r\n      if (validAt) {\r\n        if (new Date(parsedResult.date) < validAt) {\r\n          return parsedResult.entry;\r\n        }\r\n        console.log(\r\n          `Key: ${key} date expired. ValidAt: ${validAt}. ExpiredAt: ${parsedResult.date}`\r\n        );\r\n        return null;\r\n      }\r\n      if (isArray) {\r\n        const arrayResult: T[] = [];\r\n        parsedResult.entry.forEach((entry: any) => {\r\n          const parsedEntry = plainToClass(TCreator, entry);\r\n          arrayResult.push(parsedEntry);\r\n        });\r\n        return arrayResult;\r\n      }\r\n      return plainToClass(TCreator, parsedResult.entry);\r\n    } catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async clear() {\r\n    await localStorage.clear();\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport * as AppJson from '../../package.json';\r\nimport ServicesStore from './ServicesStore';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\n\r\nclass AppStore {\r\n  version = AppJson.version;\r\n  services!: ServicesStore;\r\n\r\n  // NOTE: when application is change version, cache will be cleared\r\n  @observable enableCache = true;\r\n  @observable selectedMenuIndex = 0;\r\n  @observable selectedMenuUrl = '/';\r\n\r\n  @action setSelectedMenuIndex = (newValue: number) => {\r\n    this.selectedMenuIndex = newValue;\r\n  };\r\n\r\n  @action loadSelectedMenuIndex = (url: string) => {\r\n    const urlParts = url.split('/');\r\n    if (urlParts.length > 1) {\r\n      if (urlParts[1] === MenuTypesEnum.Records) {\r\n        this.selectedMenuIndex = 1;\r\n      } else if (urlParts[1] === MenuTypesEnum.Types) {\r\n        this.selectedMenuIndex = 2;\r\n      } else if (urlParts[1] === MenuTypesEnum.Menu) {\r\n        this.selectedMenuIndex = 3;\r\n      } else {\r\n        this.selectedMenuIndex = 0;\r\n      }\r\n    } else {\r\n      this.selectedMenuIndex = 0;\r\n    }\r\n    if (this.selectedMenuIndex === 0) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Cash}`;\r\n    } else if (this.selectedMenuIndex === 1) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Records}`;\r\n    } else if (this.selectedMenuIndex === 2) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Types}`;\r\n    } else if (this.selectedMenuIndex === 3) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Menu}`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default AppStore;\r\n","import CacheService from '../services/CacheService';\r\n\r\nclass ServicesStore {\r\n  cache: CacheService;\r\n\r\n  constructor(cache: CacheService) {\r\n    this.cache = cache;\r\n  }\r\n}\r\n\r\nexport default ServicesStore;\r\n","export default class TypeEntry {\r\n  name!: string;\r\n  label?: string;\r\n  position = 0;\r\n  iconColor?: string;\r\n  icon?: string;\r\n  system?: boolean;\r\n}\r\n","import { Theme } from '@material-ui/core';\r\nimport { action, observable } from 'mobx';\r\nimport TypeEntry from '../models/entries/TypeEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass TypesStore {\r\n  @observable types!: TypeEntry[];\r\n  @observable typesLoaded = false;\r\n  @observable typeToSave?: TypeEntry;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    const loadTypes = async () => {\r\n      await this.loadTypes();\r\n    };\r\n    loadTypes();\r\n  }\r\n\r\n  @action getTypeToSaveByName = (name: string) => {\r\n    this.typeToSave = {\r\n      ...(this.getTypeByName(name) || new TypeEntry()),\r\n    };\r\n  };\r\n\r\n  getTypeByName = (name: string) => {\r\n    return this.types.find((t) => t.name === name);\r\n  };\r\n\r\n  @action updateTypeToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.typeToSave, prop, newValue);\r\n  };\r\n\r\n  validateTypeToSave = () => {\r\n    let valid = true;\r\n    if (!this.typeToSave?.name) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.label) {\r\n      valid = false;\r\n    } else if (!this.typeToSave.position) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedTypes = () => {\r\n    return this.types.sort((a, b) => {\r\n      if (a.position > b.position) {\r\n        return 1;\r\n      }\r\n      if (a.position < b.position) {\r\n        return -1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveType = async (typeId: string) => {\r\n    const editType = this.types.find((t) => t.name === typeId);\r\n    if (editType) {\r\n      if (editType.system && editType.label !== this.typeToSave!.label) {\r\n        this.typeToSave!.system = false;\r\n      }\r\n      Object.keys(editType).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.typeToSave, k);\r\n        Helpers.setObjectValueByProp(editType, k, v);\r\n      });\r\n    } else {\r\n      this.types.push(this.typeToSave!);\r\n    }\r\n    this.types = this.getSortedTypes();\r\n    await this.cacheService.add('allTypes', this.types);\r\n  };\r\n\r\n  @action deleteType = async (typeId: string) => {\r\n    const type = this.types.find((t) => t.name === typeId);\r\n    if (type) {\r\n      const typeIndex = this.types.indexOf(type);\r\n      if (typeIndex > -1) {\r\n        this.types.splice(typeIndex, 1);\r\n        await this.cacheService.add('allTypes', this.types);\r\n      }\r\n    }\r\n  };\r\n\r\n  getColorInHex = (theme: Theme, color?: string) => {\r\n    if (color) {\r\n      if (color.indexOf('#') === 0) {\r\n        return color;\r\n      }\r\n      return Helpers.getObjectValueByProp(theme, color);\r\n    }\r\n    return '';\r\n  };\r\n\r\n  @action loadTypes = async () => {\r\n    this.types = [];\r\n\r\n    const language = await this.cacheService.get<String>('language', String);\r\n    const translate: any = Helpers.getTranslateByLanguage(language);\r\n\r\n    this.typesLoaded = false;\r\n    const types = await this.cacheService.get<TypeEntry>(\r\n      'allTypes',\r\n      TypeEntry,\r\n      true\r\n    );\r\n    if (types) {\r\n      this.types = types;\r\n    } else {\r\n      this.types.push({\r\n        name: 'MenuFood',\r\n        position: 1,\r\n        iconColor: 'palette.secondary.dark',\r\n        icon: 'fastfood',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuStore',\r\n        position: 2,\r\n        iconColor: 'palette.success.dark',\r\n        icon: 'local_grocery_store',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuBus',\r\n        position: 3,\r\n        iconColor: 'palette.warning.dark',\r\n        icon: 'directions_bus',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuClothes',\r\n        position: 4,\r\n        iconColor: 'palette.primary.dark',\r\n        icon: 'local_mall',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuGasStation',\r\n        position: 5,\r\n        iconColor: 'palette.primary.light',\r\n        icon: 'local_gas_station',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuChilds',\r\n        position: 6,\r\n        iconColor: 'palette.warning.light',\r\n        icon: 'child_friendly',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuServices',\r\n        position: 7,\r\n        iconColor: 'palette.secondary.light',\r\n        icon: 'important_devices',\r\n        system: true,\r\n      });\r\n\r\n      this.types.push({\r\n        name: 'MenuOther',\r\n        position: 8,\r\n        iconColor: 'palette.success.light',\r\n        icon: 'more_vert',\r\n        system: true,\r\n      });\r\n\r\n      this.types = this.getSortedTypes();\r\n      this.cacheService.add('allTypes', this.types);\r\n    }\r\n    this.types.forEach((t: TypeEntry) => {\r\n      if (t.system) {\r\n        // eslint-disable-next-line no-param-reassign\r\n        t.label = translate[t.name];\r\n      }\r\n    });\r\n    this.typesLoaded = true;\r\n  };\r\n}\r\n\r\nexport default TypesStore;\r\n","import * as AllIcons from '@material-ui/icons';\r\nimport { action, observable, computed } from 'mobx';\r\nimport CacheService from '../services/CacheService';\r\nimport { IconTypesEnum } from '../models/Enum';\r\n\r\nclass IconsStore {\r\n  @observable iconsTypes: Map<IconTypesEnum, string>;\r\n  @observable filledIcons: string[] = [];\r\n  @observable outlinedIcons: string[] = [];\r\n  @observable roundedIcons: string[] = [];\r\n  @observable twoToneIcons: string[] = [];\r\n  @observable sharpIcons: string[] = [];\r\n  @observable iconsOnOnePage = 100;\r\n  @observable foundedIcons: string[] = [];\r\n  @observable foundedTotalCount = 0;\r\n\r\n  @computed get pagesCount() {\r\n    return Math.ceil(this.foundedTotalCount / this.iconsOnOnePage);\r\n  }\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n\r\n    this.iconsTypes = new Map();\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Filled,\r\n      IconTypesEnum[IconTypesEnum.Filled]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Outlined,\r\n      IconTypesEnum[IconTypesEnum.Outlined]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Rounded,\r\n      IconTypesEnum[IconTypesEnum.Rounded]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.TwoTone,\r\n      IconTypesEnum.TwoTone.toString()\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Sharp,\r\n      IconTypesEnum[IconTypesEnum.Sharp]\r\n    );\r\n\r\n    this.cacheService.get<Object>('allIcons', Object).then((allIcons) => {\r\n      if (!allIcons) {\r\n        Object.keys(AllIcons).forEach((k: string) => {\r\n          if (\r\n            k.indexOf(IconTypesEnum.Outlined) ===\r\n            k.length - IconTypesEnum.Outlined.length\r\n          ) {\r\n            this.outlinedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Rounded) ===\r\n            k.length - IconTypesEnum.Rounded.length\r\n          ) {\r\n            this.roundedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.TwoTone) ===\r\n            k.length - IconTypesEnum.TwoTone.length\r\n          ) {\r\n            this.twoToneIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Sharp) ===\r\n            k.length - IconTypesEnum.Sharp.length\r\n          ) {\r\n            this.sharpIcons.push(k);\r\n          } else {\r\n            this.filledIcons.push(k);\r\n          }\r\n        });\r\n        const allIconsForCache = {\r\n          outlinedIcons: this.outlinedIcons,\r\n          roundedIcons: this.roundedIcons,\r\n          twoToneIcons: this.twoToneIcons,\r\n          sharpIcons: this.sharpIcons,\r\n          filledIcons: this.filledIcons,\r\n        };\r\n        this.cacheService.add('allIcons', allIconsForCache);\r\n      } else {\r\n        this.filledIcons = allIcons.filledIcons;\r\n        this.outlinedIcons = allIcons.outlinedIcons;\r\n        this.roundedIcons = allIcons.roundedIcons;\r\n        this.twoToneIcons = allIcons.twoToneIcons;\r\n        this.sharpIcons = allIcons.sharpIcons;\r\n      }\r\n    });\r\n  }\r\n\r\n  @action searchIconsByFilterAndPage = (\r\n    filter: string,\r\n    types: IconTypesEnum[],\r\n    page: number\r\n  ) => {\r\n    let result: string[] = [];\r\n    const lowerCasedFilter = filter.toLowerCase();\r\n    types.forEach((type: IconTypesEnum) => {\r\n      let workingArray: string[] | null = null;\r\n      if (type === IconTypesEnum.Filled) {\r\n        workingArray = this.filledIcons;\r\n      } else if (type === IconTypesEnum.Outlined) {\r\n        workingArray = this.outlinedIcons;\r\n      } else if (type === IconTypesEnum.Rounded) {\r\n        workingArray = this.roundedIcons;\r\n      } else if (type === IconTypesEnum.TwoTone) {\r\n        workingArray = this.twoToneIcons;\r\n      } else if (type === IconTypesEnum.Sharp) {\r\n        workingArray = this.sharpIcons;\r\n      }\r\n      if (workingArray) {\r\n        result = result.concat(\r\n          workingArray.filter(\r\n            (i: string) => i.toLowerCase().indexOf(lowerCasedFilter) !== -1\r\n          )\r\n        );\r\n      }\r\n    });\r\n    this.foundedTotalCount = result.length;\r\n    this.foundedIcons = result.slice(\r\n      (page - 1) * this.iconsOnOnePage,\r\n      page * this.iconsOnOnePage\r\n    );\r\n  };\r\n\r\n  getIconRightStringNameForFontToShow = (iconName: string) => {\r\n    const result = iconName.split(/(?=[A-Z])/);\r\n    let resultStr = result?.map((r) => r.toLowerCase()).join('_');\r\n    const numberMatch = resultStr.match(/[0-9]+/);\r\n    if (numberMatch?.index) {\r\n      resultStr = `${resultStr.substring(\r\n        0,\r\n        numberMatch.index\r\n      )}_${resultStr.substring(numberMatch.index)}`;\r\n    }\r\n    return resultStr;\r\n  };\r\n}\r\n\r\nexport default IconsStore;\r\n","import { Type } from 'class-transformer';\r\n\r\nexport default class CashEntry {\r\n  id!: string;\r\n  typeName!: string;\r\n  @Type(() => Date)\r\n  createdDate!: Date;\r\n  total!: number;\r\n  currency!: string;\r\n  description?: string;\r\n}\r\n","import DateFnsUtils from '@date-io/date-fns';\r\nimport { PeriodTypeEnum } from '../Enum';\r\n\r\nexport default class CashPeriodFilterEntry {\r\n  type: PeriodTypeEnum;\r\n  from!: Date;\r\n  to?: Date;\r\n\r\n  constructor() {\r\n    this.type = PeriodTypeEnum.Monthly;\r\n    this.initializeByType();\r\n  }\r\n\r\n  private initializeByType = () => {\r\n    if (this.type !== PeriodTypeEnum.Custom) {\r\n      this.to = undefined;\r\n    }\r\n    const now = new Date();\r\n    const dateFns = new DateFnsUtils();\r\n    if (this.type === PeriodTypeEnum.Daily) {\r\n      this.from = new Date(\r\n        now.getFullYear(),\r\n        now.getMonth(),\r\n        now.getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0\r\n      );\r\n    } else if (this.type === PeriodTypeEnum.Weekly) {\r\n      this.from = new Date(\r\n        now.getFullYear(),\r\n        now.getMonth(),\r\n        dateFns.addDays(now, -7).getDate(),\r\n        0,\r\n        0,\r\n        0,\r\n        0\r\n      );\r\n    } else if (this.type === PeriodTypeEnum.Monthly) {\r\n      this.from = new Date(now.getFullYear(), now.getMonth(), 1, 0, 0, 0, 0);\r\n    } else if (this.type === PeriodTypeEnum.Year) {\r\n      this.from = new Date(now.getFullYear(), 0, 1, 0, 0, 0, 0);\r\n    }\r\n  };\r\n\r\n  reinitializeByType = () => {\r\n    if (!this.from) {\r\n      this.initializeByType();\r\n    }\r\n  };\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport CashEntry from '../models/entries/CashEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\nimport CashPeriodFilterEntry from '../models/entries/CashPeriodFilterEntry';\r\n\r\nclass CashStore {\r\n  @observable cashes: CashEntry[] = [];\r\n  @observable cashPeriodFilter!: CashPeriodFilterEntry;\r\n  @observable cashToSave?: CashEntry;\r\n  @observable cashesLoaded = false;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.loadAllCashes();\r\n    this.loadCashPeriodFilter();\r\n  }\r\n\r\n  @action getCashToSaveById = (id: string) => {\r\n    this.cashToSave = {\r\n      ...(this.cashes.find((t) => t.id === id) || ({} as CashEntry)),\r\n    };\r\n  };\r\n\r\n  @action updateCashToSaveByProp = (prop: string, newValue: any) => {\r\n    Helpers.setObjectValueByProp(this.cashToSave, prop, newValue);\r\n  };\r\n\r\n  validateCashToSave = () => {\r\n    let valid = true;\r\n    if (!this.cashToSave?.typeName) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.createdDate) {\r\n      valid = false;\r\n    } else if (!this.cashToSave.total) {\r\n      valid = false;\r\n    }\r\n    return valid;\r\n  };\r\n\r\n  private getSortedCashes = () => {\r\n    return this.cashes.sort((a, b) => {\r\n      if (a.createdDate > b.createdDate) {\r\n        return -1;\r\n      }\r\n      if (a.createdDate < b.createdDate) {\r\n        return 1;\r\n      }\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  @action saveCash = async (cashId: string) => {\r\n    const editCash = this.cashes.find((c) => c.id === cashId);\r\n    if (editCash) {\r\n      Object.keys(editCash).forEach((k) => {\r\n        const v = Helpers.getObjectValueByProp(this.cashToSave, k);\r\n        Helpers.setObjectValueByProp(editCash, k, v);\r\n      });\r\n    } else {\r\n      this.cashToSave!.id = uuidv4();\r\n      this.cashes.push(this.cashToSave!);\r\n    }\r\n    this.cashes = this.getSortedCashes();\r\n    await this.cacheService.add('allCashes', this.cashes);\r\n    await this.loadAllCashes();\r\n  };\r\n\r\n  @action deleteCash = async (cashId: string) => {\r\n    const cash = this.cashes.find((c) => c.id === cashId);\r\n    if (cash) {\r\n      const typeIndex = this.cashes.indexOf(cash);\r\n      if (typeIndex > -1) {\r\n        this.cashes.splice(typeIndex, 1);\r\n        await this.cacheService.add('allCashes', this.cashes);\r\n      }\r\n    }\r\n  };\r\n\r\n  private loadAllCashes = async () => {\r\n    this.cashes = [];\r\n    const cashes = await this.cacheService.get<CashEntry>(\r\n      'allCashes',\r\n      CashEntry,\r\n      true\r\n    );\r\n    if (cashes) {\r\n      this.cashes = cashes;\r\n      this.cashes = this.getSortedCashes();\r\n    }\r\n    this.cashesLoaded = true;\r\n  };\r\n\r\n  private loadCashPeriodFilter = async () => {\r\n    this.cashPeriodFilter = await this.cacheService.get<CashPeriodFilterEntry>(\r\n      'cashPeriodFilter',\r\n      CashPeriodFilterEntry\r\n    );\r\n    if (!this.cashPeriodFilter) {\r\n      this.cashPeriodFilter = new CashPeriodFilterEntry();\r\n    }\r\n    this.cashPeriodFilter.reinitializeByType();\r\n  };\r\n\r\n  getCashesByPeriod = (cashes: CashEntry[]) => {\r\n    const result = cashes.filter((c) => {\r\n      if (this.cashPeriodFilter?.from && this.cashPeriodFilter?.to) {\r\n        return (\r\n          c.createdDate >= this.cashPeriodFilter.from &&\r\n          c.createdDate <= this.cashPeriodFilter.to\r\n        );\r\n      }\r\n      if (this.cashPeriodFilter?.from) {\r\n        return c.createdDate >= this.cashPeriodFilter.from;\r\n      }\r\n      if (this.cashPeriodFilter?.to) {\r\n        return c.createdDate <= this.cashPeriodFilter.to;\r\n      }\r\n      return false;\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getCashesDistinctDates = (cashes: CashEntry[]) => {\r\n    const datesOfCashes = this.getCashesByPeriod(cashes).map((c) =>\r\n      c.createdDate\r\n        .toISOString()\r\n        .substring(0, c.createdDate.toISOString().indexOf('T'))\r\n    );\r\n    const result: string[] = [];\r\n    datesOfCashes.forEach((d) => {\r\n      if (!result.length || result[result.length - 1] !== d) {\r\n        result.push(d);\r\n      }\r\n    });\r\n    return result;\r\n  };\r\n\r\n  getCashesStartedByDate = (cashes: CashEntry[], dateYYYYMMDD: string) => {\r\n    return cashes.filter((c) =>\r\n      c.createdDate.toISOString().startsWith(dateYYYYMMDD)\r\n    );\r\n  };\r\n}\r\n\r\nexport default CashStore;\r\n","export default class LanguageEntry {\r\n  name!: string;\r\n  title?: string;\r\n  rtl?: boolean;\r\n}\r\n","export default class CurrencyEntry {\r\n  name!: string;\r\n  symbol!: string;\r\n}\r\n","export default class ErrorEntry {\r\n  success!: boolean;\r\n  errors!: string[];\r\n\r\n  constructor() {\r\n    this.success = true;\r\n    this.errors = [];\r\n  }\r\n\r\n  addError(error: string) {\r\n    this.success = false;\r\n    this.errors.push(error);\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport enLocale from 'date-fns/locale/en-US';\r\nimport heLocale from 'date-fns/locale/he';\r\nimport ruLocale from 'date-fns/locale/ru';\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport { LanguagesEnum } from '../models/Enum';\r\nimport CacheService from '../services/CacheService';\r\nimport LanguageEntry from '../models/entries/LanguageEntry';\r\nimport CurrencyEntry from '../models/entries/CurrencyEntry';\r\nimport ErrorEntry from '../models/entries/ErrorEntry';\r\nimport TranslateEntry from '../models/entries/TranslateEntry';\r\nimport FormatsStore from './FormatsStore';\r\n\r\nexport default class PropertiesStore {\r\n  @observable firstTimeOptionsSelected = true;\r\n  @observable languages!: LanguageEntry[];\r\n  @observable currentLanguage!: LanguageEntry;\r\n  @observable currencies!: CurrencyEntry[];\r\n  @observable defaultCurrency!: CurrencyEntry;\r\n  @observable dateFns = new DateFnsUtils({ locale: enLocale });\r\n  @observable themeLoaded = false;\r\n\r\n  private cacheService: CacheService;\r\n  private formatsStore: FormatsStore;\r\n\r\n  constructor(cacheService: CacheService, formatsStore: FormatsStore) {\r\n    this.cacheService = cacheService;\r\n    this.formatsStore = formatsStore;\r\n    const fillLanguages = async () => {\r\n      await this.fillLanguages();\r\n    };\r\n    fillLanguages();\r\n\r\n    const loadCurrencies = async () => {\r\n      await this.loadCurrencies();\r\n    };\r\n    loadCurrencies();\r\n\r\n    this.cacheService\r\n      .get<Boolean>('firstTimeOptionsSelected', Boolean)\r\n      .then((r: boolean) => {\r\n        this.firstTimeOptionsSelected = !!r;\r\n      });\r\n  }\r\n\r\n  private fillLanguages = async () => {\r\n    this.languages = [];\r\n    this.languages.push({ name: LanguagesEnum.English, title: 'English' });\r\n    this.languages.push({\r\n      name: LanguagesEnum.Hebrew,\r\n      title: 'עברית',\r\n      rtl: true,\r\n    });\r\n    this.languages.push({ name: LanguagesEnum.Russian, title: 'Русский' });\r\n\r\n    this.loadCurrentLanguage('');\r\n  };\r\n\r\n  @action changeLanguage = async (languageName: string) => {\r\n    await this.cacheService.add('language', languageName);\r\n    await this.loadCurrentLanguage(languageName);\r\n  };\r\n\r\n  @action changeCurrency = async (currencyName: string) => {\r\n    await this.cacheService.add('currency', currencyName);\r\n    await this.loadCurrencies();\r\n  };\r\n\r\n  @action loadCurrentLanguage = async (languageName: string) => {\r\n    this.themeLoaded = false;\r\n    let language = languageName;\r\n    if (!language) {\r\n      language = await this.cacheService.get<String>('language', String);\r\n    }\r\n    let currentLanguage = this.languages.find((l) => l.name === language);\r\n    if (!currentLanguage) {\r\n      currentLanguage = new LanguageEntry();\r\n      currentLanguage.name = LanguagesEnum.English;\r\n      currentLanguage.title = 'English';\r\n    }\r\n    this.currentLanguage = currentLanguage;\r\n    this.formatsStore.localeChanged(this.currentLanguage.name);\r\n\r\n    if (this.currentLanguage.name === LanguagesEnum.English) {\r\n      this.dateFns = new DateFnsUtils({ locale: enLocale });\r\n    } else if (this.currentLanguage.name === LanguagesEnum.Hebrew) {\r\n      this.dateFns = new DateFnsUtils({ locale: heLocale });\r\n    } else if (this.currentLanguage.name === LanguagesEnum.Russian) {\r\n      this.dateFns = new DateFnsUtils({ locale: ruLocale });\r\n    }\r\n  };\r\n\r\n  private loadCurrencies = async () => {\r\n    this.currencies = [];\r\n\r\n    const currencies = await this.cacheService.get<CurrencyEntry>(\r\n      'allCurrencies',\r\n      CurrencyEntry,\r\n      true\r\n    );\r\n    if (currencies && currencies.length) {\r\n      this.currencies = currencies;\r\n    } else {\r\n      this.currencies.push({ name: 'USD', symbol: '$' });\r\n      this.currencies.push({ name: 'EUR', symbol: '€' });\r\n      this.currencies.push({ name: 'ILS', symbol: '₪' });\r\n    }\r\n    const currency = await this.cacheService.get<String>('currency', String);\r\n    this.defaultCurrency =\r\n      this.currencies.find((c) => c.name === currency) || new CurrencyEntry();\r\n  };\r\n\r\n  @action addNewCurrency = async (\r\n    translate: TranslateEntry,\r\n    currency: CurrencyEntry\r\n  ) => {\r\n    const result = new ErrorEntry();\r\n    if (!currency.name) {\r\n      result.addError(translate.CurrencyNameIsRequired);\r\n    }\r\n    if (!currency.symbol) {\r\n      result.addError(translate.CurrencySymbolIsRequired);\r\n    }\r\n    if (this.currencies.some((c) => c.name === currency.name)) {\r\n      result.addError(translate.CurrencyWithThisNameIsAlreadyExists);\r\n    }\r\n    if (result.success) {\r\n      this.currencies.push(currency);\r\n      await this.cacheService.add('allCurrencies', this.currencies);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action saveFirstTimeOptions = async (\r\n    translate: TranslateEntry,\r\n    languageName: string,\r\n    currencyName: string\r\n  ) => {\r\n    const result = new ErrorEntry();\r\n    if (!languageName) {\r\n      result.addError(translate.LanguageSelectionIsRequired);\r\n    }\r\n    if (!currencyName) {\r\n      result.addError(translate.CurrencySelectionIsRequired);\r\n    }\r\n    if (result.success) {\r\n      await this.changeLanguage(languageName);\r\n      await this.changeCurrency(currencyName);\r\n      await this.cacheService.add('firstTimeOptionsSelected', true);\r\n      this.firstTimeOptionsSelected = true;\r\n    }\r\n    return result;\r\n  };\r\n\r\n  @action getCurrencyByName = (name: string) => {\r\n    const currency = this.currencies.find((c) => c.name === name);\r\n    return currency || this.defaultCurrency || new CurrencyEntry();\r\n  };\r\n\r\n  @action setThemeLoaded = (loaded: boolean) => {\r\n    this.themeLoaded = loaded;\r\n  };\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport TranslateEntry from '../models/entries/TranslateEntry';\r\nimport CacheService from '../services/CacheService';\r\nimport Helpers from '../utility/Helpers';\r\n\r\nclass TranslatesStore {\r\n  @observable translate: TranslateEntry;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n    this.translate = new TranslateEntry();\r\n\r\n    this.cacheService.get<String>('language', String).then((l) => {\r\n      this.loadTranslate(l || 'en-US');\r\n    });\r\n  }\r\n\r\n  @action loadTranslate = async (language: string) => {\r\n    this.translate = Helpers.getTranslateByLanguage(language);\r\n  };\r\n}\r\n\r\nexport default TranslatesStore;\r\n","import { observable, action } from 'mobx';\r\n\r\nexport default class FormatsStore {\r\n  @observable numberWithDigits = new Intl.NumberFormat('en-US', {\r\n    // maximumFractionDigits: 2,\r\n  });\r\n\r\n  @action localeChanged = (locale: string) => {\r\n    if (locale) {\r\n      this.numberWithDigits = new Intl.NumberFormat(locale);\r\n    }\r\n  };\r\n}\r\n","import CacheService from '../services/CacheService';\r\nimport AppStore from './AppStore';\r\nimport ServicesStore from './ServicesStore';\r\nimport TypesStore from './TypesStore';\r\nimport IconsStore from './IconsStore';\r\nimport CashStore from './CashStore';\r\nimport PropertiesStore from './PropertiesStore';\r\nimport TranslatesStore from './TranslatesStore';\r\nimport FormatsStore from './FormatsStore';\r\n\r\nconst appStore = new AppStore();\r\nconst cacheService = new CacheService(appStore);\r\nconst servicesStore = new ServicesStore(cacheService);\r\nappStore.services = servicesStore;\r\nconst cashStore = new CashStore(cacheService);\r\nconst typesStore = new TypesStore(cacheService);\r\nconst iconsStore = new IconsStore(cacheService);\r\nconst formatsStore = new FormatsStore();\r\nconst propertiesStore = new PropertiesStore(cacheService, formatsStore);\r\nconst translatesStore = new TranslatesStore(cacheService);\r\n\r\nconst stores = {\r\n  appStore,\r\n  cashStore,\r\n  typesStore,\r\n  iconsStore,\r\n  propertiesStore,\r\n  translatesStore,\r\n  formatsStore,\r\n};\r\n\r\nexport default stores;\r\n","import { Provider } from 'mobx-react';\r\nimport React from 'react';\r\nimport ThemeCreator from './components/ThemeCreator/ThemeCreator';\r\nimport store from './stores';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <ThemeCreator />\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
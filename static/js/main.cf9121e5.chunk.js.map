{"version":3,"sources":["components/IconsChooser/IconsChooser.module.css","App.module.css","components/CashPanel/CashPanel.module.css","components/TypeEditPanel/TypeEditPanel.module.css","components/Body/Body.module.css","components/Menu/Menu.module.css","stores/UseStores.ts","utility/Helpers.ts","models/Enum.ts","components/CashPanel/CashPanel.tsx","components/RecordsPanel/RecordsPanel.tsx","components/TypesPanel/TypesPanel.tsx","components/MenuPanel/MenuPanel.tsx","utility/UseDebounce.tsx","components/IconsChooser/IconsChooser.tsx","components/TypeEditPanel/TypeEditPanel.tsx","routes/Routes.ts","routes/RouteWithSubRoutes.tsx","components/Body/Body.tsx","components/LinkTab/LinkTab.tsx","components/Menu/Menu.tsx","services/CacheService.ts","stores/AppStore.ts","stores/ServicesStore.ts","stores/TypesStore.ts","stores/IconsStore.ts","stores/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStores","useContext","MobXProviderContext","store","Helpers","combineStyles","result","styles","length","otherStyles","slice","forEach","s","Object","keys","k","MenuTypesEnum","IconTypesEnum","useStyles","makeStyles","theme","createStyles","tabPanel","gridGap","spacing","cardLabelText","marginTop","color","palette","text","primary","CashPanel","observer","typesStore","css","classes","useTheme","getThemeColorStyle","split","p","Grid","container","className","grid","types","map","type","key","name","item","xs","alignItems","justify","IconButton","card","label","cardLabel","IconComponent","style","iconColor","fontSize","cardIcon","Typography","variant","RecordsPanel","TypesPanel","List","component","list","ListItem","button","ListItemAvatar","ListItemText","primaryTypographyProps","Divider","MenuPanel","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchInput","typesSelectChips","marginRight","paddingLeft","paddingRight","typesSelectChip","foundedTotalCount","foundedIconsContainer","foundedIconsIconFont","IconsChooser","iconsStore","React","Filled","typeValue","setTypeValue","filter","setFilter","page","debouncedSearchFilter","debouncedSearchTypeValue","searchIconsByFilterAndPage","FormControl","typeSelect","fullWidth","InputLabel","id","Select","labelId","multiple","onChange","newValue","target","input","Input","renderValue","selected","Chip","Array","from","iconsTypes","MenuItem","Checkbox","checked","indexOf","get","placeholder","newFilter","startAdornment","InputAdornment","position","Icon","foundedIcons","icon","foundedIconsIcon","getIconRightStringNameForFontToShow","modalContainer","zIndex","modal","background","paper","firstBar","light","secondBar","dark","closeIcon","default","doneIcon","body","padding","backdrop","colorDialogBox","colorDialogHeader","minHeight","mixins","toolbar","colorDialogBody","colorDialogFooter","iconDialogBox","iconDialogHeader","iconDialogBody","paddingBottom","iconDialogFooter","TypeEditPanel","colorRef","useRef","colorPickerOpened","setColorPickerOpened","colorHandleClose","main","setColor","appliedColor","setAppliedColor","iconRef","iconPickerOpened","setIconPickerOpened","iconHandleClose","setIcon","setAppliedIcon","Fade","in","timeout","Slide","direction","mountOnEnter","unmountOnExit","Box","overlay","display","AppBar","Toolbar","emptyBox","Close","Done","TextField","error","helperText","ref","select","disabled","InputLabelProps","SelectProps","InputProps","onClick","Backdrop","open","Popper","anchorEl","current","role","undefined","transition","disablePortal","ClickAwayListener","onClickAway","Paper","pickerProps","hex","Button","Dialog","fullScreen","routes","path","exact","components","Cash","Records","Types","Menu","RouteWithSubRoutes","route","render","props","isArray","Component","index","fab","bottom","right","Body","appStore","i","selectedMenuUrl","to","prefix","getAddButtonLinkUrl","Fab","size","aria-label","LinkTab","Tab","Link","event","currentUrl","currentTarget","pathname","preventDefault","menuIcon","comboButton","searchIcon","history","useHistory","loadSelectedMenuIndex","location","listener","listen","menuTabProps","href","selectedMenuIndex","headerTitle","headerBox","endIcon","ArrowDropDown","comboButtonTextBox","Date","toDateString","Search","Tabs","setSelectedMenuIndex","AttachMoney","MenuBook","MoreHoriz","CacheService","this","then","r","version","clear","add","entry","entryStr","JSON","stringify","date","localStorage","setItem","validAt","enableCache","getItem","console","log","parsedResult","parse","AppStore","AppJson","services","observable","action","url","urlParts","ServicesStore","cache","TypesStore","initializeDefaultTypes","push","Fastfood","LocalGroceryStore","DirectionsBus","LocalMall","LocalGasStation","ChildFriendly","ImportantDevices","MoreVert","IconsStore","cacheService","iconName","resultStr","toLowerCase","join","numberMatch","match","substring","Map","set","Outlined","Rounded","TwoTone","toString","Sharp","allIcons","filledIcons","outlinedIcons","roundedIcons","twoToneIcons","sharpIcons","AllIcons","allIconsForCache","lowerCasedFilter","workingArray","concat","iconsOnOnePage","servicesStore","stores","App","CssBaseline","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.cf9121e5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typesSelectChips\":\"IconsChooser_typesSelectChips__344ua\",\"foundedIconsContainer\":\"IconsChooser_foundedIconsContainer__3ZKEM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__3YSyc\",\"footer\":\"App_footer__1a6yw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CashPanel_grid__3Yt1q\",\"card\":\"CashPanel_card__3Dg9S\",\"cardLabel\":\"CashPanel_cardLabel__1CDU0\",\"lastCard\":\"CashPanel_lastCard__1djZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"TypeEditPanel_modalContainer__Xyyno\",\"emptyBox\":\"TypeEditPanel_emptyBox__2ZWiO\",\"body\":\"TypeEditPanel_body__A7DqY\",\"iconDialogBox\":\"TypeEditPanel_iconDialogBox__31J6j\",\"colorDialogHeader\":\"TypeEditPanel_colorDialogHeader__GR8Bl\",\"iconDialogHeader\":\"TypeEditPanel_iconDialogHeader__1HUpM\",\"iconDialogBody\":\"TypeEditPanel_iconDialogBody__alXqP\",\"colorDialogFooter\":\"TypeEditPanel_colorDialogFooter__yjYMI\",\"iconDialogFooter\":\"TypeEditPanel_iconDialogFooter__3TTmf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__1dZJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBox\":\"Menu_headerBox__1LOcR\",\"headerTitle\":\"Menu_headerTitle__3C12o\",\"comboButton\":\"Menu_comboButton__3sFMW\",\"comboButtonTextBox\":\"Menu_comboButtonTextBox__3mukI\"};","import { MobXProviderContext } from 'mobx-react';\r\nimport { useContext } from 'react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext).store;\r\n};\r\nexport default useStores;\r\n","class Helpers {\r\n  static combineStyles = (...styles: any) => {\r\n    let result: any;\r\n    if (styles.length) {\r\n      result = { ...styles[0] };\r\n      const otherStyles = styles.slice(1);\r\n      if (otherStyles.length) {\r\n        otherStyles.forEach((s: any) => {\r\n          Object.keys(s).forEach((k: string) => {\r\n            if (!result[k]) {\r\n              result[k] = s[k];\r\n            } else {\r\n              result[k] += ` ${s[k]}`;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default Helpers;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport enum MenuTypesEnum {\r\n  Cash = 'cash',\r\n  Records = 'records',\r\n  Types = 'types',\r\n  Menu = 'menu',\r\n}\r\n\r\nexport enum IconTypesEnum {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  Rounded = 'Rounded',\r\n  TwoTone = 'Two tone',\r\n  Sharp = 'Sharp',\r\n}\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabPanel: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CashPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <Grid container className={css.grid} spacing={2}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <Grid\r\n          key={type.name}\r\n          item\r\n          xs\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <IconButton className={css.card} classes={{ label: css.cardLabel }}>\r\n            <type.IconComponent\r\n              style={{\r\n                color: getThemeColorStyle(type.iconColor),\r\n                fontSize: '2rem',\r\n              }}\r\n              className={css.cardIcon}\r\n            />\r\n            <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n              {type.label}\r\n            </Typography>\r\n          </IconButton>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CashPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst RecordsPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <div>Not realized yet</div>;\r\n});\r\n\r\nexport default RecordsPanel;\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypesPanel.module.css';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst TypesPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  const css = Helpers.combineStyles({}, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={css.list}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <div key={type.name}>\r\n          <ListItem button>\r\n            <ListItemAvatar>\r\n              <type.IconComponent\r\n                style={{\r\n                  color: getThemeColorStyle(type.iconColor),\r\n                  fontSize: '2rem',\r\n                }}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={type.label}\r\n              primaryTypographyProps={{ variant: 'subtitle1' }}\r\n            />\r\n          </ListItem>\r\n          <Divider component=\"div\" />\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default TypesPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst MenuPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <></>;\r\n});\r\n\r\nexport default MenuPanel;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  createStyles,\r\n  FormControl,\r\n  Icon,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  Typography,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport IconsStore from '../../stores/IconsStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './IconsChooser.module.css';\r\nimport useDebounce from '../../utility/UseDebounce';\r\nimport { IconTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchInput: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    typesSelectChips: {\r\n      marginTop: -theme.spacing(1),\r\n      marginRight: -theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    typesSelectChip: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    foundedTotalCount: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsIconFont: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst IconsChooser = observer(() => {\r\n  const { iconsStore }: { iconsStore: IconsStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const [typeValue, setTypeValue] = React.useState([IconTypesEnum.Filled]);\r\n  const onTypeValueChange = (newValue: any) => {\r\n    setTypeValue(newValue.target.value);\r\n  };\r\n  const onTypeRenderValue = (selected: any) => {\r\n    return (\r\n      <div className={css.typesSelectChips}>\r\n        {(selected as string[]).map((value) => (\r\n          <Chip key={value} label={value} className={css.typesSelectChip} />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const [filter, setFilter] = React.useState('');\r\n  const [page, setPage] = React.useState(1);\r\n  const searchIcons = () => {\r\n    return iconsStore.searchIconsByFilterAndPage(filter, typeValue, page);\r\n  };\r\n  const debouncedSearchFilter = useDebounce(filter, 500);\r\n  const debouncedSearchTypeValue = useDebounce(typeValue, 1000);\r\n  const filterChanged = (newFilter: any) => {\r\n    setFilter(newFilter.target.value);\r\n  };\r\n  React.useEffect(searchIcons, [\r\n    debouncedSearchFilter,\r\n    debouncedSearchTypeValue,\r\n  ]);\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.typeSelect} fullWidth>\r\n        <InputLabel id=\"types-select-label\">Icon types</InputLabel>\r\n        <Select\r\n          labelId=\"types-select-label\"\r\n          multiple\r\n          fullWidth\r\n          value={typeValue}\r\n          onChange={onTypeValueChange}\r\n          input={<Input />}\r\n          renderValue={onTypeRenderValue}\r\n        >\r\n          {Array.from(iconsStore.iconsTypes.keys()).map((k: IconTypesEnum) => (\r\n            <MenuItem key={k} value={k}>\r\n              <Checkbox checked={typeValue.indexOf(k) > -1} />\r\n              <ListItemText primary={iconsStore.iconsTypes.get(k)} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Input\r\n        fullWidth\r\n        placeholder=\"Enter icon name to search\"\r\n        value={filter}\r\n        onChange={filterChanged}\r\n        className={css.searchInput}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <Icon>search</Icon>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      <div className={css.foundedTotalCount}>\r\n        <Typography variant=\"caption\">\r\n          {iconsStore.foundedTotalCount} matching results\r\n        </Typography>\r\n      </div>\r\n      <div className={css.foundedIconsContainer}>\r\n        {iconsStore.foundedIcons.map((icon: string) => (\r\n          <IconButton key={icon} className={css.foundedIconsIcon}>\r\n            <Icon className={css.foundedIconsIconFont}>\r\n              {iconsStore.getIconRightStringNameForFontToShow(icon)}\r\n            </Icon>\r\n          </IconButton>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default IconsChooser;\r\n","import {\r\n  AppBar,\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  ClickAwayListener,\r\n  createStyles,\r\n  Dialog,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Popper,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { Close as CloseIcon, Done as DoneIcon } from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport Helpers from '../../utility/Helpers';\r\nimport IconsChooser from '../IconsChooser/IconsChooser';\r\nimport classes from './TypeEditPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    closeIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    doneIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogBox: {\r\n      // background: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    colorDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    colorDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    iconDialogBox: {\r\n      // background: theme.palette.background.paper,\r\n      // zIndex: theme.zIndex.modal,\r\n    },\r\n    iconDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    iconDialogBody: {\r\n      padding: theme.spacing(2),\r\n      paddingBottom: 0,\r\n    },\r\n    iconDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst TypeEditPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const colorRef = React.useRef<HTMLDivElement>(null);\r\n  const [colorPickerOpened, setColorPickerOpened] = React.useState(false);\r\n  const colorHandleOpen = () => {\r\n    setColorPickerOpened(true);\r\n  };\r\n  const colorHandleClose = () => {\r\n    setColorPickerOpened(false);\r\n  };\r\n  const [color, setColor] = React.useState(theme.palette.primary.main);\r\n  const [appliedColor, setAppliedColor] = React.useState(\r\n    theme.palette.primary.main\r\n  );\r\n  const colorChange = (pickerProps: any) => {\r\n    setColor(pickerProps.hex);\r\n  };\r\n  const applyColorSelect = () => {\r\n    setAppliedColor(color);\r\n    colorHandleClose();\r\n  };\r\n  const cancelColorSelect = () => {\r\n    setColor(appliedColor);\r\n    colorHandleClose();\r\n  };\r\n\r\n  const iconRef = React.useRef<HTMLDivElement>(null);\r\n  const [iconPickerOpened, setIconPickerOpened] = React.useState(false);\r\n  const iconHandleOpen = () => {\r\n    setIconPickerOpened(true);\r\n  };\r\n  const iconHandleClose = () => {\r\n    setIconPickerOpened(false);\r\n  };\r\n  const [icon, setIcon] = React.useState('');\r\n  const [appliedIcon, setAppliedIcon] = React.useState('');\r\n  const iconChange = (newIcon: string) => {\r\n    setIcon(newIcon);\r\n  };\r\n  const applyIconSelect = () => {\r\n    setAppliedIcon(icon);\r\n    iconHandleClose();\r\n  };\r\n  const cancelIconSelect = () => {\r\n    setIcon(appliedColor);\r\n    iconHandleClose();\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <Box\r\n            className={css.overlay}\r\n            style={{ display: colorPickerOpened ? 'block' : 'none' }}\r\n          />\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">Новый тип</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              <IconButton>\r\n                <CloseIcon className={css.closeIcon} />\r\n              </IconButton>\r\n              <IconButton>\r\n                <DoneIcon className={css.doneIcon} />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error\r\n              fullWidth\r\n              label=\"Name\"\r\n              helperText=\"Type name is required\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Position\"\r\n              helperText=\"If empty then it will be placed to the end of list\"\r\n            />\r\n            <TextField\r\n              ref={colorRef}\r\n              select\r\n              disabled\r\n              fullWidth\r\n              label=\"Color\"\r\n              InputLabelProps={{ style: { color: appliedColor } }}\r\n              SelectProps={{ style: { color: appliedColor } }}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Icon>stop</Icon>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              value={0}\r\n              onClick={colorHandleOpen}\r\n            >\r\n              <MenuItem value={0}>{appliedColor}</MenuItem>\r\n            </TextField>\r\n            <Backdrop open={colorPickerOpened} className={css.backdrop}>\r\n              <Popper\r\n                open={colorPickerOpened}\r\n                anchorEl={colorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                className={css.colorDialogBox}\r\n              >\r\n                <ClickAwayListener onClickAway={colorHandleClose}>\r\n                  <Paper>\r\n                    <div className={css.colorDialogHeader}>\r\n                      <Typography variant=\"h6\">Выберите цвет</Typography>\r\n                    </div>\r\n                    <div className={css.colorDialogBody}>\r\n                      <ChromePicker color={color} onChange={colorChange} />\r\n                    </div>\r\n                    <div className={css.colorDialogFooter}>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={applyColorSelect}\r\n                      >\r\n                        Выбрать\r\n                      </Button>\r\n                      <Button variant=\"contained\" onClick={cancelColorSelect}>\r\n                        Отмена\r\n                      </Button>\r\n                    </div>\r\n                  </Paper>\r\n                </ClickAwayListener>\r\n              </Popper>\r\n            </Backdrop>\r\n            <TextField\r\n              ref={iconRef}\r\n              select\r\n              disabled\r\n              fullWidth\r\n              label=\"Icon\"\r\n              value={0}\r\n              SelectProps={{ style: { color: appliedColor } }}\r\n              onClick={iconHandleOpen}\r\n            >\r\n              <MenuItem value={0}>\r\n                <Icon>apps</Icon>\r\n              </MenuItem>\r\n            </TextField>\r\n            <Dialog\r\n              open={iconPickerOpened}\r\n              className={css.iconDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.iconDialogBox}>\r\n                <div className={css.iconDialogHeader}>\r\n                  <Typography variant=\"h6\">Выберите иконку</Typography>\r\n                </div>\r\n                <div className={css.iconDialogBody}>\r\n                  <IconsChooser />\r\n                </div>\r\n                <div className={css.iconDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={applyIconSelect}\r\n                  >\r\n                    Выбрать\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={cancelIconSelect}>\r\n                    Отмена\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default TypeEditPanel;\r\n","import CashPanel from '../components/CashPanel/CashPanel';\r\nimport RecordsPanel from '../components/RecordsPanel/RecordsPanel';\r\nimport TypesPanel from '../components/TypesPanel/TypesPanel';\r\nimport MenuPanel from '../components/MenuPanel/MenuPanel';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\nimport TypeEditPanel from '../components/TypeEditPanel/TypeEditPanel';\r\n\r\nconst routes = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Records}`,\r\n    exact: true,\r\n    components: RecordsPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}`,\r\n    exact: true,\r\n    components: TypesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/add`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}`,\r\n    exact: true,\r\n    components: MenuPanel,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst RouteWithSubRoutes = (route: any) => {\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props: any) => {\r\n        if (Array.isArray(route.components)) {\r\n          return route.components.map((Component: any, index: number) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <Component key={index} {...props} routes={route.routes} />\r\n          ));\r\n        }\r\n        return <route.components {...props} routes={route.routes} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSubRoutes;\r\n","import { createStyles, Fab, makeStyles, Theme } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../routes/Routes';\r\nimport RouteWithSubRoutes from '../../routes/RouteWithSubRoutes';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './Body.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Body = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const getAddButtonLinkUrl = () => {\r\n    let prefix = appStore.selectedMenuUrl;\r\n    if (prefix === '/') {\r\n      prefix += MenuTypesEnum.Cash;\r\n    }\r\n    return `${appStore.selectedMenuUrl}/add`;\r\n  };\r\n\r\n  return (\r\n    <div className={css.body}>\r\n      {routes.map((route, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RouteWithSubRoutes key={i} {...route} />\r\n      ))}\r\n      {appStore.selectedMenuUrl !== `/${MenuTypesEnum.Menu}` && (\r\n        <Link to={getAddButtonLinkUrl()}>\r\n          <Fab\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={css.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Body;\r\n","import { Tab } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  to: string;\r\n  icon?: any;\r\n  currentUrl?: string;\r\n}\r\n\r\nconst LinkTab = observer((props: IProps) => {\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const linkClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    if (props.currentUrl === event.currentTarget.pathname) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      to={props.to}\r\n      label={props.label}\r\n      icon={props.icon}\r\n      onClick={linkClick}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LinkTab;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  List as ListIcon,\r\n  Menu as MenuIcon,\r\n  MenuBook as MenuBookIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Search as SearchIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helpers from '../../utility/Helpers';\r\nimport LinkTab from '../LinkTab/LinkTab';\r\nimport classes from './Menu.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    menuIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    comboButton: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    searchIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n  const menuTabChanged = (event: any, newValue: number) => {\r\n    appStore.setSelectedMenuIndex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    const listener = history.listen(() => {\r\n      appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    });\r\n\r\n    return () => {\r\n      listener();\r\n    };\r\n  });\r\n\r\n  const menuTabProps = (name: string, href?: string) => {\r\n    return {\r\n      id: `menu-tab-${name}`,\r\n      'aria-controls': `menu-tab-${name}`,\r\n      to: href || `/${name}`,\r\n      currentUrl: appStore.selectedMenuUrl,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={css.firstBar}>\r\n        <Toolbar>\r\n          {appStore.selectedMenuIndex === 0 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Внести оплату\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 1 && (\r\n            <Box className={css.headerBox}>\r\n              <IconButton>\r\n                <MenuIcon className={css.menuIcon} />\r\n              </IconButton>\r\n              <Button\r\n                className={css.comboButton}\r\n                endIcon={<ArrowDropDownIcon />}\r\n              >\r\n                <span className={css.comboButtonTextBox}>\r\n                  <span>{new Date().toDateString()}</span>\r\n                  <span>Записей 21</span>\r\n                </span>\r\n              </Button>\r\n              <IconButton>\r\n                <SearchIcon className={css.searchIcon} />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {appStore.selectedMenuIndex === 2 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Типы\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 3 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Еще\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n        <Tabs\r\n          value={appStore.selectedMenuIndex}\r\n          onChange={menuTabChanged}\r\n          aria-label=\"menu tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <LinkTab {...menuTabProps('cash', '/')} icon={<AttachMoneyIcon />} />\r\n          <LinkTab {...menuTabProps('records')} icon={<MenuBookIcon />} />\r\n          <LinkTab {...menuTabProps('types')} icon={<ListIcon />} />\r\n          <LinkTab {...menuTabProps('menu')} icon={<MoreHorizIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Menu;\r\n","import AppStore from '../stores/AppStore';\r\n\r\nexport default class CacheService {\r\n  private appStore: AppStore;\r\n\r\n  constructor(appStore: AppStore) {\r\n    this.appStore = appStore;\r\n    this.get('appVersion', new Date()).then((r) => {\r\n      if (appStore.version !== r) {\r\n        this.clear();\r\n        this.add('appVersion', appStore.version);\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async add(key: string, entry: any) {\r\n    let entryStr: string;\r\n    if (typeof entry !== 'string') {\r\n      entryStr = JSON.stringify({ date: new Date(), entry });\r\n    } else {\r\n      entryStr = entry;\r\n    }\r\n    const result = await localStorage.setItem(key, entryStr);\r\n    return result;\r\n  }\r\n\r\n  public async get<T>(key: string, validAt?: Date): Promise<any> {\r\n    let result: string | null = null;\r\n    if (!this.appStore.enableCache) {\r\n      return result;\r\n    }\r\n    result = await localStorage.getItem(key);\r\n    if (result) {\r\n      console.log(`Key: ${key} loaded from cache`);\r\n    }\r\n    if (!result || !result.length) {\r\n      return result;\r\n    }\r\n    try {\r\n      const parsedResult = JSON.parse(result);\r\n      if (validAt) {\r\n        if (new Date(parsedResult.date) < validAt) {\r\n          return parsedResult.entry;\r\n        }\r\n        console.log(\r\n          `Key: ${key} date expired. ValidAt: ${validAt}. ExpiredAt: ${parsedResult.date}`\r\n        );\r\n        return null;\r\n      }\r\n      return parsedResult.entry;\r\n    } catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async clear() {\r\n    await localStorage.clear();\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport * as AppJson from '../../package.json';\r\nimport ServicesStore from './ServicesStore';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\n\r\nclass AppStore {\r\n  version = AppJson.version;\r\n  services!: ServicesStore;\r\n\r\n  // NOTE: when application is change version, cache will be cleared\r\n  @observable enableCache = true;\r\n  @observable selectedMenuIndex = 0;\r\n  @observable selectedMenuUrl = '/';\r\n\r\n  @action setSelectedMenuIndex = (newValue: number) => {\r\n    this.selectedMenuIndex = newValue;\r\n  };\r\n\r\n  @action loadSelectedMenuIndex = (url: string) => {\r\n    const urlParts = url.split('/');\r\n    if (urlParts.length > 1) {\r\n      if (urlParts[1] === MenuTypesEnum.Records) {\r\n        this.selectedMenuIndex = 1;\r\n      } else if (urlParts[1] === MenuTypesEnum.Types) {\r\n        this.selectedMenuIndex = 2;\r\n      } else if (urlParts[1] === MenuTypesEnum.Menu) {\r\n        this.selectedMenuIndex = 3;\r\n      } else {\r\n        this.selectedMenuIndex = 0;\r\n      }\r\n    } else {\r\n      this.selectedMenuIndex = 0;\r\n    }\r\n    if (this.selectedMenuIndex === 0) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Cash}`;\r\n    } else if (this.selectedMenuIndex === 1) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Records}`;\r\n    } else if (this.selectedMenuIndex === 2) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Types}`;\r\n    } else if (this.selectedMenuIndex === 3) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Menu}`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default AppStore;\r\n","import CacheService from '../services/CacheService';\r\n\r\nclass ServicesStore {\r\n  cache: CacheService;\r\n\r\n  constructor(cache: CacheService) {\r\n    this.cache = cache;\r\n  }\r\n}\r\n\r\nexport default ServicesStore;\r\n","import {\r\n  ChildFriendly,\r\n  DirectionsBus,\r\n  Fastfood,\r\n  ImportantDevices,\r\n  LocalGasStation,\r\n  LocalGroceryStore,\r\n  LocalMall,\r\n  MoreVert,\r\n} from '@material-ui/icons';\r\nimport { observable } from 'mobx';\r\nimport TypeEntry from '../models/entries/TypeEntry';\r\n\r\nclass TypesStore {\r\n  @observable types!: TypeEntry[];\r\n\r\n  constructor() {\r\n    this.initializeDefaultTypes();\r\n  }\r\n\r\n  private initializeDefaultTypes = () => {\r\n    this.types = [];\r\n\r\n    this.types.push({\r\n      IconComponent: Fastfood,\r\n      name: 'menuFood',\r\n      iconColor: 'palette.secondary.dark',\r\n      label: 'Еда',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalGroceryStore,\r\n      name: 'menuStore',\r\n      iconColor: 'palette.success.dark',\r\n      label: 'Магазин',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: DirectionsBus,\r\n      name: 'menuBus',\r\n      iconColor: 'palette.warning.dark',\r\n      label: 'Автобус',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalMall,\r\n      name: 'menuClothes',\r\n      iconColor: 'palette.primary.dark',\r\n      label: 'Вещи',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalGasStation,\r\n      name: 'menuGasStation',\r\n      iconColor: 'palette.primary.light',\r\n      label: 'Заправка',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: ChildFriendly,\r\n      name: 'menuChilds',\r\n      iconColor: 'palette.warning.light',\r\n      label: 'Дети',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: ImportantDevices,\r\n      name: 'menuServices',\r\n      iconColor: 'palette.secondary.light',\r\n      label: 'Услуги',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: MoreVert,\r\n      name: 'menuOther',\r\n      iconColor: 'palette.success.light',\r\n      label: 'Другое',\r\n    });\r\n  };\r\n}\r\n\r\nexport default TypesStore;\r\n","import * as AllIcons from '@material-ui/icons';\r\nimport { action, observable } from 'mobx';\r\nimport CacheService from '../services/CacheService';\r\nimport { IconTypesEnum } from '../models/Enum';\r\n\r\nclass IconsStore {\r\n  @observable iconsTypes: Map<IconTypesEnum, string>;\r\n  @observable filledIcons: string[] = [];\r\n  @observable outlinedIcons: string[] = [];\r\n  @observable roundedIcons: string[] = [];\r\n  @observable twoToneIcons: string[] = [];\r\n  @observable sharpIcons: string[] = [];\r\n  @observable iconsOnOnePage = 100;\r\n  @observable foundedIcons: string[] = [];\r\n  @observable foundedTotalCount = 0;\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n\r\n    this.iconsTypes = new Map();\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Filled,\r\n      IconTypesEnum[IconTypesEnum.Filled]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Outlined,\r\n      IconTypesEnum[IconTypesEnum.Outlined]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Rounded,\r\n      IconTypesEnum[IconTypesEnum.Rounded]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.TwoTone,\r\n      IconTypesEnum.TwoTone.toString()\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Sharp,\r\n      IconTypesEnum[IconTypesEnum.Sharp]\r\n    );\r\n\r\n    this.cacheService.get('allIcons').then((allIcons) => {\r\n      if (!allIcons) {\r\n        Object.keys(AllIcons).forEach((k: string) => {\r\n          if (\r\n            k.indexOf(IconTypesEnum.Outlined) ===\r\n            k.length - IconTypesEnum.Outlined.length\r\n          ) {\r\n            this.outlinedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Rounded) ===\r\n            k.length - IconTypesEnum.Rounded.length\r\n          ) {\r\n            this.roundedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.TwoTone) ===\r\n            k.length - IconTypesEnum.TwoTone.length\r\n          ) {\r\n            this.twoToneIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Sharp) ===\r\n            k.length - IconTypesEnum.Sharp.length\r\n          ) {\r\n            this.sharpIcons.push(k);\r\n          } else {\r\n            this.filledIcons.push(k);\r\n          }\r\n        });\r\n        const allIconsForCache = {\r\n          outlinedIcons: this.outlinedIcons,\r\n          roundedIcons: this.roundedIcons,\r\n          twoToneIcons: this.twoToneIcons,\r\n          sharpIcons: this.sharpIcons,\r\n          filledIcons: this.filledIcons,\r\n        };\r\n        this.cacheService.add('allIcons', allIconsForCache);\r\n      } else {\r\n        this.filledIcons = allIcons.filledIcons;\r\n        this.outlinedIcons = allIcons.outlinedIcons;\r\n        this.roundedIcons = allIcons.roundedIcons;\r\n        this.twoToneIcons = allIcons.twoToneIcons;\r\n        this.sharpIcons = allIcons.sharpIcons;\r\n      }\r\n    });\r\n  }\r\n\r\n  @action searchIconsByFilterAndPage = (\r\n    filter: string,\r\n    types: IconTypesEnum[],\r\n    page: number\r\n  ) => {\r\n    let result: string[] = [];\r\n    const lowerCasedFilter = filter.toLowerCase();\r\n    types.forEach((type: IconTypesEnum) => {\r\n      let workingArray: string[] | null = null;\r\n      if (type === IconTypesEnum.Filled) {\r\n        workingArray = this.filledIcons;\r\n      } else if (type === IconTypesEnum.Outlined) {\r\n        workingArray = this.outlinedIcons;\r\n      } else if (type === IconTypesEnum.Rounded) {\r\n        workingArray = this.roundedIcons;\r\n      } else if (type === IconTypesEnum.TwoTone) {\r\n        workingArray = this.twoToneIcons;\r\n      } else if (type === IconTypesEnum.Sharp) {\r\n        workingArray = this.sharpIcons;\r\n      }\r\n      if (workingArray) {\r\n        result = result.concat(\r\n          workingArray.filter(\r\n            (i: string) => i.toLowerCase().indexOf(lowerCasedFilter) !== -1\r\n          )\r\n        );\r\n      }\r\n    });\r\n    this.foundedTotalCount = result.length;\r\n    this.foundedIcons = result.slice(\r\n      (page - 1) * this.iconsOnOnePage,\r\n      page * this.iconsOnOnePage\r\n    );\r\n  };\r\n\r\n  getIconRightStringNameForFontToShow = (iconName: string) => {\r\n    const result = iconName.split(/(?=[A-Z])/);\r\n    let resultStr = result?.map((r) => r.toLowerCase()).join('_');\r\n    const numberMatch = resultStr.match(/[0-9]+/);\r\n    if (numberMatch?.index) {\r\n      resultStr = `${resultStr.substring(\r\n        0,\r\n        numberMatch.index\r\n      )}_${resultStr.substring(numberMatch.index)}`;\r\n    }\r\n    return resultStr;\r\n  };\r\n}\r\n\r\nexport default IconsStore;\r\n","import CacheService from '../services/CacheService';\r\nimport AppStore from './AppStore';\r\nimport ServicesStore from './ServicesStore';\r\nimport TypesStore from './TypesStore';\r\nimport IconsStore from './IconsStore';\r\n\r\nconst appStore = new AppStore();\r\nconst cacheService = new CacheService(appStore);\r\nconst servicesStore = new ServicesStore(cacheService);\r\nappStore.services = servicesStore;\r\nconst typesStore = new TypesStore();\r\nconst iconsStore = new IconsStore(cacheService);\r\n\r\nconst stores = {\r\n  appStore,\r\n  typesStore,\r\n  iconsStore,\r\n};\r\n\r\nexport default stores;\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport { Provider } from 'mobx-react';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport classes from './App.module.css';\r\nimport Body from './components/Body/Body';\r\nimport Menu from './components/Menu/Menu';\r\nimport store from './stores';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <CssBaseline />\r\n        <div className={classes.page}>\r\n          <Menu />\r\n          <Body />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
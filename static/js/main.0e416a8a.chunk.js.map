{"version":3,"sources":["components/IconsChooser/IconsChooser.module.css","App.module.css","components/CashPanel/CashPanel.module.css","components/TypeEditPanel/TypeEditPanel.module.css","components/Body/Body.module.css","components/Menu/Menu.module.css","stores/UseStores.ts","utility/Helpers.ts","models/Enum.ts","components/CashPanel/CashPanel.tsx","components/RecordsPanel/RecordsPanel.tsx","components/TypesPanel/TypesPanel.tsx","components/MenuPanel/MenuPanel.tsx","utility/UseDebounce.tsx","components/IconsChooser/IconsChooser.tsx","components/TypeEditPanel/TypeEditPanel.tsx","routes/Routes.ts","routes/RouteWithSubRoutes.tsx","components/Body/Body.tsx","components/LinkTab/LinkTab.tsx","components/Menu/Menu.tsx","services/CacheService.ts","stores/AppStore.ts","stores/ServicesStore.ts","stores/TypesStore.ts","stores/IconsStore.ts","stores/index.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","useStores","useContext","MobXProviderContext","store","Helpers","combineStyles","result","styles","length","otherStyles","slice","forEach","s","Object","keys","k","MenuTypesEnum","IconTypesEnum","useStyles","makeStyles","theme","createStyles","tabPanel","gridGap","spacing","cardLabelText","marginTop","color","palette","text","primary","CashPanel","observer","typesStore","css","classes","useTheme","getThemeColorStyle","split","p","Grid","container","className","grid","types","map","type","key","name","item","xs","alignItems","justify","IconButton","card","label","cardLabel","IconComponent","style","iconColor","fontSize","cardIcon","Typography","variant","RecordsPanel","TypesPanel","List","component","list","ListItem","button","ListItemAvatar","ListItemText","primaryTypographyProps","Divider","MenuPanel","useDebounce","value","delay","useState","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","searchInput","typesSelectChips","marginRight","paddingLeft","paddingRight","typesSelectChip","foundedTotalCount","foundedIconsContainer","foundedIconsIconFont","selectedIcon","secondary","main","pagination","IconsChooser","iconsStore","iconsButtonsContainerRef","React","useRef","Filled","typeValue","setTypeValue","filter","setFilter","page","setPage","debouncedSearchFilter","debouncedSearchTypeValue","debouncedSearchPage","current","scrollTop","searchIconsByFilterAndPage","setSelectedIcon","onIconClick","icon","iconRightName","currentTarget","querySelectorAll","innerText","FormControl","typeSelect","fullWidth","InputLabel","id","Select","labelId","multiple","onChange","newValue","target","input","Input","renderValue","selected","Chip","Array","from","iconsTypes","MenuItem","Checkbox","checked","indexOf","get","placeholder","newFilter","startAdornment","InputAdornment","position","Icon","ref","foundedIcons","getIconRightStringNameForFontToShow","onClick","foundedIconsButton","pagesCount","Pagination","count","size","event","newPage","modalContainer","zIndex","modal","background","paper","firstBar","light","secondBar","dark","closeIcon","default","doneIcon","body","padding","backdrop","colorDialogBox","colorDialogHeader","minHeight","mixins","toolbar","colorDialogBody","colorDialogFooter","iconDialogBox","iconDialogHeader","iconDialogBody","paddingBottom","iconDialogFooter","TypeEditPanel","colorRef","colorPickerOpened","setColorPickerOpened","colorHandleClose","setColor","appliedColor","setAppliedColor","iconRef","iconPickerOpened","setIconPickerOpened","iconHandleClose","setIcon","setAppliedIcon","Fade","in","timeout","Slide","direction","mountOnEnter","unmountOnExit","Box","overlay","display","AppBar","Toolbar","emptyBox","Close","Done","TextField","error","helperText","select","disabled","InputLabelProps","SelectProps","InputProps","Backdrop","open","Popper","anchorEl","role","undefined","transition","disablePortal","ClickAwayListener","onClickAway","Paper","pickerProps","hex","Button","Dialog","fullScreen","routes","path","exact","components","Cash","Records","Types","Menu","RouteWithSubRoutes","route","render","props","isArray","Component","index","fab","bottom","right","Body","appStore","i","selectedMenuUrl","to","prefix","getAddButtonLinkUrl","Fab","aria-label","LinkTab","Tab","Link","currentUrl","pathname","preventDefault","menuIcon","comboButton","searchIcon","history","useHistory","loadSelectedMenuIndex","location","listener","listen","menuTabProps","href","selectedMenuIndex","headerTitle","headerBox","endIcon","ArrowDropDown","comboButtonTextBox","Date","toDateString","Search","Tabs","setSelectedMenuIndex","AttachMoney","MenuBook","MoreHoriz","CacheService","this","then","r","version","clear","add","entry","entryStr","JSON","stringify","date","localStorage","setItem","validAt","enableCache","getItem","console","log","parsedResult","parse","AppStore","AppJson","services","observable","action","url","urlParts","ServicesStore","cache","TypesStore","initializeDefaultTypes","push","Fastfood","LocalGroceryStore","DirectionsBus","LocalMall","LocalGasStation","ChildFriendly","ImportantDevices","MoreVert","IconsStore","cacheService","iconName","resultStr","toLowerCase","join","numberMatch","match","substring","Map","set","Outlined","Rounded","TwoTone","toString","Sharp","allIcons","filledIcons","outlinedIcons","roundedIcons","twoToneIcons","sharpIcons","AllIcons","allIconsForCache","Math","ceil","iconsOnOnePage","computed","lowerCasedFilter","workingArray","concat","servicesStore","stores","App","CssBaseline","Boolean","window","hostname","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0e416a8a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"typesSelectChips\":\"IconsChooser_typesSelectChips__rNRQf\",\"foundedIconsContainer\":\"IconsChooser_foundedIconsContainer__9eTT8\",\"foundedIconsButton\":\"IconsChooser_foundedIconsButton__3wU-W\",\"pagination\":\"IconsChooser_pagination__1dXi5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"App_page__2L-Jj\",\"footer\":\"App_footer__12-B7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"CashPanel_grid__1M0h2\",\"card\":\"CashPanel_card__2ETq-\",\"cardLabel\":\"CashPanel_cardLabel__3f2v_\",\"lastCard\":\"CashPanel_lastCard__2tePY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modalContainer\":\"TypeEditPanel_modalContainer__o8c64\",\"emptyBox\":\"TypeEditPanel_emptyBox__2akL7\",\"body\":\"TypeEditPanel_body__2pBnt\",\"iconDialogBox\":\"TypeEditPanel_iconDialogBox__j1WSI\",\"colorDialogHeader\":\"TypeEditPanel_colorDialogHeader__2qD8B\",\"iconDialogHeader\":\"TypeEditPanel_iconDialogHeader__2Q3n4\",\"iconDialogBody\":\"TypeEditPanel_iconDialogBody__nr6zd\",\"colorDialogFooter\":\"TypeEditPanel_colorDialogFooter__2ZN7j\",\"iconDialogFooter\":\"TypeEditPanel_iconDialogFooter__3L6_X\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"Body_body__2G_GS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerBox\":\"Menu_headerBox__1Me5e\",\"headerTitle\":\"Menu_headerTitle__2LUUc\",\"comboButton\":\"Menu_comboButton__OoKdQ\",\"comboButtonTextBox\":\"Menu_comboButtonTextBox__1axJS\"};","import { MobXProviderContext } from 'mobx-react';\r\nimport { useContext } from 'react';\r\n\r\nconst useStores = () => {\r\n  return useContext(MobXProviderContext).store;\r\n};\r\nexport default useStores;\r\n","class Helpers {\r\n  static combineStyles = (...styles: any) => {\r\n    let result: any;\r\n    if (styles.length) {\r\n      result = { ...styles[0] };\r\n      const otherStyles = styles.slice(1);\r\n      if (otherStyles.length) {\r\n        otherStyles.forEach((s: any) => {\r\n          Object.keys(s).forEach((k: string) => {\r\n            if (!result[k]) {\r\n              result[k] = s[k];\r\n            } else {\r\n              result[k] += ` ${s[k]}`;\r\n            }\r\n          });\r\n        });\r\n      }\r\n    }\r\n    return result;\r\n  };\r\n}\r\n\r\nexport default Helpers;\r\n","// eslint-disable-next-line import/prefer-default-export\r\nexport enum MenuTypesEnum {\r\n  Cash = 'cash',\r\n  Records = 'records',\r\n  Types = 'types',\r\n  Menu = 'menu',\r\n}\r\n\r\nexport enum IconTypesEnum {\r\n  Filled = 'Filled',\r\n  Outlined = 'Outlined',\r\n  Rounded = 'Rounded',\r\n  TwoTone = 'Two tone',\r\n  Sharp = 'Sharp',\r\n}\r\n","import {\r\n  createStyles,\r\n  Grid,\r\n  IconButton,\r\n  makeStyles,\r\n  Theme,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './CashPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    tabPanel: {\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    cardLabelText: {\r\n      marginTop: theme.spacing(1),\r\n      color: theme.palette.text.primary,\r\n    },\r\n  })\r\n);\r\n\r\nconst CashPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <Grid container className={css.grid} spacing={2}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <Grid\r\n          key={type.name}\r\n          item\r\n          xs\r\n          container\r\n          alignItems=\"center\"\r\n          justify=\"center\"\r\n        >\r\n          <IconButton className={css.card} classes={{ label: css.cardLabel }}>\r\n            <type.IconComponent\r\n              style={{\r\n                color: getThemeColorStyle(type.iconColor),\r\n                fontSize: '2rem',\r\n              }}\r\n              className={css.cardIcon}\r\n            />\r\n            <Typography variant=\"subtitle1\" className={css.cardLabelText}>\r\n              {type.label}\r\n            </Typography>\r\n          </IconButton>\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n});\r\n\r\nexport default CashPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst RecordsPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <div>Not realized yet</div>;\r\n});\r\n\r\nexport default RecordsPanel;\r\n","import {\r\n  Divider,\r\n  List,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport TypeEntry from '../../models/entries/TypeEntry';\r\nimport TypesStore from '../../stores/TypesStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './TypesPanel.module.css';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst TypesPanel = observer(() => {\r\n  const { typesStore }: { typesStore: TypesStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  const css = Helpers.combineStyles({}, classes);\r\n  const theme = useTheme();\r\n\r\n  const getThemeColorStyle = (color?: string) => {\r\n    if (!color || !color.length) {\r\n      return '';\r\n    }\r\n    if (color[0] === '#') {\r\n      return color;\r\n    }\r\n    let result = theme as any;\r\n    color.split('.').forEach((p: string) => {\r\n      result = result[p];\r\n    });\r\n    return result;\r\n  };\r\n\r\n  return (\r\n    <List component=\"nav\" className={css.list}>\r\n      {typesStore.types.map((type: TypeEntry) => (\r\n        <div key={type.name}>\r\n          <ListItem button>\r\n            <ListItemAvatar>\r\n              <type.IconComponent\r\n                style={{\r\n                  color: getThemeColorStyle(type.iconColor),\r\n                  fontSize: '2rem',\r\n                }}\r\n              />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n              primary={type.label}\r\n              primaryTypographyProps={{ variant: 'subtitle1' }}\r\n            />\r\n          </ListItem>\r\n          <Divider component=\"div\" />\r\n        </div>\r\n      ))}\r\n    </List>\r\n  );\r\n});\r\n\r\nexport default TypesPanel;\r\n","import { observer } from 'mobx-react';\r\nimport React from 'react';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\nconst MenuPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  return <></>;\r\n});\r\n\r\nexport default MenuPanel;\r\n","import { useEffect, useState } from 'react';\r\n\r\nconst useDebounce = (value: any, delay: number) => {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [delay, value]);\r\n\r\n  return debouncedValue;\r\n};\r\n\r\nexport default useDebounce;\r\n","import {\r\n  Checkbox,\r\n  Chip,\r\n  createStyles,\r\n  FormControl,\r\n  Icon,\r\n  Input,\r\n  InputAdornment,\r\n  InputLabel,\r\n  ListItemText,\r\n  makeStyles,\r\n  MenuItem,\r\n  Select,\r\n  Theme,\r\n  Typography,\r\n  IconButton,\r\n} from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport Pagination from '@material-ui/lab/Pagination';\r\nimport IconsStore from '../../stores/IconsStore';\r\nimport useStores from '../../stores/UseStores';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './IconsChooser.module.css';\r\nimport useDebounce from '../../utility/UseDebounce';\r\nimport { IconTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    searchInput: {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n    typesSelectChips: {\r\n      marginTop: -theme.spacing(1),\r\n      marginRight: -theme.spacing(1),\r\n      paddingLeft: theme.spacing(1),\r\n      paddingRight: theme.spacing(1),\r\n    },\r\n    typesSelectChip: {\r\n      marginTop: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n    },\r\n    foundedTotalCount: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsContainer: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n    foundedIconsIconFont: {\r\n      color: theme.palette.text.primary,\r\n    },\r\n    selectedIcon: {\r\n      color: theme.palette.secondary.main,\r\n    },\r\n    pagination: {\r\n      marginTop: theme.spacing(1),\r\n    },\r\n  })\r\n);\r\n\r\nconst IconsChooser = observer(() => {\r\n  const { iconsStore }: { iconsStore: IconsStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const iconsButtonsContainerRef = React.useRef<HTMLDivElement>(null);\r\n\r\n  const [typeValue, setTypeValue] = React.useState([IconTypesEnum.Filled]);\r\n  const [filter, setFilter] = React.useState('');\r\n  const [page, setPage] = React.useState(1);\r\n  const onTypeValueChange = (newValue: any) => {\r\n    setPage(1);\r\n    setTypeValue(newValue.target.value);\r\n  };\r\n  const onTypeRenderValue = (selected: any) => {\r\n    return (\r\n      <div className={css.typesSelectChips}>\r\n        {(selected as string[]).map((value) => (\r\n          <Chip key={value} label={value} className={css.typesSelectChip} />\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n  const searchIcons = () => {\r\n    if (iconsButtonsContainerRef.current) {\r\n      iconsButtonsContainerRef.current.scrollTop = 0;\r\n    }\r\n    iconsStore.searchIconsByFilterAndPage(filter, typeValue, page);\r\n  };\r\n  const debouncedSearchFilter = useDebounce(filter, 500);\r\n  const debouncedSearchTypeValue = useDebounce(typeValue, 500);\r\n  const debouncedSearchPage = useDebounce(page, 500);\r\n  const filterChanged = (newFilter: any) => {\r\n    setPage(1);\r\n    setFilter(newFilter.target.value);\r\n  };\r\n  const onPageChange = (event: any, newPage: number) => {\r\n    setPage(newPage);\r\n  };\r\n  React.useEffect(searchIcons, [\r\n    debouncedSearchFilter,\r\n    debouncedSearchTypeValue,\r\n    debouncedSearchPage,\r\n  ]);\r\n\r\n  const [selectedIcon, setSelectedIcon] = React.useState('');\r\n  const onIconClick = (icon: any) => {\r\n    let iconRightName = icon.currentTarget.querySelectorAll(\r\n      '.material-icons'\r\n    )[0].innerText;\r\n    // Check if icon is already selected and unselect it\r\n    if (selectedIcon === iconRightName) {\r\n      iconRightName = '';\r\n    }\r\n    setSelectedIcon(iconRightName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <FormControl className={classes.typeSelect} fullWidth>\r\n        <InputLabel id=\"types-select-label\">Icon types</InputLabel>\r\n        <Select\r\n          labelId=\"types-select-label\"\r\n          multiple\r\n          fullWidth\r\n          value={typeValue}\r\n          onChange={onTypeValueChange}\r\n          input={<Input />}\r\n          renderValue={onTypeRenderValue}\r\n        >\r\n          {Array.from(iconsStore.iconsTypes.keys()).map((k: IconTypesEnum) => (\r\n            <MenuItem key={k} value={k}>\r\n              <Checkbox checked={typeValue.indexOf(k) > -1} />\r\n              <ListItemText primary={iconsStore.iconsTypes.get(k)} />\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n      <Input\r\n        fullWidth\r\n        placeholder=\"Enter icon name to search\"\r\n        value={filter}\r\n        onChange={filterChanged}\r\n        className={css.searchInput}\r\n        startAdornment={\r\n          <InputAdornment position=\"start\">\r\n            <Icon>search</Icon>\r\n          </InputAdornment>\r\n        }\r\n      />\r\n      <div className={css.foundedTotalCount}>\r\n        <Typography variant=\"caption\">\r\n          {iconsStore.foundedTotalCount} matching results\r\n        </Typography>\r\n      </div>\r\n      <div ref={iconsButtonsContainerRef} className={css.foundedIconsContainer}>\r\n        {iconsStore.foundedIcons.map((icon: string) => {\r\n          const iconRightName = iconsStore.getIconRightStringNameForFontToShow(\r\n            icon\r\n          );\r\n          return (\r\n            <IconButton\r\n              key={icon}\r\n              onClick={onIconClick}\r\n              className={css.foundedIconsButton}\r\n            >\r\n              <Icon\r\n                className={\r\n                  css.foundedIconsIconFont +\r\n                  (iconRightName === selectedIcon ? ` ${css.selectedIcon}` : '')\r\n                }\r\n              >\r\n                {iconRightName}\r\n              </Icon>\r\n            </IconButton>\r\n          );\r\n        })}\r\n      </div>\r\n      {iconsStore.pagesCount > 0 && (\r\n        <Pagination\r\n          className={css.pagination}\r\n          count={iconsStore.pagesCount}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          page={page}\r\n          onChange={onPageChange}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n});\r\n\r\nexport default IconsChooser;\r\n","import {\r\n  AppBar,\r\n  Backdrop,\r\n  Box,\r\n  Button,\r\n  ClickAwayListener,\r\n  createStyles,\r\n  Dialog,\r\n  Fade,\r\n  Icon,\r\n  IconButton,\r\n  InputAdornment,\r\n  makeStyles,\r\n  MenuItem,\r\n  Paper,\r\n  Popper,\r\n  Slide,\r\n  TextField,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n  useTheme,\r\n} from '@material-ui/core';\r\nimport { Close as CloseIcon, Done as DoneIcon } from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { ChromePicker } from 'react-color';\r\nimport Helpers from '../../utility/Helpers';\r\nimport IconsChooser from '../IconsChooser/IconsChooser';\r\nimport classes from './TypeEditPanel.module.css';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    modalContainer: {\r\n      zIndex: theme.zIndex.modal,\r\n      background: theme.palette.background.paper,\r\n    },\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    closeIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    doneIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    body: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    backdrop: {\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogBox: {\r\n      // background: theme.palette.background.paper,\r\n      zIndex: theme.zIndex.modal,\r\n    },\r\n    colorDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    colorDialogBody: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    colorDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n    iconDialogBox: {\r\n      // background: theme.palette.background.paper,\r\n      // zIndex: theme.zIndex.modal,\r\n    },\r\n    iconDialogHeader: {\r\n      minHeight: theme.mixins.toolbar.minHeight,\r\n      background: theme.palette.primary.light,\r\n      paddingLeft: theme.spacing(2),\r\n      paddingRight: theme.spacing(2),\r\n      color: theme.palette.background.default,\r\n    },\r\n    iconDialogBody: {\r\n      padding: theme.spacing(2),\r\n      paddingBottom: 0,\r\n    },\r\n    iconDialogFooter: {\r\n      padding: theme.spacing(2),\r\n      gridGap: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst TypeEditPanel = observer(() => {\r\n  // const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n  const theme = useTheme();\r\n\r\n  const colorRef = React.useRef<HTMLDivElement>(null);\r\n  const [colorPickerOpened, setColorPickerOpened] = React.useState(false);\r\n  const colorHandleOpen = () => {\r\n    setColorPickerOpened(true);\r\n  };\r\n  const colorHandleClose = () => {\r\n    setColorPickerOpened(false);\r\n  };\r\n  const [color, setColor] = React.useState(theme.palette.primary.main);\r\n  const [appliedColor, setAppliedColor] = React.useState(\r\n    theme.palette.primary.main\r\n  );\r\n  const colorChange = (pickerProps: any) => {\r\n    setColor(pickerProps.hex);\r\n  };\r\n  const applyColorSelect = () => {\r\n    setAppliedColor(color);\r\n    colorHandleClose();\r\n  };\r\n  const cancelColorSelect = () => {\r\n    setColor(appliedColor);\r\n    colorHandleClose();\r\n  };\r\n\r\n  const iconRef = React.useRef<HTMLDivElement>(null);\r\n  const [iconPickerOpened, setIconPickerOpened] = React.useState(false);\r\n  const iconHandleOpen = () => {\r\n    setIconPickerOpened(true);\r\n  };\r\n  const iconHandleClose = () => {\r\n    setIconPickerOpened(false);\r\n  };\r\n  const [icon, setIcon] = React.useState('');\r\n  const [appliedIcon, setAppliedIcon] = React.useState('');\r\n  const iconChange = (newIcon: string) => {\r\n    setIcon(newIcon);\r\n  };\r\n  const applyIconSelect = () => {\r\n    setAppliedIcon(icon);\r\n    iconHandleClose();\r\n  };\r\n  const cancelIconSelect = () => {\r\n    setIcon(appliedColor);\r\n    iconHandleClose();\r\n  };\r\n\r\n  return (\r\n    <Fade in timeout={1000}>\r\n      <Slide direction=\"up\" in mountOnEnter unmountOnExit timeout={300}>\r\n        <div className={css.modalContainer}>\r\n          <Box\r\n            className={css.overlay}\r\n            style={{ display: colorPickerOpened ? 'block' : 'none' }}\r\n          />\r\n          <AppBar position=\"static\" className={css.firstBar}>\r\n            <Toolbar>\r\n              <Typography variant=\"h6\">Новый тип</Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n            <Toolbar>\r\n              <Box className={css.emptyBox} />\r\n              <IconButton>\r\n                <CloseIcon className={css.closeIcon} />\r\n              </IconButton>\r\n              <IconButton>\r\n                <DoneIcon className={css.doneIcon} />\r\n              </IconButton>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <div className={css.body}>\r\n            <TextField\r\n              error\r\n              fullWidth\r\n              label=\"Name\"\r\n              helperText=\"Type name is required\"\r\n            />\r\n            <TextField\r\n              fullWidth\r\n              label=\"Position\"\r\n              helperText=\"If empty then it will be placed to the end of list\"\r\n            />\r\n            <TextField\r\n              ref={colorRef}\r\n              select\r\n              disabled\r\n              fullWidth\r\n              label=\"Color\"\r\n              InputLabelProps={{ style: { color: appliedColor } }}\r\n              SelectProps={{ style: { color: appliedColor } }}\r\n              InputProps={{\r\n                startAdornment: (\r\n                  <InputAdornment position=\"start\">\r\n                    <Icon>stop</Icon>\r\n                  </InputAdornment>\r\n                ),\r\n              }}\r\n              value={0}\r\n              onClick={colorHandleOpen}\r\n            >\r\n              <MenuItem value={0}>{appliedColor}</MenuItem>\r\n            </TextField>\r\n            <Backdrop open={colorPickerOpened} className={css.backdrop}>\r\n              <Popper\r\n                open={colorPickerOpened}\r\n                anchorEl={colorRef.current}\r\n                role={undefined}\r\n                transition\r\n                disablePortal\r\n                className={css.colorDialogBox}\r\n              >\r\n                <ClickAwayListener onClickAway={colorHandleClose}>\r\n                  <Paper>\r\n                    <div className={css.colorDialogHeader}>\r\n                      <Typography variant=\"h6\">Выберите цвет</Typography>\r\n                    </div>\r\n                    <div className={css.colorDialogBody}>\r\n                      <ChromePicker color={color} onChange={colorChange} />\r\n                    </div>\r\n                    <div className={css.colorDialogFooter}>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        variant=\"contained\"\r\n                        onClick={applyColorSelect}\r\n                      >\r\n                        Выбрать\r\n                      </Button>\r\n                      <Button variant=\"contained\" onClick={cancelColorSelect}>\r\n                        Отмена\r\n                      </Button>\r\n                    </div>\r\n                  </Paper>\r\n                </ClickAwayListener>\r\n              </Popper>\r\n            </Backdrop>\r\n            <TextField\r\n              ref={iconRef}\r\n              select\r\n              disabled\r\n              fullWidth\r\n              label=\"Icon\"\r\n              value={0}\r\n              SelectProps={{ style: { color: appliedColor } }}\r\n              onClick={iconHandleOpen}\r\n            >\r\n              <MenuItem value={0}>\r\n                <Icon>apps</Icon>\r\n              </MenuItem>\r\n            </TextField>\r\n            <Dialog\r\n              open={iconPickerOpened}\r\n              className={css.iconDialogBox}\r\n              fullScreen\r\n            >\r\n              <Paper className={css.iconDialogBox}>\r\n                <div className={css.iconDialogHeader}>\r\n                  <Typography variant=\"h6\">Выберите иконку</Typography>\r\n                </div>\r\n                <div className={css.iconDialogBody}>\r\n                  <IconsChooser />\r\n                </div>\r\n                <div className={css.iconDialogFooter}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    variant=\"contained\"\r\n                    onClick={applyIconSelect}\r\n                  >\r\n                    Выбрать\r\n                  </Button>\r\n                  <Button variant=\"contained\" onClick={cancelIconSelect}>\r\n                    Отмена\r\n                  </Button>\r\n                </div>\r\n              </Paper>\r\n            </Dialog>\r\n          </div>\r\n        </div>\r\n      </Slide>\r\n    </Fade>\r\n  );\r\n});\r\n\r\nexport default TypeEditPanel;\r\n","import CashPanel from '../components/CashPanel/CashPanel';\r\nimport RecordsPanel from '../components/RecordsPanel/RecordsPanel';\r\nimport TypesPanel from '../components/TypesPanel/TypesPanel';\r\nimport MenuPanel from '../components/MenuPanel/MenuPanel';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\nimport TypeEditPanel from '../components/TypeEditPanel/TypeEditPanel';\r\n\r\nconst routes = [\r\n  {\r\n    path: `/`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Cash}`,\r\n    exact: true,\r\n    components: CashPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Records}`,\r\n    exact: true,\r\n    components: RecordsPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}`,\r\n    exact: true,\r\n    components: TypesPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Types}/add`,\r\n    exact: true,\r\n    components: TypeEditPanel,\r\n  },\r\n  {\r\n    path: `/${MenuTypesEnum.Menu}`,\r\n    exact: true,\r\n    components: MenuPanel,\r\n  },\r\n];\r\n\r\nexport default routes;\r\n","import React from 'react';\r\nimport { Route } from 'react-router-dom';\r\n\r\nconst RouteWithSubRoutes = (route: any) => {\r\n  return (\r\n    <Route\r\n      exact={route.exact}\r\n      path={route.path}\r\n      render={(props: any) => {\r\n        if (Array.isArray(route.components)) {\r\n          return route.components.map((Component: any, index: number) => (\r\n            // eslint-disable-next-line react/no-array-index-key\r\n            <Component key={index} {...props} routes={route.routes} />\r\n          ));\r\n        }\r\n        return <route.components {...props} routes={route.routes} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RouteWithSubRoutes;\r\n","import { createStyles, Fab, makeStyles, Theme } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport routes from '../../routes/Routes';\r\nimport RouteWithSubRoutes from '../../routes/RouteWithSubRoutes';\r\nimport Helpers from '../../utility/Helpers';\r\nimport classes from './Body.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\nimport { MenuTypesEnum } from '../../models/Enum';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    body: {\r\n      padding: theme.spacing(2),\r\n    },\r\n    fab: {\r\n      position: 'fixed',\r\n      bottom: theme.spacing(2),\r\n      right: theme.spacing(2),\r\n    },\r\n  })\r\n);\r\n\r\nconst Body = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const getAddButtonLinkUrl = () => {\r\n    let prefix = appStore.selectedMenuUrl;\r\n    if (prefix === '/') {\r\n      prefix += MenuTypesEnum.Cash;\r\n    }\r\n    return `${appStore.selectedMenuUrl}/add`;\r\n  };\r\n\r\n  return (\r\n    <div className={css.body}>\r\n      {routes.map((route, i) => (\r\n        // eslint-disable-next-line react/no-array-index-key\r\n        <RouteWithSubRoutes key={i} {...route} />\r\n      ))}\r\n      {appStore.selectedMenuUrl !== `/${MenuTypesEnum.Menu}` && (\r\n        <Link to={getAddButtonLinkUrl()}>\r\n          <Fab\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            aria-label=\"add\"\r\n            className={css.fab}\r\n          >\r\n            <AddIcon />\r\n          </Fab>\r\n        </Link>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Body;\r\n","import { Tab } from '@material-ui/core';\r\nimport { observer } from 'mobx-react';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\n// const useStyles = makeStyles((theme: Theme) => createStyles({}));\r\n\r\ninterface IProps {\r\n  label?: string;\r\n  to: string;\r\n  icon?: any;\r\n  currentUrl?: string;\r\n}\r\n\r\nconst LinkTab = observer((props: IProps) => {\r\n  // const styles = useStyles();\r\n  // const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const linkClick = (\r\n    event: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    if (props.currentUrl === event.currentTarget.pathname) {\r\n      event.preventDefault();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Tab\r\n      component={Link}\r\n      to={props.to}\r\n      label={props.label}\r\n      icon={props.icon}\r\n      onClick={linkClick}\r\n    />\r\n  );\r\n});\r\n\r\nexport default LinkTab;\r\n","import {\r\n  AppBar,\r\n  Box,\r\n  Button,\r\n  createStyles,\r\n  IconButton,\r\n  makeStyles,\r\n  Tabs,\r\n  Theme,\r\n  Toolbar,\r\n  Typography,\r\n} from '@material-ui/core';\r\nimport {\r\n  ArrowDropDown as ArrowDropDownIcon,\r\n  AttachMoney as AttachMoneyIcon,\r\n  List as ListIcon,\r\n  Menu as MenuIcon,\r\n  MenuBook as MenuBookIcon,\r\n  MoreHoriz as MoreHorizIcon,\r\n  Search as SearchIcon,\r\n} from '@material-ui/icons';\r\nimport { observer } from 'mobx-react';\r\nimport React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Helpers from '../../utility/Helpers';\r\nimport LinkTab from '../LinkTab/LinkTab';\r\nimport classes from './Menu.module.css';\r\nimport useStores from '../../stores/UseStores';\r\nimport AppStore from '../../stores/AppStore';\r\n\r\nconst useStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    firstBar: {\r\n      background: theme.palette.primary.light,\r\n    },\r\n    secondBar: {\r\n      background: theme.palette.primary.dark,\r\n    },\r\n    menuIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    comboButton: {\r\n      color: theme.palette.background.default,\r\n    },\r\n    searchIcon: {\r\n      color: theme.palette.background.default,\r\n    },\r\n  })\r\n);\r\n\r\nconst Menu = observer(() => {\r\n  const { appStore }: { appStore: AppStore } = useStores();\r\n\r\n  const styles = useStyles();\r\n  const css = Helpers.combineStyles(styles, classes);\r\n\r\n  const history = useHistory();\r\n  const menuTabChanged = (event: any, newValue: number) => {\r\n    appStore.setSelectedMenuIndex(newValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    const listener = history.listen(() => {\r\n      appStore.loadSelectedMenuIndex(history.location.pathname);\r\n    });\r\n\r\n    return () => {\r\n      listener();\r\n    };\r\n  });\r\n\r\n  const menuTabProps = (name: string, href?: string) => {\r\n    return {\r\n      id: `menu-tab-${name}`,\r\n      'aria-controls': `menu-tab-${name}`,\r\n      to: href || `/${name}`,\r\n      currentUrl: appStore.selectedMenuUrl,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar position=\"static\" className={css.firstBar}>\r\n        <Toolbar>\r\n          {appStore.selectedMenuIndex === 0 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Внести оплату\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 1 && (\r\n            <Box className={css.headerBox}>\r\n              <IconButton>\r\n                <MenuIcon className={css.menuIcon} />\r\n              </IconButton>\r\n              <Button\r\n                className={css.comboButton}\r\n                endIcon={<ArrowDropDownIcon />}\r\n              >\r\n                <span className={css.comboButtonTextBox}>\r\n                  <span>{new Date().toDateString()}</span>\r\n                  <span>Записей 21</span>\r\n                </span>\r\n              </Button>\r\n              <IconButton>\r\n                <SearchIcon className={css.searchIcon} />\r\n              </IconButton>\r\n            </Box>\r\n          )}\r\n          {appStore.selectedMenuIndex === 2 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Типы\r\n            </Typography>\r\n          )}\r\n          {appStore.selectedMenuIndex === 3 && (\r\n            <Typography variant=\"h6\" className={css.headerTitle}>\r\n              Еще\r\n            </Typography>\r\n          )}\r\n        </Toolbar>\r\n      </AppBar>\r\n      <AppBar position=\"static\" color=\"primary\" className={css.secondBar}>\r\n        <Tabs\r\n          value={appStore.selectedMenuIndex}\r\n          onChange={menuTabChanged}\r\n          aria-label=\"menu tabs\"\r\n          variant=\"fullWidth\"\r\n        >\r\n          <LinkTab {...menuTabProps('cash', '/')} icon={<AttachMoneyIcon />} />\r\n          <LinkTab {...menuTabProps('records')} icon={<MenuBookIcon />} />\r\n          <LinkTab {...menuTabProps('types')} icon={<ListIcon />} />\r\n          <LinkTab {...menuTabProps('menu')} icon={<MoreHorizIcon />} />\r\n        </Tabs>\r\n      </AppBar>\r\n    </>\r\n  );\r\n});\r\n\r\nexport default Menu;\r\n","import AppStore from '../stores/AppStore';\r\n\r\nexport default class CacheService {\r\n  private appStore: AppStore;\r\n\r\n  constructor(appStore: AppStore) {\r\n    this.appStore = appStore;\r\n    this.get('appVersion', new Date()).then((r) => {\r\n      if (appStore.version !== r) {\r\n        this.clear();\r\n        this.add('appVersion', appStore.version);\r\n      }\r\n    });\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async add(key: string, entry: any) {\r\n    let entryStr: string;\r\n    if (typeof entry !== 'string') {\r\n      entryStr = JSON.stringify({ date: new Date(), entry });\r\n    } else {\r\n      entryStr = entry;\r\n    }\r\n    const result = await localStorage.setItem(key, entryStr);\r\n    return result;\r\n  }\r\n\r\n  public async get<T>(key: string, validAt?: Date): Promise<any> {\r\n    let result: string | null = null;\r\n    if (!this.appStore.enableCache) {\r\n      return result;\r\n    }\r\n    result = await localStorage.getItem(key);\r\n    if (result) {\r\n      console.log(`Key: ${key} loaded from cache`);\r\n    }\r\n    if (!result || !result.length) {\r\n      return result;\r\n    }\r\n    try {\r\n      const parsedResult = JSON.parse(result);\r\n      if (validAt) {\r\n        if (new Date(parsedResult.date) < validAt) {\r\n          return parsedResult.entry;\r\n        }\r\n        console.log(\r\n          `Key: ${key} date expired. ValidAt: ${validAt}. ExpiredAt: ${parsedResult.date}`\r\n        );\r\n        return null;\r\n      }\r\n      return parsedResult.entry;\r\n    } catch {\r\n      return result;\r\n    }\r\n  }\r\n\r\n  // eslint-disable-next-line class-methods-use-this\r\n  public async clear() {\r\n    await localStorage.clear();\r\n  }\r\n}\r\n","import { observable, action } from 'mobx';\r\nimport * as AppJson from '../../package.json';\r\nimport ServicesStore from './ServicesStore';\r\nimport { MenuTypesEnum } from '../models/Enum';\r\n\r\nclass AppStore {\r\n  version = AppJson.version;\r\n  services!: ServicesStore;\r\n\r\n  // NOTE: when application is change version, cache will be cleared\r\n  @observable enableCache = true;\r\n  @observable selectedMenuIndex = 0;\r\n  @observable selectedMenuUrl = '/';\r\n\r\n  @action setSelectedMenuIndex = (newValue: number) => {\r\n    this.selectedMenuIndex = newValue;\r\n  };\r\n\r\n  @action loadSelectedMenuIndex = (url: string) => {\r\n    const urlParts = url.split('/');\r\n    if (urlParts.length > 1) {\r\n      if (urlParts[1] === MenuTypesEnum.Records) {\r\n        this.selectedMenuIndex = 1;\r\n      } else if (urlParts[1] === MenuTypesEnum.Types) {\r\n        this.selectedMenuIndex = 2;\r\n      } else if (urlParts[1] === MenuTypesEnum.Menu) {\r\n        this.selectedMenuIndex = 3;\r\n      } else {\r\n        this.selectedMenuIndex = 0;\r\n      }\r\n    } else {\r\n      this.selectedMenuIndex = 0;\r\n    }\r\n    if (this.selectedMenuIndex === 0) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Cash}`;\r\n    } else if (this.selectedMenuIndex === 1) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Records}`;\r\n    } else if (this.selectedMenuIndex === 2) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Types}`;\r\n    } else if (this.selectedMenuIndex === 3) {\r\n      this.selectedMenuUrl = `/${MenuTypesEnum.Menu}`;\r\n    }\r\n  };\r\n}\r\n\r\nexport default AppStore;\r\n","import CacheService from '../services/CacheService';\r\n\r\nclass ServicesStore {\r\n  cache: CacheService;\r\n\r\n  constructor(cache: CacheService) {\r\n    this.cache = cache;\r\n  }\r\n}\r\n\r\nexport default ServicesStore;\r\n","import {\r\n  ChildFriendly,\r\n  DirectionsBus,\r\n  Fastfood,\r\n  ImportantDevices,\r\n  LocalGasStation,\r\n  LocalGroceryStore,\r\n  LocalMall,\r\n  MoreVert,\r\n} from '@material-ui/icons';\r\nimport { observable } from 'mobx';\r\nimport TypeEntry from '../models/entries/TypeEntry';\r\n\r\nclass TypesStore {\r\n  @observable types!: TypeEntry[];\r\n\r\n  constructor() {\r\n    this.initializeDefaultTypes();\r\n  }\r\n\r\n  private initializeDefaultTypes = () => {\r\n    this.types = [];\r\n\r\n    this.types.push({\r\n      IconComponent: Fastfood,\r\n      name: 'menuFood',\r\n      iconColor: 'palette.secondary.dark',\r\n      label: 'Еда',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalGroceryStore,\r\n      name: 'menuStore',\r\n      iconColor: 'palette.success.dark',\r\n      label: 'Магазин',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: DirectionsBus,\r\n      name: 'menuBus',\r\n      iconColor: 'palette.warning.dark',\r\n      label: 'Автобус',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalMall,\r\n      name: 'menuClothes',\r\n      iconColor: 'palette.primary.dark',\r\n      label: 'Вещи',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: LocalGasStation,\r\n      name: 'menuGasStation',\r\n      iconColor: 'palette.primary.light',\r\n      label: 'Заправка',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: ChildFriendly,\r\n      name: 'menuChilds',\r\n      iconColor: 'palette.warning.light',\r\n      label: 'Дети',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: ImportantDevices,\r\n      name: 'menuServices',\r\n      iconColor: 'palette.secondary.light',\r\n      label: 'Услуги',\r\n    });\r\n\r\n    this.types.push({\r\n      IconComponent: MoreVert,\r\n      name: 'menuOther',\r\n      iconColor: 'palette.success.light',\r\n      label: 'Другое',\r\n    });\r\n  };\r\n}\r\n\r\nexport default TypesStore;\r\n","import * as AllIcons from '@material-ui/icons';\r\nimport { action, observable, computed } from 'mobx';\r\nimport CacheService from '../services/CacheService';\r\nimport { IconTypesEnum } from '../models/Enum';\r\n\r\nclass IconsStore {\r\n  @observable iconsTypes: Map<IconTypesEnum, string>;\r\n  @observable filledIcons: string[] = [];\r\n  @observable outlinedIcons: string[] = [];\r\n  @observable roundedIcons: string[] = [];\r\n  @observable twoToneIcons: string[] = [];\r\n  @observable sharpIcons: string[] = [];\r\n  @observable iconsOnOnePage = 100;\r\n  @observable foundedIcons: string[] = [];\r\n  @observable foundedTotalCount = 0;\r\n\r\n  @computed get pagesCount() {\r\n    return Math.ceil(this.foundedTotalCount / this.iconsOnOnePage);\r\n  }\r\n\r\n  private cacheService: CacheService;\r\n\r\n  constructor(cacheService: CacheService) {\r\n    this.cacheService = cacheService;\r\n\r\n    this.iconsTypes = new Map();\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Filled,\r\n      IconTypesEnum[IconTypesEnum.Filled]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Outlined,\r\n      IconTypesEnum[IconTypesEnum.Outlined]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Rounded,\r\n      IconTypesEnum[IconTypesEnum.Rounded]\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.TwoTone,\r\n      IconTypesEnum.TwoTone.toString()\r\n    );\r\n    this.iconsTypes.set(\r\n      IconTypesEnum.Sharp,\r\n      IconTypesEnum[IconTypesEnum.Sharp]\r\n    );\r\n\r\n    this.cacheService.get('allIcons').then((allIcons) => {\r\n      if (!allIcons) {\r\n        Object.keys(AllIcons).forEach((k: string) => {\r\n          if (\r\n            k.indexOf(IconTypesEnum.Outlined) ===\r\n            k.length - IconTypesEnum.Outlined.length\r\n          ) {\r\n            this.outlinedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Rounded) ===\r\n            k.length - IconTypesEnum.Rounded.length\r\n          ) {\r\n            this.roundedIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.TwoTone) ===\r\n            k.length - IconTypesEnum.TwoTone.length\r\n          ) {\r\n            this.twoToneIcons.push(k);\r\n          } else if (\r\n            k.indexOf(IconTypesEnum.Sharp) ===\r\n            k.length - IconTypesEnum.Sharp.length\r\n          ) {\r\n            this.sharpIcons.push(k);\r\n          } else {\r\n            this.filledIcons.push(k);\r\n          }\r\n        });\r\n        const allIconsForCache = {\r\n          outlinedIcons: this.outlinedIcons,\r\n          roundedIcons: this.roundedIcons,\r\n          twoToneIcons: this.twoToneIcons,\r\n          sharpIcons: this.sharpIcons,\r\n          filledIcons: this.filledIcons,\r\n        };\r\n        this.cacheService.add('allIcons', allIconsForCache);\r\n      } else {\r\n        this.filledIcons = allIcons.filledIcons;\r\n        this.outlinedIcons = allIcons.outlinedIcons;\r\n        this.roundedIcons = allIcons.roundedIcons;\r\n        this.twoToneIcons = allIcons.twoToneIcons;\r\n        this.sharpIcons = allIcons.sharpIcons;\r\n      }\r\n    });\r\n  }\r\n\r\n  @action searchIconsByFilterAndPage = (\r\n    filter: string,\r\n    types: IconTypesEnum[],\r\n    page: number\r\n  ) => {\r\n    let result: string[] = [];\r\n    const lowerCasedFilter = filter.toLowerCase();\r\n    types.forEach((type: IconTypesEnum) => {\r\n      let workingArray: string[] | null = null;\r\n      if (type === IconTypesEnum.Filled) {\r\n        workingArray = this.filledIcons;\r\n      } else if (type === IconTypesEnum.Outlined) {\r\n        workingArray = this.outlinedIcons;\r\n      } else if (type === IconTypesEnum.Rounded) {\r\n        workingArray = this.roundedIcons;\r\n      } else if (type === IconTypesEnum.TwoTone) {\r\n        workingArray = this.twoToneIcons;\r\n      } else if (type === IconTypesEnum.Sharp) {\r\n        workingArray = this.sharpIcons;\r\n      }\r\n      if (workingArray) {\r\n        result = result.concat(\r\n          workingArray.filter(\r\n            (i: string) => i.toLowerCase().indexOf(lowerCasedFilter) !== -1\r\n          )\r\n        );\r\n      }\r\n    });\r\n    this.foundedTotalCount = result.length;\r\n    this.foundedIcons = result.slice(\r\n      (page - 1) * this.iconsOnOnePage,\r\n      page * this.iconsOnOnePage\r\n    );\r\n  };\r\n\r\n  getIconRightStringNameForFontToShow = (iconName: string) => {\r\n    const result = iconName.split(/(?=[A-Z])/);\r\n    let resultStr = result?.map((r) => r.toLowerCase()).join('_');\r\n    const numberMatch = resultStr.match(/[0-9]+/);\r\n    if (numberMatch?.index) {\r\n      resultStr = `${resultStr.substring(\r\n        0,\r\n        numberMatch.index\r\n      )}_${resultStr.substring(numberMatch.index)}`;\r\n    }\r\n    return resultStr;\r\n  };\r\n}\r\n\r\nexport default IconsStore;\r\n","import CacheService from '../services/CacheService';\r\nimport AppStore from './AppStore';\r\nimport ServicesStore from './ServicesStore';\r\nimport TypesStore from './TypesStore';\r\nimport IconsStore from './IconsStore';\r\n\r\nconst appStore = new AppStore();\r\nconst cacheService = new CacheService(appStore);\r\nconst servicesStore = new ServicesStore(cacheService);\r\nappStore.services = servicesStore;\r\nconst typesStore = new TypesStore();\r\nconst iconsStore = new IconsStore(cacheService);\r\n\r\nconst stores = {\r\n  appStore,\r\n  typesStore,\r\n  iconsStore,\r\n};\r\n\r\nexport default stores;\r\n","import { CssBaseline } from '@material-ui/core';\r\nimport { Provider } from 'mobx-react';\r\nimport React from 'react';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport classes from './App.module.css';\r\nimport Body from './components/Body/Body';\r\nimport Menu from './components/Menu/Menu';\r\nimport store from './stores';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Provider store={store}>\r\n      <Router>\r\n        <CssBaseline />\r\n        <div className={classes.page}>\r\n          <Menu />\r\n          <Body />\r\n        </div>\r\n      </Router>\r\n    </Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}